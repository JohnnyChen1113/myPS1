/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fmnt%2Fc%2FUsers%2Fjunhaochen%2FDocuments%2FmyPS1%2Fsrc%2Fapp%2Fpage.tsx&server=false!":
/*!******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fmnt%2Fc%2FUsers%2Fjunhaochen%2FDocuments%2FmyPS1%2Fsrc%2Fapp%2Fpage.tsx&server=false! ***!
  \******************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(app-pages-browser)/./src/app/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZtbnQlMkZjJTJGVXNlcnMlMkZqdW5oYW9jaGVuJTJGRG9jdW1lbnRzJTJGbXlQUzElMkZzcmMlMkZhcHAlMkZwYWdlLnRzeCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/MWNjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9tbnQvYy9Vc2Vycy9qdW5oYW9jaGVuL0RvY3VtZW50cy9teVBTMS9zcmMvYXBwL3BhZ2UudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fmnt%2Fc%2FUsers%2Fjunhaochen%2FDocuments%2FmyPS1%2Fsrc%2Fapp%2Fpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/css-box-model/dist/css-box-model.esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-box-model/dist/css-box-model.esm.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateBox: function() { return /* binding */ calculateBox; },\n/* harmony export */   createBox: function() { return /* binding */ createBox; },\n/* harmony export */   expand: function() { return /* binding */ expand; },\n/* harmony export */   getBox: function() { return /* binding */ getBox; },\n/* harmony export */   getRect: function() { return /* binding */ getRect; },\n/* harmony export */   offset: function() { return /* binding */ offset; },\n/* harmony export */   shrink: function() { return /* binding */ shrink; },\n/* harmony export */   withScroll: function() { return /* binding */ withScroll; }\n/* harmony export */ });\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"(app-pages-browser)/./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n\nvar getRect = function getRect(_ref) {\n    var top = _ref.top, right = _ref.right, bottom = _ref.bottom, left = _ref.left;\n    var width = right - left;\n    var height = bottom - top;\n    var rect = {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left,\n        width: width,\n        height: height,\n        x: left,\n        y: top,\n        center: {\n            x: (right + left) / 2,\n            y: (bottom + top) / 2\n        }\n    };\n    return rect;\n};\nvar expand = function expand(target, expandBy) {\n    return {\n        top: target.top - expandBy.top,\n        left: target.left - expandBy.left,\n        bottom: target.bottom + expandBy.bottom,\n        right: target.right + expandBy.right\n    };\n};\nvar shrink = function shrink(target, shrinkBy) {\n    return {\n        top: target.top + shrinkBy.top,\n        left: target.left + shrinkBy.left,\n        bottom: target.bottom - shrinkBy.bottom,\n        right: target.right - shrinkBy.right\n    };\n};\nvar shift = function shift(target, shiftBy) {\n    return {\n        top: target.top + shiftBy.y,\n        left: target.left + shiftBy.x,\n        bottom: target.bottom + shiftBy.y,\n        right: target.right + shiftBy.x\n    };\n};\nvar noSpacing = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n};\nvar createBox = function createBox(_ref2) {\n    var borderBox = _ref2.borderBox, _ref2$margin = _ref2.margin, margin = _ref2$margin === void 0 ? noSpacing : _ref2$margin, _ref2$border = _ref2.border, border = _ref2$border === void 0 ? noSpacing : _ref2$border, _ref2$padding = _ref2.padding, padding = _ref2$padding === void 0 ? noSpacing : _ref2$padding;\n    var marginBox = getRect(expand(borderBox, margin));\n    var paddingBox = getRect(shrink(borderBox, border));\n    var contentBox = getRect(shrink(paddingBox, padding));\n    return {\n        marginBox: marginBox,\n        borderBox: getRect(borderBox),\n        paddingBox: paddingBox,\n        contentBox: contentBox,\n        margin: margin,\n        border: border,\n        padding: padding\n    };\n};\nvar parse = function parse(raw) {\n    var value = raw.slice(0, -2);\n    var suffix = raw.slice(-2);\n    if (suffix !== \"px\") {\n        return 0;\n    }\n    var result = Number(value);\n    !!isNaN(result) ?  true ? (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(false, \"Could not parse value [raw: \" + raw + \", without suffix: \" + value + \"]\") : 0 : void 0;\n    return result;\n};\nvar getWindowScroll = function getWindowScroll() {\n    return {\n        x: window.pageXOffset,\n        y: window.pageYOffset\n    };\n};\nvar offset = function offset(original, change) {\n    var borderBox = original.borderBox, border = original.border, margin = original.margin, padding = original.padding;\n    var shifted = shift(borderBox, change);\n    return createBox({\n        borderBox: shifted,\n        border: border,\n        margin: margin,\n        padding: padding\n    });\n};\nvar withScroll = function withScroll(original, scroll) {\n    if (scroll === void 0) {\n        scroll = getWindowScroll();\n    }\n    return offset(original, scroll);\n};\nvar calculateBox = function calculateBox(borderBox, styles) {\n    var margin = {\n        top: parse(styles.marginTop),\n        right: parse(styles.marginRight),\n        bottom: parse(styles.marginBottom),\n        left: parse(styles.marginLeft)\n    };\n    var padding = {\n        top: parse(styles.paddingTop),\n        right: parse(styles.paddingRight),\n        bottom: parse(styles.paddingBottom),\n        left: parse(styles.paddingLeft)\n    };\n    var border = {\n        top: parse(styles.borderTopWidth),\n        right: parse(styles.borderRightWidth),\n        bottom: parse(styles.borderBottomWidth),\n        left: parse(styles.borderLeftWidth)\n    };\n    return createBox({\n        borderBox: borderBox,\n        margin: margin,\n        padding: padding,\n        border: border\n    });\n};\nvar getBox = function getBox(el) {\n    var borderBox = el.getBoundingClientRect();\n    var styles = window.getComputedStyle(el);\n    return calculateBox(borderBox, styles);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/css-box-model/dist/css-box-model.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar reactIs = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-is/index.js\");\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */ var REACT_STATICS = {\n    childContextTypes: true,\n    contextType: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromError: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\nvar FORWARD_REF_STATICS = {\n    \"$$typeof\": true,\n    render: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true\n};\nvar MEMO_STATICS = {\n    \"$$typeof\": true,\n    compare: true,\n    defaultProps: true,\n    displayName: true,\n    propTypes: true,\n    type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\nfunction getStatics(component) {\n    // React v16.11 and below\n    if (reactIs.isMemo(component)) {\n        return MEMO_STATICS;\n    } // React v16.12 and above\n    return TYPE_STATICS[component[\"$$typeof\"]] || REACT_STATICS;\n}\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== \"string\") {\n        // don't hoist over string (html) components\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n        var keys = getOwnPropertyNames(sourceComponent);\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n        var targetStatics = getStatics(targetComponent);\n        var sourceStatics = getStatics(sourceComponent);\n        for(var i = 0; i < keys.length; ++i){\n            var key = keys[i];\n            if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try {\n                    // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n    }\n    return targetComponent;\n}\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLElBQUlBLFVBQVVDLG1CQUFPQSxDQUFDO0FBRXRCOzs7Q0FHQyxHQUNELElBQUlDLGdCQUFnQjtJQUNsQkMsbUJBQW1CO0lBQ25CQyxhQUFhO0lBQ2JDLGNBQWM7SUFDZEMsY0FBYztJQUNkQyxhQUFhO0lBQ2JDLGlCQUFpQjtJQUNqQkMsMEJBQTBCO0lBQzFCQywwQkFBMEI7SUFDMUJDLFFBQVE7SUFDUkMsV0FBVztJQUNYQyxNQUFNO0FBQ1I7QUFDQSxJQUFJQyxnQkFBZ0I7SUFDbEJDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDLE9BQU87QUFDVDtBQUNBLElBQUlDLHNCQUFzQjtJQUN4QixZQUFZO0lBQ1pDLFFBQVE7SUFDUmpCLGNBQWM7SUFDZEMsYUFBYTtJQUNiSyxXQUFXO0FBQ2I7QUFDQSxJQUFJWSxlQUFlO0lBQ2pCLFlBQVk7SUFDWkMsU0FBUztJQUNUbkIsY0FBYztJQUNkQyxhQUFhO0lBQ2JLLFdBQVc7SUFDWEMsTUFBTTtBQUNSO0FBQ0EsSUFBSWEsZUFBZSxDQUFDO0FBQ3BCQSxZQUFZLENBQUMxQixRQUFRMkIsVUFBVSxDQUFDLEdBQUdMO0FBQ25DSSxZQUFZLENBQUMxQixRQUFRNEIsSUFBSSxDQUFDLEdBQUdKO0FBRTdCLFNBQVNLLFdBQVdDLFNBQVM7SUFDM0IseUJBQXlCO0lBQ3pCLElBQUk5QixRQUFRK0IsTUFBTSxDQUFDRCxZQUFZO1FBQzdCLE9BQU9OO0lBQ1QsRUFBRSx5QkFBeUI7SUFHM0IsT0FBT0UsWUFBWSxDQUFDSSxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUk1QjtBQUNoRDtBQUVBLElBQUk4QixpQkFBaUJDLE9BQU9ELGNBQWM7QUFDMUMsSUFBSUUsc0JBQXNCRCxPQUFPQyxtQkFBbUI7QUFDcEQsSUFBSUMsd0JBQXdCRixPQUFPRSxxQkFBcUI7QUFDeEQsSUFBSUMsMkJBQTJCSCxPQUFPRyx3QkFBd0I7QUFDOUQsSUFBSUMsaUJBQWlCSixPQUFPSSxjQUFjO0FBQzFDLElBQUlDLGtCQUFrQkwsT0FBT2hCLFNBQVM7QUFDdEMsU0FBU3NCLHFCQUFxQkMsZUFBZSxFQUFFQyxlQUFlLEVBQUVDLFNBQVM7SUFDdkUsSUFBSSxPQUFPRCxvQkFBb0IsVUFBVTtRQUN2Qyw0Q0FBNEM7UUFDNUMsSUFBSUgsaUJBQWlCO1lBQ25CLElBQUlLLHFCQUFxQk4sZUFBZUk7WUFFeEMsSUFBSUUsc0JBQXNCQSx1QkFBdUJMLGlCQUFpQjtnQkFDaEVDLHFCQUFxQkMsaUJBQWlCRyxvQkFBb0JEO1lBQzVEO1FBQ0Y7UUFFQSxJQUFJRSxPQUFPVixvQkFBb0JPO1FBRS9CLElBQUlOLHVCQUF1QjtZQUN6QlMsT0FBT0EsS0FBS0MsTUFBTSxDQUFDVixzQkFBc0JNO1FBQzNDO1FBRUEsSUFBSUssZ0JBQWdCakIsV0FBV1c7UUFDL0IsSUFBSU8sZ0JBQWdCbEIsV0FBV1k7UUFFL0IsSUFBSyxJQUFJTyxJQUFJLEdBQUdBLElBQUlKLEtBQUs1QixNQUFNLEVBQUUsRUFBRWdDLEVBQUc7WUFDcEMsSUFBSUMsTUFBTUwsSUFBSSxDQUFDSSxFQUFFO1lBRWpCLElBQUksQ0FBQ2xDLGFBQWEsQ0FBQ21DLElBQUksSUFBSSxDQUFFUCxDQUFBQSxhQUFhQSxTQUFTLENBQUNPLElBQUksS0FBSyxDQUFFRixDQUFBQSxpQkFBaUJBLGFBQWEsQ0FBQ0UsSUFBSSxLQUFLLENBQUVILENBQUFBLGlCQUFpQkEsYUFBYSxDQUFDRyxJQUFJLEdBQUc7Z0JBQzdJLElBQUlDLGFBQWFkLHlCQUF5QkssaUJBQWlCUTtnQkFFM0QsSUFBSTtvQkFDRiwyQ0FBMkM7b0JBQzNDakIsZUFBZVEsaUJBQWlCUyxLQUFLQztnQkFDdkMsRUFBRSxPQUFPQyxHQUFHLENBQUM7WUFDZjtRQUNGO0lBQ0Y7SUFFQSxPQUFPWDtBQUNUO0FBRUFZLE9BQU9DLE9BQU8sR0FBR2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzPzkxZGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwibmFtZXMiOlsicmVhY3RJcyIsInJlcXVpcmUiLCJSRUFDVF9TVEFUSUNTIiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb250ZXh0VHlwZSIsImNvbnRleHRUeXBlcyIsImRlZmF1bHRQcm9wcyIsImRpc3BsYXlOYW1lIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwidHlwZSIsIktOT1dOX1NUQVRJQ1MiLCJuYW1lIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiY2FsbGVyIiwiY2FsbGVlIiwiYXJndW1lbnRzIiwiYXJpdHkiLCJGT1JXQVJEX1JFRl9TVEFUSUNTIiwicmVuZGVyIiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsIkZvcndhcmRSZWYiLCJNZW1vIiwiZ2V0U3RhdGljcyIsImNvbXBvbmVudCIsImlzTWVtbyIsImRlZmluZVByb3BlcnR5IiwiT2JqZWN0IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJrZXlzIiwiY29uY2F0IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJpIiwia2V5IiwiZGVzY3JpcHRvciIsImUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/memoize-one/dist/memoize-one.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/memoize-one/dist/memoize-one.esm.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar safeIsNaN = Number.isNaN || function ponyfill(value) {\n    return typeof value === \"number\" && value !== value;\n};\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for(var i = 0; i < newInputs.length; i++){\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) {\n        isEqual = areInputsEqual;\n    }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for(var _i = 0; _i < arguments.length; _i++){\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (memoizeOne);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9tZW1vaXplLW9uZS9kaXN0L21lbW9pemUtb25lLmVzbS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsWUFBWUMsT0FBT0MsS0FBSyxJQUN4QixTQUFTQyxTQUFTQyxLQUFLO0lBQ25CLE9BQU8sT0FBT0EsVUFBVSxZQUFZQSxVQUFVQTtBQUNsRDtBQUNKLFNBQVNDLFFBQVFDLEtBQUssRUFBRUMsTUFBTTtJQUMxQixJQUFJRCxVQUFVQyxRQUFRO1FBQ2xCLE9BQU87SUFDWDtJQUNBLElBQUlQLFVBQVVNLFVBQVVOLFVBQVVPLFNBQVM7UUFDdkMsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ0EsU0FBU0MsZUFBZUMsU0FBUyxFQUFFQyxVQUFVO0lBQ3pDLElBQUlELFVBQVVFLE1BQU0sS0FBS0QsV0FBV0MsTUFBTSxFQUFFO1FBQ3hDLE9BQU87SUFDWDtJQUNBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxVQUFVRSxNQUFNLEVBQUVDLElBQUs7UUFDdkMsSUFBSSxDQUFDUCxRQUFRSSxTQUFTLENBQUNHLEVBQUUsRUFBRUYsVUFBVSxDQUFDRSxFQUFFLEdBQUc7WUFDdkMsT0FBTztRQUNYO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFFQSxTQUFTQyxXQUFXQyxRQUFRLEVBQUVULE9BQU87SUFDakMsSUFBSUEsWUFBWSxLQUFLLEdBQUc7UUFBRUEsVUFBVUc7SUFBZ0I7SUFDcEQsSUFBSU87SUFDSixJQUFJQyxXQUFXLEVBQUU7SUFDakIsSUFBSUM7SUFDSixJQUFJQyxhQUFhO0lBQ2pCLFNBQVNDO1FBQ0wsSUFBSUMsVUFBVSxFQUFFO1FBQ2hCLElBQUssSUFBSUMsS0FBSyxHQUFHQSxLQUFLQyxVQUFVWCxNQUFNLEVBQUVVLEtBQU07WUFDMUNELE9BQU8sQ0FBQ0MsR0FBRyxHQUFHQyxTQUFTLENBQUNELEdBQUc7UUFDL0I7UUFDQSxJQUFJSCxjQUFjSCxhQUFhLElBQUksSUFBSVYsUUFBUWUsU0FBU0osV0FBVztZQUMvRCxPQUFPQztRQUNYO1FBQ0FBLGFBQWFILFNBQVNTLEtBQUssQ0FBQyxJQUFJLEVBQUVIO1FBQ2xDRixhQUFhO1FBQ2JILFdBQVcsSUFBSTtRQUNmQyxXQUFXSTtRQUNYLE9BQU9IO0lBQ1g7SUFDQSxPQUFPRTtBQUNYO0FBRUEsK0RBQWVOLFVBQVVBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21lbW9pemUtb25lL2Rpc3QvbWVtb2l6ZS1vbmUuZXNtLmpzPzFmMjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNhZmVJc05hTiA9IE51bWJlci5pc05hTiB8fFxuICAgIGZ1bmN0aW9uIHBvbnlmaWxsKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIHZhbHVlICE9PSB2YWx1ZTtcbiAgICB9O1xuZnVuY3Rpb24gaXNFcXVhbChmaXJzdCwgc2Vjb25kKSB7XG4gICAgaWYgKGZpcnN0ID09PSBzZWNvbmQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChzYWZlSXNOYU4oZmlyc3QpICYmIHNhZmVJc05hTihzZWNvbmQpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5mdW5jdGlvbiBhcmVJbnB1dHNFcXVhbChuZXdJbnB1dHMsIGxhc3RJbnB1dHMpIHtcbiAgICBpZiAobmV3SW5wdXRzLmxlbmd0aCAhPT0gbGFzdElucHV0cy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5ld0lucHV0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoIWlzRXF1YWwobmV3SW5wdXRzW2ldLCBsYXN0SW5wdXRzW2ldKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBtZW1vaXplT25lKHJlc3VsdEZuLCBpc0VxdWFsKSB7XG4gICAgaWYgKGlzRXF1YWwgPT09IHZvaWQgMCkgeyBpc0VxdWFsID0gYXJlSW5wdXRzRXF1YWw7IH1cbiAgICB2YXIgbGFzdFRoaXM7XG4gICAgdmFyIGxhc3RBcmdzID0gW107XG4gICAgdmFyIGxhc3RSZXN1bHQ7XG4gICAgdmFyIGNhbGxlZE9uY2UgPSBmYWxzZTtcbiAgICBmdW5jdGlvbiBtZW1vaXplZCgpIHtcbiAgICAgICAgdmFyIG5ld0FyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIG5ld0FyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2FsbGVkT25jZSAmJiBsYXN0VGhpcyA9PT0gdGhpcyAmJiBpc0VxdWFsKG5ld0FyZ3MsIGxhc3RBcmdzKSkge1xuICAgICAgICAgICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgbGFzdFJlc3VsdCA9IHJlc3VsdEZuLmFwcGx5KHRoaXMsIG5ld0FyZ3MpO1xuICAgICAgICBjYWxsZWRPbmNlID0gdHJ1ZTtcbiAgICAgICAgbGFzdFRoaXMgPSB0aGlzO1xuICAgICAgICBsYXN0QXJncyA9IG5ld0FyZ3M7XG4gICAgICAgIHJldHVybiBsYXN0UmVzdWx0O1xuICAgIH1cbiAgICByZXR1cm4gbWVtb2l6ZWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1lbW9pemVPbmU7XG4iXSwibmFtZXMiOlsic2FmZUlzTmFOIiwiTnVtYmVyIiwiaXNOYU4iLCJwb255ZmlsbCIsInZhbHVlIiwiaXNFcXVhbCIsImZpcnN0Iiwic2Vjb25kIiwiYXJlSW5wdXRzRXF1YWwiLCJuZXdJbnB1dHMiLCJsYXN0SW5wdXRzIiwibGVuZ3RoIiwiaSIsIm1lbW9pemVPbmUiLCJyZXN1bHRGbiIsImxhc3RUaGlzIiwibGFzdEFyZ3MiLCJsYXN0UmVzdWx0IiwiY2FsbGVkT25jZSIsIm1lbW9pemVkIiwibmV3QXJncyIsIl9pIiwiYXJndW1lbnRzIiwiYXBwbHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/memoize-one/dist/memoize-one.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar assign = Object.assign.bind(Object);\nmodule.exports = assign;\nmodule.exports[\"default\"] = module.exports; //# sourceMappingURL=object-assign.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL29iamVjdC1hc3NpZ24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxTQUFTQyxPQUFPRCxNQUFNLENBQUNFLElBQUksQ0FBQ0Q7QUFDaENFLE9BQU9DLE9BQU8sR0FBR0o7QUFDakJHLHlCQUFzQixHQUFHQSxPQUFPQyxPQUFPLEVBRXZDLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzP2U3ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgYXNzaWduID0gT2JqZWN0LmFzc2lnbi5iaW5kKE9iamVjdCk7XG5tb2R1bGUuZXhwb3J0cyA9IGFzc2lnbjtcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBtb2R1bGUuZXhwb3J0cztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LWFzc2lnbi5qcy5tYXAiXSwibmFtZXMiOlsiYXNzaWduIiwiT2JqZWN0IiwiYmluZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nvar printWarning = function() {};\nif (true) {\n    var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"(app-pages-browser)/./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n    var loggedTypeFailures = {};\n    var has = __webpack_require__(/*! ./lib/has */ \"(app-pages-browser)/./node_modules/prop-types/lib/has.js\");\n    printWarning = function(text) {\n        var message = \"Warning: \" + text;\n        if (typeof console !== \"undefined\") {\n            console.error(message);\n        }\n        try {\n            // --- Welcome to debugging React ---\n            // This error was thrown as a convenience so that you can use this stack\n            // to find the callsite that caused this warning to fire.\n            throw new Error(message);\n        } catch (x) {}\n    };\n}\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n    if (true) {\n        for(var typeSpecName in typeSpecs){\n            if (has(typeSpecs, typeSpecName)) {\n                var error;\n                // Prop type validation may throw. In case they do, we don't want to\n                // fail the render phase where it didn't fail before. So we log it.\n                // After these have been cleaned up, we'll let them throw.\n                try {\n                    // This is intentionally an invariant that gets caught. It's the same\n                    // behavior as without this statement except with a better message.\n                    if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                        var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                        err.name = \"Invariant Violation\";\n                        throw err;\n                    }\n                    error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n                } catch (ex) {\n                    error = ex;\n                }\n                if (error && !(error instanceof Error)) {\n                    printWarning((componentName || \"React class\") + \": type specification of \" + location + \" `\" + typeSpecName + \"` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a \" + typeof error + \". \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\");\n                }\n                if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n                    // Only monitor this failure once because there tends to be a lot of the\n                    // same error.\n                    loggedTypeFailures[error.message] = true;\n                    var stack = getStack ? getStack() : \"\";\n                    printWarning(\"Failed \" + location + \" type: \" + error.message + (stack != null ? stack : \"\"));\n                }\n            }\n        }\n    }\n}\n/**\n * Resets warning cache when testing.\n *\n * @private\n */ checkPropTypes.resetWarningCache = function() {\n    if (true) {\n        loggedTypeFailures = {};\n    }\n};\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7OztDQUtDLEdBRUQ7QUFFQSxJQUFJQSxlQUFlLFlBQVk7QUFFL0IsSUFBSUMsSUFBeUIsRUFBYztJQUN6QyxJQUFJQyx1QkFBdUJDLG1CQUFPQSxDQUFDO0lBQ25DLElBQUlDLHFCQUFxQixDQUFDO0lBQzFCLElBQUlDLE1BQU1GLG1CQUFPQSxDQUFDO0lBRWxCSCxlQUFlLFNBQVNNLElBQUk7UUFDMUIsSUFBSUMsVUFBVSxjQUFjRDtRQUM1QixJQUFJLE9BQU9FLFlBQVksYUFBYTtZQUNsQ0EsUUFBUUMsS0FBSyxDQUFDRjtRQUNoQjtRQUNBLElBQUk7WUFDRixxQ0FBcUM7WUFDckMsd0VBQXdFO1lBQ3hFLHlEQUF5RDtZQUN6RCxNQUFNLElBQUlHLE1BQU1IO1FBQ2xCLEVBQUUsT0FBT0ksR0FBRyxDQUFPO0lBQ3JCO0FBQ0Y7QUFFQTs7Ozs7Ozs7OztDQVVDLEdBQ0QsU0FBU0MsZUFBZUMsU0FBUyxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsYUFBYSxFQUFFQyxRQUFRO0lBQzFFLElBQUloQixJQUF5QixFQUFjO1FBQ3pDLElBQUssSUFBSWlCLGdCQUFnQkwsVUFBVztZQUNsQyxJQUFJUixJQUFJUSxXQUFXSyxlQUFlO2dCQUNoQyxJQUFJVDtnQkFDSixvRUFBb0U7Z0JBQ3BFLG1FQUFtRTtnQkFDbkUsMERBQTBEO2dCQUMxRCxJQUFJO29CQUNGLHFFQUFxRTtvQkFDckUsbUVBQW1FO29CQUNuRSxJQUFJLE9BQU9JLFNBQVMsQ0FBQ0ssYUFBYSxLQUFLLFlBQVk7d0JBQ2pELElBQUlDLE1BQU1ULE1BQ1IsQ0FBQ00saUJBQWlCLGFBQVksSUFBSyxPQUFPRCxXQUFXLFlBQVlHLGVBQWUsbUJBQ2hGLGlGQUFpRixPQUFPTCxTQUFTLENBQUNLLGFBQWEsR0FBRyxPQUNsSDt3QkFFRkMsSUFBSUMsSUFBSSxHQUFHO3dCQUNYLE1BQU1EO29CQUNSO29CQUNBVixRQUFRSSxTQUFTLENBQUNLLGFBQWEsQ0FBQ0osUUFBUUksY0FBY0YsZUFBZUQsVUFBVSxNQUFNYjtnQkFDdkYsRUFBRSxPQUFPbUIsSUFBSTtvQkFDWFosUUFBUVk7Z0JBQ1Y7Z0JBQ0EsSUFBSVosU0FBUyxDQUFFQSxDQUFBQSxpQkFBaUJDLEtBQUksR0FBSTtvQkFDdENWLGFBQ0UsQ0FBQ2dCLGlCQUFpQixhQUFZLElBQUssNkJBQ25DRCxXQUFXLE9BQU9HLGVBQWUsb0NBQ2pDLDhEQUE4RCxPQUFPVCxRQUFRLE9BQzdFLG9FQUNBLG1FQUNBO2dCQUVKO2dCQUNBLElBQUlBLGlCQUFpQkMsU0FBUyxDQUFFRCxDQUFBQSxNQUFNRixPQUFPLElBQUlILGtCQUFpQixHQUFJO29CQUNwRSx3RUFBd0U7b0JBQ3hFLGNBQWM7b0JBQ2RBLGtCQUFrQixDQUFDSyxNQUFNRixPQUFPLENBQUMsR0FBRztvQkFFcEMsSUFBSWUsUUFBUUwsV0FBV0EsYUFBYTtvQkFFcENqQixhQUNFLFlBQVllLFdBQVcsWUFBWU4sTUFBTUYsT0FBTyxHQUFJZSxDQUFBQSxTQUFTLE9BQU9BLFFBQVEsRUFBQztnQkFFakY7WUFDRjtRQUNGO0lBQ0Y7QUFDRjtBQUVBOzs7O0NBSUMsR0FDRFYsZUFBZVcsaUJBQWlCLEdBQUc7SUFDakMsSUFBSXRCLElBQXlCLEVBQWM7UUFDekNHLHFCQUFxQixDQUFDO0lBQ3hCO0FBQ0Y7QUFFQW9CLE9BQU9DLE9BQU8sR0FBR2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvY2hlY2tQcm9wVHlwZXMuanM/MjYyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIHByaW50V2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG4gIHZhciBsb2dnZWRUeXBlRmFpbHVyZXMgPSB7fTtcbiAgdmFyIGhhcyA9IHJlcXVpcmUoJy4vbGliL2hhcycpO1xuXG4gIHByaW50V2FybmluZyA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICsgdGV4dDtcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7IC8qKi8gfVxuICB9O1xufVxuXG4vKipcbiAqIEFzc2VydCB0aGF0IHRoZSB2YWx1ZXMgbWF0Y2ggd2l0aCB0aGUgdHlwZSBzcGVjcy5cbiAqIEVycm9yIG1lc3NhZ2VzIGFyZSBtZW1vcml6ZWQgYW5kIHdpbGwgb25seSBiZSBzaG93biBvbmNlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSB0eXBlU3BlY3MgTWFwIG9mIG5hbWUgdG8gYSBSZWFjdFByb3BUeXBlXG4gKiBAcGFyYW0ge29iamVjdH0gdmFsdWVzIFJ1bnRpbWUgdmFsdWVzIHRoYXQgbmVlZCB0byBiZSB0eXBlLWNoZWNrZWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBsb2NhdGlvbiBlLmcuIFwicHJvcFwiLCBcImNvbnRleHRcIiwgXCJjaGlsZCBjb250ZXh0XCJcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb21wb25lbnROYW1lIE5hbWUgb2YgdGhlIGNvbXBvbmVudCBmb3IgZXJyb3IgbWVzc2FnZXMuXG4gKiBAcGFyYW0gez9GdW5jdGlvbn0gZ2V0U3RhY2sgUmV0dXJucyB0aGUgY29tcG9uZW50IHN0YWNrLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY2hlY2tQcm9wVHlwZXModHlwZVNwZWNzLCB2YWx1ZXMsIGxvY2F0aW9uLCBjb21wb25lbnROYW1lLCBnZXRTdGFjaykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGZvciAodmFyIHR5cGVTcGVjTmFtZSBpbiB0eXBlU3BlY3MpIHtcbiAgICAgIGlmIChoYXModHlwZVNwZWNzLCB0eXBlU3BlY05hbWUpKSB7XG4gICAgICAgIHZhciBlcnJvcjtcbiAgICAgICAgLy8gUHJvcCB0eXBlIHZhbGlkYXRpb24gbWF5IHRocm93LiBJbiBjYXNlIHRoZXkgZG8sIHdlIGRvbid0IHdhbnQgdG9cbiAgICAgICAgLy8gZmFpbCB0aGUgcmVuZGVyIHBoYXNlIHdoZXJlIGl0IGRpZG4ndCBmYWlsIGJlZm9yZS4gU28gd2UgbG9nIGl0LlxuICAgICAgICAvLyBBZnRlciB0aGVzZSBoYXZlIGJlZW4gY2xlYW5lZCB1cCwgd2UnbGwgbGV0IHRoZW0gdGhyb3cuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBpbnRlbnRpb25hbGx5IGFuIGludmFyaWFudCB0aGF0IGdldHMgY2F1Z2h0LiBJdCdzIHRoZSBzYW1lXG4gICAgICAgICAgLy8gYmVoYXZpb3IgYXMgd2l0aG91dCB0aGlzIHN0YXRlbWVudCBleGNlcHQgd2l0aCBhIGJldHRlciBtZXNzYWdlLlxuICAgICAgICAgIGlmICh0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHZhciBlcnIgPSBFcnJvcihcbiAgICAgICAgICAgICAgKGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJykgKyAnOiAnICsgbG9jYXRpb24gKyAnIHR5cGUgYCcgKyB0eXBlU3BlY05hbWUgKyAnYCBpcyBpbnZhbGlkOyAnICtcbiAgICAgICAgICAgICAgJ2l0IG11c3QgYmUgYSBmdW5jdGlvbiwgdXN1YWxseSBmcm9tIHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZSwgYnV0IHJlY2VpdmVkIGAnICsgdHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdICsgJ2AuJyArXG4gICAgICAgICAgICAgICdUaGlzIG9mdGVuIGhhcHBlbnMgYmVjYXVzZSBvZiB0eXBvcyBzdWNoIGFzIGBQcm9wVHlwZXMuZnVuY3Rpb25gIGluc3RlYWQgb2YgYFByb3BUeXBlcy5mdW5jYC4nXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVycm9yID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgJiYgIShlcnJvciBpbnN0YW5jZW9mIEVycm9yKSkge1xuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgIChjb21wb25lbnROYW1lIHx8ICdSZWFjdCBjbGFzcycpICsgJzogdHlwZSBzcGVjaWZpY2F0aW9uIG9mICcgK1xuICAgICAgICAgICAgbG9jYXRpb24gKyAnIGAnICsgdHlwZVNwZWNOYW1lICsgJ2AgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciAnICtcbiAgICAgICAgICAgICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAnICsgdHlwZW9mIGVycm9yICsgJy4gJyArXG4gICAgICAgICAgICAnWW91IG1heSBoYXZlIGZvcmdvdHRlbiB0byBwYXNzIGFuIGFyZ3VtZW50IHRvIHRoZSB0eXBlIGNoZWNrZXIgJyArXG4gICAgICAgICAgICAnY3JlYXRvciAoYXJyYXlPZiwgaW5zdGFuY2VPZiwgb2JqZWN0T2YsIG9uZU9mLCBvbmVPZlR5cGUsIGFuZCAnICtcbiAgICAgICAgICAgICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJ1xuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAvLyBPbmx5IG1vbml0b3IgdGhpcyBmYWlsdXJlIG9uY2UgYmVjYXVzZSB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiB0aGVcbiAgICAgICAgICAvLyBzYW1lIGVycm9yLlxuICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlc1tlcnJvci5tZXNzYWdlXSA9IHRydWU7XG5cbiAgICAgICAgICB2YXIgc3RhY2sgPSBnZXRTdGFjayA/IGdldFN0YWNrKCkgOiAnJztcblxuICAgICAgICAgIHByaW50V2FybmluZyhcbiAgICAgICAgICAgICdGYWlsZWQgJyArIGxvY2F0aW9uICsgJyB0eXBlOiAnICsgZXJyb3IubWVzc2FnZSArIChzdGFjayAhPSBudWxsID8gc3RhY2sgOiAnJylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogUmVzZXRzIHdhcm5pbmcgY2FjaGUgd2hlbiB0ZXN0aW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmNoZWNrUHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gZnVuY3Rpb24oKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge307XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjaGVja1Byb3BUeXBlcztcbiJdLCJuYW1lcyI6WyJwcmludFdhcm5pbmciLCJwcm9jZXNzIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJyZXF1aXJlIiwibG9nZ2VkVHlwZUZhaWx1cmVzIiwiaGFzIiwidGV4dCIsIm1lc3NhZ2UiLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsIngiLCJjaGVja1Byb3BUeXBlcyIsInR5cGVTcGVjcyIsInZhbHVlcyIsImxvY2F0aW9uIiwiY29tcG9uZW50TmFtZSIsImdldFN0YWNrIiwidHlwZVNwZWNOYW1lIiwiZXJyIiwibmFtZSIsImV4Iiwic3RhY2siLCJyZXNldFdhcm5pbmdDYWNoZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/checkPropTypes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nvar ReactIs = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-is/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"(app-pages-browser)/./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar has = __webpack_require__(/*! ./lib/has */ \"(app-pages-browser)/./node_modules/prop-types/lib/has.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"(app-pages-browser)/./node_modules/prop-types/checkPropTypes.js\");\nvar printWarning = function() {};\nif (true) {\n    printWarning = function(text) {\n        var message = \"Warning: \" + text;\n        if (typeof console !== \"undefined\") {\n            console.error(message);\n        }\n        try {\n            // --- Welcome to debugging React ---\n            // This error was thrown as a convenience so that you can use this stack\n            // to find the callsite that caused this warning to fire.\n            throw new Error(message);\n        } catch (x) {}\n    };\n}\nfunction emptyFunctionThatReturnsNull() {\n    return null;\n}\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === \"function\" && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = \"@@iterator\"; // Before Symbol spec.\n    /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */ function getIteratorFn(maybeIterable) {\n        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n        if (typeof iteratorFn === \"function\") {\n            return iteratorFn;\n        }\n    }\n    /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */ var ANONYMOUS = \"<<anonymous>>\";\n    // Important!\n    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n    var ReactPropTypes = {\n        array: createPrimitiveTypeChecker(\"array\"),\n        bigint: createPrimitiveTypeChecker(\"bigint\"),\n        bool: createPrimitiveTypeChecker(\"boolean\"),\n        func: createPrimitiveTypeChecker(\"function\"),\n        number: createPrimitiveTypeChecker(\"number\"),\n        object: createPrimitiveTypeChecker(\"object\"),\n        string: createPrimitiveTypeChecker(\"string\"),\n        symbol: createPrimitiveTypeChecker(\"symbol\"),\n        any: createAnyTypeChecker(),\n        arrayOf: createArrayOfTypeChecker,\n        element: createElementTypeChecker(),\n        elementType: createElementTypeTypeChecker(),\n        instanceOf: createInstanceTypeChecker,\n        node: createNodeChecker(),\n        objectOf: createObjectOfTypeChecker,\n        oneOf: createEnumTypeChecker,\n        oneOfType: createUnionTypeChecker,\n        shape: createShapeTypeChecker,\n        exact: createStrictShapeTypeChecker\n    };\n    /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */ /*eslint-disable no-self-compare*/ function is(x, y) {\n        // SameValue algorithm\n        if (x === y) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return x !== 0 || 1 / x === 1 / y;\n        } else {\n            // Step 6.a: NaN == NaN\n            return x !== x && y !== y;\n        }\n    }\n    /*eslint-enable no-self-compare*/ /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */ function PropTypeError(message, data) {\n        this.message = message;\n        this.data = data && typeof data === \"object\" ? data : {};\n        this.stack = \"\";\n    }\n    // Make `instanceof Error` still work for returned errors.\n    PropTypeError.prototype = Error.prototype;\n    function createChainableTypeChecker(validate) {\n        if (true) {\n            var manualPropTypeCallCache = {};\n            var manualPropTypeWarningCount = 0;\n        }\n        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n            componentName = componentName || ANONYMOUS;\n            propFullName = propFullName || propName;\n            if (secret !== ReactPropTypesSecret) {\n                if (throwOnDirectAccess) {\n                    // New behavior only for users of `prop-types` package\n                    var err = new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. \" + \"Use `PropTypes.checkPropTypes()` to call them. \" + \"Read more at http://fb.me/use-check-prop-types\");\n                    err.name = \"Invariant Violation\";\n                    throw err;\n                } else if ( true && typeof console !== \"undefined\") {\n                    // Old behavior for people using React.PropTypes\n                    var cacheKey = componentName + \":\" + propName;\n                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n                    manualPropTypeWarningCount < 3) {\n                        printWarning(\"You are manually calling a React.PropTypes validation \" + \"function for the `\" + propFullName + \"` prop on `\" + componentName + \"`. This is deprecated \" + \"and will throw in the standalone `prop-types` package. \" + \"You may be seeing this warning due to a third-party PropTypes \" + \"library. See https://fb.me/react-warning-dont-call-proptypes \" + \"for details.\");\n                        manualPropTypeCallCache[cacheKey] = true;\n                        manualPropTypeWarningCount++;\n                    }\n                }\n            }\n            if (props[propName] == null) {\n                if (isRequired) {\n                    if (props[propName] === null) {\n                        return new PropTypeError(\"The \" + location + \" `\" + propFullName + \"` is marked as required \" + (\"in `\" + componentName + \"`, but its value is `null`.\"));\n                    }\n                    return new PropTypeError(\"The \" + location + \" `\" + propFullName + \"` is marked as required in \" + (\"`\" + componentName + \"`, but its value is `undefined`.\"));\n                }\n                return null;\n            } else {\n                return validate(props, propName, componentName, location, propFullName);\n            }\n        }\n        var chainedCheckType = checkType.bind(null, false);\n        chainedCheckType.isRequired = checkType.bind(null, true);\n        return chainedCheckType;\n    }\n    function createPrimitiveTypeChecker(expectedType) {\n        function validate(props, propName, componentName, location, propFullName, secret) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n            if (propType !== expectedType) {\n                // `propValue` being instance of, say, date/regexp, pass the 'object'\n                // check, but we can offer a more precise error message here rather than\n                // 'of type `object`'.\n                var preciseType = getPreciseType(propValue);\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type \" + (\"`\" + preciseType + \"` supplied to `\" + componentName + \"`, expected \") + (\"`\" + expectedType + \"`.\"), {\n                    expectedType: expectedType\n                });\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createAnyTypeChecker() {\n        return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n    }\n    function createArrayOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n            if (typeof typeChecker !== \"function\") {\n                return new PropTypeError(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has invalid PropType notation inside arrayOf.\");\n            }\n            var propValue = props[propName];\n            if (!Array.isArray(propValue)) {\n                var propType = getPropType(propValue);\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type \" + (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an array.\"));\n            }\n            for(var i = 0; i < propValue.length; i++){\n                var error = typeChecker(propValue, i, componentName, location, propFullName + \"[\" + i + \"]\", ReactPropTypesSecret);\n                if (error instanceof Error) {\n                    return error;\n                }\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createElementTypeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            if (!isValidElement(propValue)) {\n                var propType = getPropType(propValue);\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type \" + (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected a single ReactElement.\"));\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createElementTypeTypeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            if (!ReactIs.isValidElementType(propValue)) {\n                var propType = getPropType(propValue);\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type \" + (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected a single ReactElement type.\"));\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createInstanceTypeChecker(expectedClass) {\n        function validate(props, propName, componentName, location, propFullName) {\n            if (!(props[propName] instanceof expectedClass)) {\n                var expectedClassName = expectedClass.name || ANONYMOUS;\n                var actualClassName = getClassName(props[propName]);\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type \" + (\"`\" + actualClassName + \"` supplied to `\" + componentName + \"`, expected \") + (\"instance of `\" + expectedClassName + \"`.\"));\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createEnumTypeChecker(expectedValues) {\n        if (!Array.isArray(expectedValues)) {\n            if (true) {\n                if (arguments.length > 1) {\n                    printWarning(\"Invalid arguments supplied to oneOf, expected an array, got \" + arguments.length + \" arguments. \" + \"A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).\");\n                } else {\n                    printWarning(\"Invalid argument supplied to oneOf, expected an array.\");\n                }\n            }\n            return emptyFunctionThatReturnsNull;\n        }\n        function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            for(var i = 0; i < expectedValues.length; i++){\n                if (is(propValue, expectedValues[i])) {\n                    return null;\n                }\n            }\n            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n                var type = getPreciseType(value);\n                if (type === \"symbol\") {\n                    return String(value);\n                }\n                return value;\n            });\n            return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of value `\" + String(propValue) + \"` \" + (\"supplied to `\" + componentName + \"`, expected one of \" + valuesString + \".\"));\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createObjectOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n            if (typeof typeChecker !== \"function\") {\n                return new PropTypeError(\"Property `\" + propFullName + \"` of component `\" + componentName + \"` has invalid PropType notation inside objectOf.\");\n            }\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n            if (propType !== \"object\") {\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type \" + (\"`\" + propType + \"` supplied to `\" + componentName + \"`, expected an object.\"));\n            }\n            for(var key in propValue){\n                if (has(propValue, key)) {\n                    var error = typeChecker(propValue, key, componentName, location, propFullName + \".\" + key, ReactPropTypesSecret);\n                    if (error instanceof Error) {\n                        return error;\n                    }\n                }\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createUnionTypeChecker(arrayOfTypeCheckers) {\n        if (!Array.isArray(arrayOfTypeCheckers)) {\n             true ? printWarning(\"Invalid argument supplied to oneOfType, expected an instance of array.\") : 0;\n            return emptyFunctionThatReturnsNull;\n        }\n        for(var i = 0; i < arrayOfTypeCheckers.length; i++){\n            var checker = arrayOfTypeCheckers[i];\n            if (typeof checker !== \"function\") {\n                printWarning(\"Invalid argument supplied to oneOfType. Expected an array of check functions, but \" + \"received \" + getPostfixForTypeWarning(checker) + \" at index \" + i + \".\");\n                return emptyFunctionThatReturnsNull;\n            }\n        }\n        function validate(props, propName, componentName, location, propFullName) {\n            var expectedTypes = [];\n            for(var i = 0; i < arrayOfTypeCheckers.length; i++){\n                var checker = arrayOfTypeCheckers[i];\n                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n                if (checkerResult == null) {\n                    return null;\n                }\n                if (checkerResult.data && has(checkerResult.data, \"expectedType\")) {\n                    expectedTypes.push(checkerResult.data.expectedType);\n                }\n            }\n            var expectedTypesMessage = expectedTypes.length > 0 ? \", expected one of type [\" + expectedTypes.join(\", \") + \"]\" : \"\";\n            return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` supplied to \" + (\"`\" + componentName + \"`\" + expectedTypesMessage + \".\"));\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createNodeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n            if (!isNode(props[propName])) {\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` supplied to \" + (\"`\" + componentName + \"`, expected a ReactNode.\"));\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function invalidValidatorError(componentName, location, propFullName, key, type) {\n        return new PropTypeError((componentName || \"React class\") + \": \" + location + \" type `\" + propFullName + \".\" + key + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + type + \"`.\");\n    }\n    function createShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n            if (propType !== \"object\") {\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `object`.\"));\n            }\n            for(var key in shapeTypes){\n                var checker = shapeTypes[key];\n                if (typeof checker !== \"function\") {\n                    return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n                }\n                var error = checker(propValue, key, componentName, location, propFullName + \".\" + key, ReactPropTypesSecret);\n                if (error) {\n                    return error;\n                }\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function createStrictShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n            var propValue = props[propName];\n            var propType = getPropType(propValue);\n            if (propType !== \"object\") {\n                return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` of type `\" + propType + \"` \" + (\"supplied to `\" + componentName + \"`, expected `object`.\"));\n            }\n            // We need to check all keys in case some are required but missing from props.\n            var allKeys = assign({}, props[propName], shapeTypes);\n            for(var key in allKeys){\n                var checker = shapeTypes[key];\n                if (has(shapeTypes, key) && typeof checker !== \"function\") {\n                    return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n                }\n                if (!checker) {\n                    return new PropTypeError(\"Invalid \" + location + \" `\" + propFullName + \"` key `\" + key + \"` supplied to `\" + componentName + \"`.\" + \"\\nBad object: \" + JSON.stringify(props[propName], null, \"  \") + \"\\nValid keys: \" + JSON.stringify(Object.keys(shapeTypes), null, \"  \"));\n                }\n                var error = checker(propValue, key, componentName, location, propFullName + \".\" + key, ReactPropTypesSecret);\n                if (error) {\n                    return error;\n                }\n            }\n            return null;\n        }\n        return createChainableTypeChecker(validate);\n    }\n    function isNode(propValue) {\n        switch(typeof propValue){\n            case \"number\":\n            case \"string\":\n            case \"undefined\":\n                return true;\n            case \"boolean\":\n                return !propValue;\n            case \"object\":\n                if (Array.isArray(propValue)) {\n                    return propValue.every(isNode);\n                }\n                if (propValue === null || isValidElement(propValue)) {\n                    return true;\n                }\n                var iteratorFn = getIteratorFn(propValue);\n                if (iteratorFn) {\n                    var iterator = iteratorFn.call(propValue);\n                    var step;\n                    if (iteratorFn !== propValue.entries) {\n                        while(!(step = iterator.next()).done){\n                            if (!isNode(step.value)) {\n                                return false;\n                            }\n                        }\n                    } else {\n                        // Iterator will provide entry [k,v] tuples rather than values.\n                        while(!(step = iterator.next()).done){\n                            var entry = step.value;\n                            if (entry) {\n                                if (!isNode(entry[1])) {\n                                    return false;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    return false;\n                }\n                return true;\n            default:\n                return false;\n        }\n    }\n    function isSymbol(propType, propValue) {\n        // Native Symbol.\n        if (propType === \"symbol\") {\n            return true;\n        }\n        // falsy value can't be a Symbol\n        if (!propValue) {\n            return false;\n        }\n        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n        if (propValue[\"@@toStringTag\"] === \"Symbol\") {\n            return true;\n        }\n        // Fallback for non-spec compliant Symbols which are polyfilled.\n        if (typeof Symbol === \"function\" && propValue instanceof Symbol) {\n            return true;\n        }\n        return false;\n    }\n    // Equivalent of `typeof` but with special handling for array and regexp.\n    function getPropType(propValue) {\n        var propType = typeof propValue;\n        if (Array.isArray(propValue)) {\n            return \"array\";\n        }\n        if (propValue instanceof RegExp) {\n            // Old webkits (at least until Android 4.0) return 'function' rather than\n            // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n            // passes PropTypes.object.\n            return \"object\";\n        }\n        if (isSymbol(propType, propValue)) {\n            return \"symbol\";\n        }\n        return propType;\n    }\n    // This handles more types than `getPropType`. Only used for error messages.\n    // See `createPrimitiveTypeChecker`.\n    function getPreciseType(propValue) {\n        if (typeof propValue === \"undefined\" || propValue === null) {\n            return \"\" + propValue;\n        }\n        var propType = getPropType(propValue);\n        if (propType === \"object\") {\n            if (propValue instanceof Date) {\n                return \"date\";\n            } else if (propValue instanceof RegExp) {\n                return \"regexp\";\n            }\n        }\n        return propType;\n    }\n    // Returns a string that is postfixed to a warning about an invalid type.\n    // For example, \"undefined\" or \"of type array\"\n    function getPostfixForTypeWarning(value) {\n        var type = getPreciseType(value);\n        switch(type){\n            case \"array\":\n            case \"object\":\n                return \"an \" + type;\n            case \"boolean\":\n            case \"date\":\n            case \"regexp\":\n                return \"a \" + type;\n            default:\n                return type;\n        }\n    }\n    // Returns class name of the object, if any.\n    function getClassName(propValue) {\n        if (!propValue.constructor || !propValue.constructor.name) {\n            return ANONYMOUS;\n        }\n        return propValue.constructor.name;\n    }\n    ReactPropTypes.checkPropTypes = checkPropTypes;\n    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/factoryWithTypeCheckers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    var ReactIs = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-is/index.js\");\n    // By explicitly using `prop-types` you are opting into new development behavior.\n    // http://fb.me/prop-types-in-prod\n    var throwOnDirectAccess = true;\n    module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"(app-pages-browser)/./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7OztDQUtDO0FBRUQsSUFBSUEsSUFBeUIsRUFBYztJQUN6QyxJQUFJQyxVQUFVQyxtQkFBT0EsQ0FBQztJQUV0QixpRkFBaUY7SUFDakYsa0NBQWtDO0lBQ2xDLElBQUlDLHNCQUFzQjtJQUMxQkMsT0FBT0MsT0FBTyxHQUFHSCxtQkFBT0EsQ0FBQyw2R0FBNkJELFFBQVFLLFNBQVMsRUFBRUg7QUFDM0UsT0FBTyxFQUlOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzP2JkZTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJSZWFjdElzIiwicmVxdWlyZSIsInRocm93T25EaXJlY3RBY2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwiaXNFbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nvar ReactPropTypesSecret = \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Q0FLQyxHQUVEO0FBRUEsSUFBSUEsdUJBQXVCO0FBRTNCQyxPQUFPQyxPQUFPLEdBQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcz9lMDk4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIl0sIm5hbWVzIjpbIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/lib/ReactPropTypesSecret.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/lib/has.js":
/*!********************************************!*\
  !*** ./node_modules/prop-types/lib/has.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9oYXMuanMiLCJtYXBwaW5ncyI6IjtBQUFBQSxPQUFPQyxPQUFPLEdBQUdDLFNBQVNDLElBQUksQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPQyxTQUFTLENBQUNDLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL2hhcy5qcz9lNDcwIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gRnVuY3Rpb24uY2FsbC5iaW5kKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpO1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJGdW5jdGlvbiIsImNhbGwiLCJiaW5kIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/lib/has.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/raf-schd/dist/raf-schd.esm.js":
/*!****************************************************!*\
  !*** ./node_modules/raf-schd/dist/raf-schd.esm.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar rafSchd = function rafSchd(fn) {\n    var lastArgs = [];\n    var frameId = null;\n    var wrapperFn = function wrapperFn() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        lastArgs = args;\n        if (frameId) {\n            return;\n        }\n        frameId = requestAnimationFrame(function() {\n            frameId = null;\n            fn.apply(void 0, lastArgs);\n        });\n    };\n    wrapperFn.cancel = function() {\n        if (!frameId) {\n            return;\n        }\n        cancelAnimationFrame(frameId);\n        frameId = null;\n    };\n    return wrapperFn;\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (rafSchd);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yYWYtc2NoZC9kaXN0L3JhZi1zY2hkLmVzbS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsVUFBVSxTQUFTQSxRQUFRQyxFQUFFO0lBQy9CLElBQUlDLFdBQVcsRUFBRTtJQUNqQixJQUFJQyxVQUFVO0lBRWQsSUFBSUMsWUFBWSxTQUFTQTtRQUN2QixJQUFLLElBQUlDLE9BQU9DLFVBQVVDLE1BQU0sRUFBRUMsT0FBTyxJQUFJQyxNQUFNSixPQUFPSyxPQUFPLEdBQUdBLE9BQU9MLE1BQU1LLE9BQVE7WUFDdkZGLElBQUksQ0FBQ0UsS0FBSyxHQUFHSixTQUFTLENBQUNJLEtBQUs7UUFDOUI7UUFFQVIsV0FBV007UUFFWCxJQUFJTCxTQUFTO1lBQ1g7UUFDRjtRQUVBQSxVQUFVUSxzQkFBc0I7WUFDOUJSLFVBQVU7WUFDVkYsR0FBR1csS0FBSyxDQUFDLEtBQUssR0FBR1Y7UUFDbkI7SUFDRjtJQUVBRSxVQUFVUyxNQUFNLEdBQUc7UUFDakIsSUFBSSxDQUFDVixTQUFTO1lBQ1o7UUFDRjtRQUVBVyxxQkFBcUJYO1FBQ3JCQSxVQUFVO0lBQ1o7SUFFQSxPQUFPQztBQUNUO0FBRUEsK0RBQWVKLE9BQU9BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JhZi1zY2hkL2Rpc3QvcmFmLXNjaGQuZXNtLmpzPzhhY2UiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJhZlNjaGQgPSBmdW5jdGlvbiByYWZTY2hkKGZuKSB7XG4gIHZhciBsYXN0QXJncyA9IFtdO1xuICB2YXIgZnJhbWVJZCA9IG51bGw7XG5cbiAgdmFyIHdyYXBwZXJGbiA9IGZ1bmN0aW9uIHdyYXBwZXJGbigpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgbGFzdEFyZ3MgPSBhcmdzO1xuXG4gICAgaWYgKGZyYW1lSWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmcmFtZUlkID0gcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgIGZyYW1lSWQgPSBudWxsO1xuICAgICAgZm4uYXBwbHkodm9pZCAwLCBsYXN0QXJncyk7XG4gICAgfSk7XG4gIH07XG5cbiAgd3JhcHBlckZuLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWZyYW1lSWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjYW5jZWxBbmltYXRpb25GcmFtZShmcmFtZUlkKTtcbiAgICBmcmFtZUlkID0gbnVsbDtcbiAgfTtcblxuICByZXR1cm4gd3JhcHBlckZuO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgcmFmU2NoZDtcbiJdLCJuYW1lcyI6WyJyYWZTY2hkIiwiZm4iLCJsYXN0QXJncyIsImZyYW1lSWQiLCJ3cmFwcGVyRm4iLCJfbGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJncyIsIkFycmF5IiwiX2tleSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImFwcGx5IiwiY2FuY2VsIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/raf-schd/dist/raf-schd.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DragDropContext: function() { return /* binding */ DragDropContext; },\n/* harmony export */   Draggable: function() { return /* binding */ PublicDraggable; },\n/* harmony export */   Droppable: function() { return /* binding */ ConnectedDroppable; },\n/* harmony export */   resetServerContext: function() { return /* binding */ resetServerContext; },\n/* harmony export */   useKeyboardSensor: function() { return /* binding */ useKeyboardSensor; },\n/* harmony export */   useMouseSensor: function() { return /* binding */ useMouseSensor; },\n/* harmony export */   useTouchSensor: function() { return /* binding */ useTouchSensor; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! redux */ \"(app-pages-browser)/./node_modules/redux/es/redux.js\");\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"(app-pages-browser)/./node_modules/react-redux/es/index.js\");\n/* harmony import */ var use_memo_one__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! use-memo-one */ \"(app-pages-browser)/./node_modules/use-memo-one/dist/use-memo-one.esm.js\");\n/* harmony import */ var css_box_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! css-box-model */ \"(app-pages-browser)/./node_modules/css-box-model/dist/css-box-model.esm.js\");\n/* harmony import */ var memoize_one__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! memoize-one */ \"(app-pages-browser)/./node_modules/memoize-one/dist/memoize-one.esm.js\");\n/* harmony import */ var raf_schd__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! raf-schd */ \"(app-pages-browser)/./node_modules/raf-schd/dist/raf-schd.esm.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$(), _s12 = $RefreshSig$(), _s13 = $RefreshSig$(), _s14 = $RefreshSig$(), _s15 = $RefreshSig$(), _s16 = $RefreshSig$(), _s17 = $RefreshSig$(), _s18 = $RefreshSig$(), _s19 = $RefreshSig$(), _s20 = $RefreshSig$(), _s21 = $RefreshSig$(), _s22 = $RefreshSig$(), _s23 = $RefreshSig$(), _s24 = $RefreshSig$(), _s25 = $RefreshSig$(), _s26 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\nvar isProduction = \"development\" === \"production\";\nvar spacesAndTabs = /[ \\t]{2,}/g;\nvar lineStartWithSpaces = /^[ \\t]*/gm;\nvar clean = function clean(value) {\n    return value.replace(spacesAndTabs, \" \").replace(lineStartWithSpaces, \"\").trim();\n};\nvar getDevMessage = function getDevMessage(message) {\n    return clean(\"\\n  %creact-beautiful-dnd\\n\\n  %c\" + clean(message) + \"\\n\\n  %c\\uD83D\\uDC77‍ This is a development only message. It will be removed in production builds.\\n\");\n};\nvar getFormattedMessage = function getFormattedMessage(message) {\n    return [\n        getDevMessage(message),\n        \"color: #00C584; font-size: 1.2em; font-weight: bold;\",\n        \"line-height: 1.5\",\n        \"color: #723874;\"\n    ];\n};\nvar isDisabledFlag = \"__react-beautiful-dnd-disable-dev-warnings\";\nfunction log(type, message) {\n    var _console;\n    if (isProduction) {\n        return;\n    }\n    if ( true && window[isDisabledFlag]) {\n        return;\n    }\n    (_console = console)[type].apply(_console, getFormattedMessage(message));\n}\nvar warning = log.bind(null, \"warn\");\nvar error = log.bind(null, \"error\");\nfunction noop() {}\nfunction getOptions(shared, fromBinding) {\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, shared, {}, fromBinding);\n}\nfunction bindEvents(el, bindings, sharedOptions) {\n    var unbindings = bindings.map(function(binding) {\n        var options = getOptions(sharedOptions, binding.options);\n        el.addEventListener(binding.eventName, binding.fn, options);\n        return function unbind() {\n            el.removeEventListener(binding.eventName, binding.fn, options);\n        };\n    });\n    return function unbindAll() {\n        unbindings.forEach(function(unbind) {\n            unbind();\n        });\n    };\n}\nvar isProduction$1 = \"development\" === \"production\";\nvar prefix = \"Invariant failed\";\nfunction RbdInvariant(message) {\n    this.message = message;\n}\n_c = RbdInvariant;\nRbdInvariant.prototype.toString = function toString() {\n    return this.message;\n};\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction$1) {\n        throw new RbdInvariant(prefix);\n    } else {\n        throw new RbdInvariant(prefix + \": \" + (message || \"\"));\n    }\n}\nvar ErrorBoundary = function(_React$Component) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ErrorBoundary, _React$Component);\n    function ErrorBoundary() {\n        var _this;\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _React$Component.call.apply(_React$Component, [\n            this\n        ].concat(args)) || this;\n        _this.callbacks = null;\n        _this.unbind = noop;\n        _this.onWindowError = function(event) {\n            var callbacks = _this.getCallbacks();\n            if (callbacks.isDragging()) {\n                callbacks.tryAbort();\n                 true ? warning(\"\\n        An error was caught by our window 'error' event listener while a drag was occurring.\\n        The active drag has been aborted.\\n      \") : 0;\n            }\n            var err = event.error;\n            if (err instanceof RbdInvariant) {\n                event.preventDefault();\n                if (true) {\n                    error(err.message);\n                }\n            }\n        };\n        _this.getCallbacks = function() {\n            if (!_this.callbacks) {\n                throw new Error(\"Unable to find AppCallbacks in <ErrorBoundary/>\");\n            }\n            return _this.callbacks;\n        };\n        _this.setCallbacks = function(callbacks) {\n            _this.callbacks = callbacks;\n        };\n        return _this;\n    }\n    var _proto = ErrorBoundary.prototype;\n    _proto.componentDidMount = function componentDidMount() {\n        this.unbind = bindEvents(window, [\n            {\n                eventName: \"error\",\n                fn: this.onWindowError\n            }\n        ]);\n    };\n    _proto.componentDidCatch = function componentDidCatch(err) {\n        if (err instanceof RbdInvariant) {\n            if (true) {\n                error(err.message);\n            }\n            this.setState({});\n            return;\n        }\n        throw err;\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n        this.unbind();\n    };\n    _proto.render = function render() {\n        return this.props.children(this.setCallbacks);\n    };\n    return ErrorBoundary;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().Component));\n_c1 = ErrorBoundary;\nvar dragHandleUsageInstructions = \"\\n  Press space bar to start a drag.\\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\\n  Some screen readers may require you to be in focus mode or to use your pass through key\\n\";\nvar position = function position(index) {\n    return index + 1;\n};\nvar onDragStart = function onDragStart(start) {\n    return \"\\n  You have lifted an item in position \" + position(start.source.index) + \"\\n\";\n};\nvar withLocation = function withLocation(source, destination) {\n    var isInHomeList = source.droppableId === destination.droppableId;\n    var startPosition = position(source.index);\n    var endPosition = position(destination.index);\n    if (isInHomeList) {\n        return \"\\n      You have moved the item from position \" + startPosition + \"\\n      to position \" + endPosition + \"\\n    \";\n    }\n    return \"\\n    You have moved the item from position \" + startPosition + \"\\n    in list \" + source.droppableId + \"\\n    to list \" + destination.droppableId + \"\\n    in position \" + endPosition + \"\\n  \";\n};\nvar withCombine = function withCombine(id, source, combine) {\n    var inHomeList = source.droppableId === combine.droppableId;\n    if (inHomeList) {\n        return \"\\n      The item \" + id + \"\\n      has been combined with \" + combine.draggableId;\n    }\n    return \"\\n      The item \" + id + \"\\n      in list \" + source.droppableId + \"\\n      has been combined with \" + combine.draggableId + \"\\n      in list \" + combine.droppableId + \"\\n    \";\n};\nvar onDragUpdate = function onDragUpdate(update) {\n    var location = update.destination;\n    if (location) {\n        return withLocation(update.source, location);\n    }\n    var combine = update.combine;\n    if (combine) {\n        return withCombine(update.draggableId, update.source, combine);\n    }\n    return \"You are over an area that cannot be dropped on\";\n};\nvar returnedToStart = function returnedToStart(source) {\n    return \"\\n  The item has returned to its starting position\\n  of \" + position(source.index) + \"\\n\";\n};\nvar onDragEnd = function onDragEnd(result) {\n    if (result.reason === \"CANCEL\") {\n        return \"\\n      Movement cancelled.\\n      \" + returnedToStart(result.source) + \"\\n    \";\n    }\n    var location = result.destination;\n    var combine = result.combine;\n    if (location) {\n        return \"\\n      You have dropped the item.\\n      \" + withLocation(result.source, location) + \"\\n    \";\n    }\n    if (combine) {\n        return \"\\n      You have dropped the item.\\n      \" + withCombine(result.draggableId, result.source, combine) + \"\\n    \";\n    }\n    return \"\\n    The item has been dropped while not over a drop area.\\n    \" + returnedToStart(result.source) + \"\\n  \";\n};\nvar preset = {\n    dragHandleUsageInstructions: dragHandleUsageInstructions,\n    onDragStart: onDragStart,\n    onDragUpdate: onDragUpdate,\n    onDragEnd: onDragEnd\n};\nvar origin = {\n    x: 0,\n    y: 0\n};\nvar add = function add(point1, point2) {\n    return {\n        x: point1.x + point2.x,\n        y: point1.y + point2.y\n    };\n};\nvar subtract = function subtract(point1, point2) {\n    return {\n        x: point1.x - point2.x,\n        y: point1.y - point2.y\n    };\n};\nvar isEqual = function isEqual(point1, point2) {\n    return point1.x === point2.x && point1.y === point2.y;\n};\nvar negate = function negate(point) {\n    return {\n        x: point.x !== 0 ? -point.x : 0,\n        y: point.y !== 0 ? -point.y : 0\n    };\n};\nvar patch = function patch(line, value, otherValue) {\n    var _ref;\n    if (otherValue === void 0) {\n        otherValue = 0;\n    }\n    return _ref = {}, _ref[line] = value, _ref[line === \"x\" ? \"y\" : \"x\"] = otherValue, _ref;\n};\nvar distance = function distance(point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\nvar closest = function closest(target, points) {\n    return Math.min.apply(Math, points.map(function(point) {\n        return distance(target, point);\n    }));\n};\nvar apply = function apply(fn) {\n    return function(point) {\n        return {\n            x: fn(point.x),\n            y: fn(point.y)\n        };\n    };\n};\nvar executeClip = function(frame, subject) {\n    var result = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getRect)({\n        top: Math.max(subject.top, frame.top),\n        right: Math.min(subject.right, frame.right),\n        bottom: Math.min(subject.bottom, frame.bottom),\n        left: Math.max(subject.left, frame.left)\n    });\n    if (result.width <= 0 || result.height <= 0) {\n        return null;\n    }\n    return result;\n};\nvar offsetByPosition = function offsetByPosition(spacing, point) {\n    return {\n        top: spacing.top + point.y,\n        left: spacing.left + point.x,\n        bottom: spacing.bottom + point.y,\n        right: spacing.right + point.x\n    };\n};\nvar getCorners = function getCorners(spacing) {\n    return [\n        {\n            x: spacing.left,\n            y: spacing.top\n        },\n        {\n            x: spacing.right,\n            y: spacing.top\n        },\n        {\n            x: spacing.left,\n            y: spacing.bottom\n        },\n        {\n            x: spacing.right,\n            y: spacing.bottom\n        }\n    ];\n};\nvar noSpacing = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n};\nvar scroll = function scroll(target, frame) {\n    if (!frame) {\n        return target;\n    }\n    return offsetByPosition(target, frame.scroll.diff.displacement);\n};\nvar increase = function increase(target, axis, withPlaceholder) {\n    if (withPlaceholder && withPlaceholder.increasedBy) {\n        var _extends2;\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, target, (_extends2 = {}, _extends2[axis.end] = target[axis.end] + withPlaceholder.increasedBy[axis.line], _extends2));\n    }\n    return target;\n};\nvar clip = function clip(target, frame) {\n    if (frame && frame.shouldClipSubject) {\n        return executeClip(frame.pageMarginBox, target);\n    }\n    return (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getRect)(target);\n};\nvar getSubject = function(_ref) {\n    var page = _ref.page, withPlaceholder = _ref.withPlaceholder, axis = _ref.axis, frame = _ref.frame;\n    var scrolled = scroll(page.marginBox, frame);\n    var increased = increase(scrolled, axis, withPlaceholder);\n    var clipped = clip(increased, frame);\n    return {\n        page: page,\n        withPlaceholder: withPlaceholder,\n        active: clipped\n    };\n};\nvar scrollDroppable = function(droppable, newScroll) {\n    !droppable.frame ?  true ? invariant(false) : 0 : void 0;\n    var scrollable = droppable.frame;\n    var scrollDiff = subtract(newScroll, scrollable.scroll.initial);\n    var scrollDisplacement = negate(scrollDiff);\n    var frame = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, scrollable, {\n        scroll: {\n            initial: scrollable.scroll.initial,\n            current: newScroll,\n            diff: {\n                value: scrollDiff,\n                displacement: scrollDisplacement\n            },\n            max: scrollable.scroll.max\n        }\n    });\n    var subject = getSubject({\n        page: droppable.subject.page,\n        withPlaceholder: droppable.subject.withPlaceholder,\n        axis: droppable.axis,\n        frame: frame\n    });\n    var result = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, droppable, {\n        frame: frame,\n        subject: subject\n    });\n    return result;\n};\nfunction isInteger(value) {\n    if (Number.isInteger) {\n        return Number.isInteger(value);\n    }\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n}\nfunction values(map) {\n    if (Object.values) {\n        return Object.values(map);\n    }\n    return Object.keys(map).map(function(key) {\n        return map[key];\n    });\n}\nfunction findIndex(list, predicate) {\n    if (list.findIndex) {\n        return list.findIndex(predicate);\n    }\n    for(var i = 0; i < list.length; i++){\n        if (predicate(list[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction find(list, predicate) {\n    if (list.find) {\n        return list.find(predicate);\n    }\n    var index = findIndex(list, predicate);\n    if (index !== -1) {\n        return list[index];\n    }\n    return undefined;\n}\nfunction toArray(list) {\n    return Array.prototype.slice.call(list);\n}\nvar toDroppableMap = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(droppables) {\n    return droppables.reduce(function(previous, current) {\n        previous[current.descriptor.id] = current;\n        return previous;\n    }, {});\n});\nvar toDraggableMap = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(draggables) {\n    return draggables.reduce(function(previous, current) {\n        previous[current.descriptor.id] = current;\n        return previous;\n    }, {});\n});\nvar toDroppableList = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(droppables) {\n    return values(droppables);\n});\nvar toDraggableList = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(draggables) {\n    return values(draggables);\n});\nvar getDraggablesInsideDroppable = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(droppableId, draggables) {\n    var result = toDraggableList(draggables).filter(function(draggable) {\n        return droppableId === draggable.descriptor.droppableId;\n    }).sort(function(a, b) {\n        return a.descriptor.index - b.descriptor.index;\n    });\n    return result;\n});\nfunction tryGetDestination(impact) {\n    if (impact.at && impact.at.type === \"REORDER\") {\n        return impact.at.destination;\n    }\n    return null;\n}\nfunction tryGetCombine(impact) {\n    if (impact.at && impact.at.type === \"COMBINE\") {\n        return impact.at.combine;\n    }\n    return null;\n}\nvar removeDraggableFromList = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(remove, list) {\n    return list.filter(function(item) {\n        return item.descriptor.id !== remove.descriptor.id;\n    });\n});\nvar moveToNextCombine = function(_ref) {\n    var isMovingForward = _ref.isMovingForward, draggable = _ref.draggable, destination = _ref.destination, insideDestination = _ref.insideDestination, previousImpact = _ref.previousImpact;\n    if (!destination.isCombineEnabled) {\n        return null;\n    }\n    var location = tryGetDestination(previousImpact);\n    if (!location) {\n        return null;\n    }\n    function getImpact(target) {\n        var at = {\n            type: \"COMBINE\",\n            combine: {\n                draggableId: target,\n                droppableId: destination.descriptor.id\n            }\n        };\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, previousImpact, {\n            at: at\n        });\n    }\n    var all = previousImpact.displaced.all;\n    var closestId = all.length ? all[0] : null;\n    if (isMovingForward) {\n        return closestId ? getImpact(closestId) : null;\n    }\n    var withoutDraggable = removeDraggableFromList(draggable, insideDestination);\n    if (!closestId) {\n        if (!withoutDraggable.length) {\n            return null;\n        }\n        var last = withoutDraggable[withoutDraggable.length - 1];\n        return getImpact(last.descriptor.id);\n    }\n    var indexOfClosest = findIndex(withoutDraggable, function(d) {\n        return d.descriptor.id === closestId;\n    });\n    !(indexOfClosest !== -1) ?  true ? invariant(false, \"Could not find displaced item in set\") : 0 : void 0;\n    var proposedIndex = indexOfClosest - 1;\n    if (proposedIndex < 0) {\n        return null;\n    }\n    var before = withoutDraggable[proposedIndex];\n    return getImpact(before.descriptor.id);\n};\nvar isHomeOf = function(draggable, destination) {\n    return draggable.descriptor.droppableId === destination.descriptor.id;\n};\nvar noDisplacedBy = {\n    point: origin,\n    value: 0\n};\nvar emptyGroups = {\n    invisible: {},\n    visible: {},\n    all: []\n};\nvar noImpact = {\n    displaced: emptyGroups,\n    displacedBy: noDisplacedBy,\n    at: null\n};\nvar isWithin = function(lowerBound, upperBound) {\n    return function(value) {\n        return lowerBound <= value && value <= upperBound;\n    };\n};\nvar isPartiallyVisibleThroughFrame = function(frame) {\n    var isWithinVertical = isWithin(frame.top, frame.bottom);\n    var isWithinHorizontal = isWithin(frame.left, frame.right);\n    return function(subject) {\n        var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n        if (isContained) {\n            return true;\n        }\n        var isPartiallyVisibleVertically = isWithinVertical(subject.top) || isWithinVertical(subject.bottom);\n        var isPartiallyVisibleHorizontally = isWithinHorizontal(subject.left) || isWithinHorizontal(subject.right);\n        var isPartiallyContained = isPartiallyVisibleVertically && isPartiallyVisibleHorizontally;\n        if (isPartiallyContained) {\n            return true;\n        }\n        var isBiggerVertically = subject.top < frame.top && subject.bottom > frame.bottom;\n        var isBiggerHorizontally = subject.left < frame.left && subject.right > frame.right;\n        var isTargetBiggerThanFrame = isBiggerVertically && isBiggerHorizontally;\n        if (isTargetBiggerThanFrame) {\n            return true;\n        }\n        var isTargetBiggerOnOneAxis = isBiggerVertically && isPartiallyVisibleHorizontally || isBiggerHorizontally && isPartiallyVisibleVertically;\n        return isTargetBiggerOnOneAxis;\n    };\n};\nvar isTotallyVisibleThroughFrame = function(frame) {\n    var isWithinVertical = isWithin(frame.top, frame.bottom);\n    var isWithinHorizontal = isWithin(frame.left, frame.right);\n    return function(subject) {\n        var isContained = isWithinVertical(subject.top) && isWithinVertical(subject.bottom) && isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n        return isContained;\n    };\n};\nvar vertical = {\n    direction: \"vertical\",\n    line: \"y\",\n    crossAxisLine: \"x\",\n    start: \"top\",\n    end: \"bottom\",\n    size: \"height\",\n    crossAxisStart: \"left\",\n    crossAxisEnd: \"right\",\n    crossAxisSize: \"width\"\n};\nvar horizontal = {\n    direction: \"horizontal\",\n    line: \"x\",\n    crossAxisLine: \"y\",\n    start: \"left\",\n    end: \"right\",\n    size: \"width\",\n    crossAxisStart: \"top\",\n    crossAxisEnd: \"bottom\",\n    crossAxisSize: \"height\"\n};\nvar isTotallyVisibleThroughFrameOnAxis = function(axis) {\n    return function(frame) {\n        var isWithinVertical = isWithin(frame.top, frame.bottom);\n        var isWithinHorizontal = isWithin(frame.left, frame.right);\n        return function(subject) {\n            if (axis === vertical) {\n                return isWithinVertical(subject.top) && isWithinVertical(subject.bottom);\n            }\n            return isWithinHorizontal(subject.left) && isWithinHorizontal(subject.right);\n        };\n    };\n};\nvar getDroppableDisplaced = function getDroppableDisplaced(target, destination) {\n    var displacement = destination.frame ? destination.frame.scroll.diff.displacement : origin;\n    return offsetByPosition(target, displacement);\n};\nvar isVisibleInDroppable = function isVisibleInDroppable(target, destination, isVisibleThroughFrameFn) {\n    if (!destination.subject.active) {\n        return false;\n    }\n    return isVisibleThroughFrameFn(destination.subject.active)(target);\n};\nvar isVisibleInViewport = function isVisibleInViewport(target, viewport, isVisibleThroughFrameFn) {\n    return isVisibleThroughFrameFn(viewport)(target);\n};\nvar isVisible = function isVisible(_ref) {\n    var toBeDisplaced = _ref.target, destination = _ref.destination, viewport = _ref.viewport, withDroppableDisplacement = _ref.withDroppableDisplacement, isVisibleThroughFrameFn = _ref.isVisibleThroughFrameFn;\n    var displacedTarget = withDroppableDisplacement ? getDroppableDisplaced(toBeDisplaced, destination) : toBeDisplaced;\n    return isVisibleInDroppable(displacedTarget, destination, isVisibleThroughFrameFn) && isVisibleInViewport(displacedTarget, viewport, isVisibleThroughFrameFn);\n};\nvar isPartiallyVisible = function isPartiallyVisible(args) {\n    return isVisible((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, args, {\n        isVisibleThroughFrameFn: isPartiallyVisibleThroughFrame\n    }));\n};\nvar isTotallyVisible = function isTotallyVisible(args) {\n    return isVisible((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, args, {\n        isVisibleThroughFrameFn: isTotallyVisibleThroughFrame\n    }));\n};\nvar isTotallyVisibleOnAxis = function isTotallyVisibleOnAxis(args) {\n    return isVisible((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, args, {\n        isVisibleThroughFrameFn: isTotallyVisibleThroughFrameOnAxis(args.destination.axis)\n    }));\n};\nvar getShouldAnimate = function getShouldAnimate(id, last, forceShouldAnimate) {\n    if (typeof forceShouldAnimate === \"boolean\") {\n        return forceShouldAnimate;\n    }\n    if (!last) {\n        return true;\n    }\n    var invisible = last.invisible, visible = last.visible;\n    if (invisible[id]) {\n        return false;\n    }\n    var previous = visible[id];\n    return previous ? previous.shouldAnimate : true;\n};\nfunction getTarget(draggable, displacedBy) {\n    var marginBox = draggable.page.marginBox;\n    var expandBy = {\n        top: displacedBy.point.y,\n        right: 0,\n        bottom: 0,\n        left: displacedBy.point.x\n    };\n    return (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getRect)((0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.expand)(marginBox, expandBy));\n}\nfunction getDisplacementGroups(_ref) {\n    var afterDragging = _ref.afterDragging, destination = _ref.destination, displacedBy = _ref.displacedBy, viewport = _ref.viewport, forceShouldAnimate = _ref.forceShouldAnimate, last = _ref.last;\n    return afterDragging.reduce(function process(groups, draggable) {\n        var target = getTarget(draggable, displacedBy);\n        var id = draggable.descriptor.id;\n        groups.all.push(id);\n        var isVisible = isPartiallyVisible({\n            target: target,\n            destination: destination,\n            viewport: viewport,\n            withDroppableDisplacement: true\n        });\n        if (!isVisible) {\n            groups.invisible[draggable.descriptor.id] = true;\n            return groups;\n        }\n        var shouldAnimate = getShouldAnimate(id, last, forceShouldAnimate);\n        var displacement = {\n            draggableId: id,\n            shouldAnimate: shouldAnimate\n        };\n        groups.visible[id] = displacement;\n        return groups;\n    }, {\n        all: [],\n        visible: {},\n        invisible: {}\n    });\n}\nfunction getIndexOfLastItem(draggables, options) {\n    if (!draggables.length) {\n        return 0;\n    }\n    var indexOfLastItem = draggables[draggables.length - 1].descriptor.index;\n    return options.inHomeList ? indexOfLastItem : indexOfLastItem + 1;\n}\nfunction goAtEnd(_ref) {\n    var insideDestination = _ref.insideDestination, inHomeList = _ref.inHomeList, displacedBy = _ref.displacedBy, destination = _ref.destination;\n    var newIndex = getIndexOfLastItem(insideDestination, {\n        inHomeList: inHomeList\n    });\n    return {\n        displaced: emptyGroups,\n        displacedBy: displacedBy,\n        at: {\n            type: \"REORDER\",\n            destination: {\n                droppableId: destination.descriptor.id,\n                index: newIndex\n            }\n        }\n    };\n}\nfunction calculateReorderImpact(_ref2) {\n    var draggable = _ref2.draggable, insideDestination = _ref2.insideDestination, destination = _ref2.destination, viewport = _ref2.viewport, displacedBy = _ref2.displacedBy, last = _ref2.last, index = _ref2.index, forceShouldAnimate = _ref2.forceShouldAnimate;\n    var inHomeList = isHomeOf(draggable, destination);\n    if (index == null) {\n        return goAtEnd({\n            insideDestination: insideDestination,\n            inHomeList: inHomeList,\n            displacedBy: displacedBy,\n            destination: destination\n        });\n    }\n    var match = find(insideDestination, function(item) {\n        return item.descriptor.index === index;\n    });\n    if (!match) {\n        return goAtEnd({\n            insideDestination: insideDestination,\n            inHomeList: inHomeList,\n            displacedBy: displacedBy,\n            destination: destination\n        });\n    }\n    var withoutDragging = removeDraggableFromList(draggable, insideDestination);\n    var sliceFrom = insideDestination.indexOf(match);\n    var impacted = withoutDragging.slice(sliceFrom);\n    var displaced = getDisplacementGroups({\n        afterDragging: impacted,\n        destination: destination,\n        displacedBy: displacedBy,\n        last: last,\n        viewport: viewport.frame,\n        forceShouldAnimate: forceShouldAnimate\n    });\n    return {\n        displaced: displaced,\n        displacedBy: displacedBy,\n        at: {\n            type: \"REORDER\",\n            destination: {\n                droppableId: destination.descriptor.id,\n                index: index\n            }\n        }\n    };\n}\nfunction didStartAfterCritical(draggableId, afterCritical) {\n    return Boolean(afterCritical.effected[draggableId]);\n}\nvar fromCombine = function(_ref) {\n    var isMovingForward = _ref.isMovingForward, destination = _ref.destination, draggables = _ref.draggables, combine = _ref.combine, afterCritical = _ref.afterCritical;\n    if (!destination.isCombineEnabled) {\n        return null;\n    }\n    var combineId = combine.draggableId;\n    var combineWith = draggables[combineId];\n    var combineWithIndex = combineWith.descriptor.index;\n    var didCombineWithStartAfterCritical = didStartAfterCritical(combineId, afterCritical);\n    if (didCombineWithStartAfterCritical) {\n        if (isMovingForward) {\n            return combineWithIndex;\n        }\n        return combineWithIndex - 1;\n    }\n    if (isMovingForward) {\n        return combineWithIndex + 1;\n    }\n    return combineWithIndex;\n};\nvar fromReorder = function(_ref) {\n    var isMovingForward = _ref.isMovingForward, isInHomeList = _ref.isInHomeList, insideDestination = _ref.insideDestination, location = _ref.location;\n    if (!insideDestination.length) {\n        return null;\n    }\n    var currentIndex = location.index;\n    var proposedIndex = isMovingForward ? currentIndex + 1 : currentIndex - 1;\n    var firstIndex = insideDestination[0].descriptor.index;\n    var lastIndex = insideDestination[insideDestination.length - 1].descriptor.index;\n    var upperBound = isInHomeList ? lastIndex : lastIndex + 1;\n    if (proposedIndex < firstIndex) {\n        return null;\n    }\n    if (proposedIndex > upperBound) {\n        return null;\n    }\n    return proposedIndex;\n};\nvar moveToNextIndex = function(_ref) {\n    var isMovingForward = _ref.isMovingForward, isInHomeList = _ref.isInHomeList, draggable = _ref.draggable, draggables = _ref.draggables, destination = _ref.destination, insideDestination = _ref.insideDestination, previousImpact = _ref.previousImpact, viewport = _ref.viewport, afterCritical = _ref.afterCritical;\n    var wasAt = previousImpact.at;\n    !wasAt ?  true ? invariant(false, \"Cannot move in direction without previous impact location\") : 0 : void 0;\n    if (wasAt.type === \"REORDER\") {\n        var _newIndex = fromReorder({\n            isMovingForward: isMovingForward,\n            isInHomeList: isInHomeList,\n            location: wasAt.destination,\n            insideDestination: insideDestination\n        });\n        if (_newIndex == null) {\n            return null;\n        }\n        return calculateReorderImpact({\n            draggable: draggable,\n            insideDestination: insideDestination,\n            destination: destination,\n            viewport: viewport,\n            last: previousImpact.displaced,\n            displacedBy: previousImpact.displacedBy,\n            index: _newIndex\n        });\n    }\n    var newIndex = fromCombine({\n        isMovingForward: isMovingForward,\n        destination: destination,\n        displaced: previousImpact.displaced,\n        draggables: draggables,\n        combine: wasAt.combine,\n        afterCritical: afterCritical\n    });\n    if (newIndex == null) {\n        return null;\n    }\n    return calculateReorderImpact({\n        draggable: draggable,\n        insideDestination: insideDestination,\n        destination: destination,\n        viewport: viewport,\n        last: previousImpact.displaced,\n        displacedBy: previousImpact.displacedBy,\n        index: newIndex\n    });\n};\nvar getCombinedItemDisplacement = function(_ref) {\n    var displaced = _ref.displaced, afterCritical = _ref.afterCritical, combineWith = _ref.combineWith, displacedBy = _ref.displacedBy;\n    var isDisplaced = Boolean(displaced.visible[combineWith] || displaced.invisible[combineWith]);\n    if (didStartAfterCritical(combineWith, afterCritical)) {\n        return isDisplaced ? origin : negate(displacedBy.point);\n    }\n    return isDisplaced ? displacedBy.point : origin;\n};\nvar whenCombining = function(_ref) {\n    var afterCritical = _ref.afterCritical, impact = _ref.impact, draggables = _ref.draggables;\n    var combine = tryGetCombine(impact);\n    !combine ?  true ? invariant(false) : 0 : void 0;\n    var combineWith = combine.draggableId;\n    var center = draggables[combineWith].page.borderBox.center;\n    var displaceBy = getCombinedItemDisplacement({\n        displaced: impact.displaced,\n        afterCritical: afterCritical,\n        combineWith: combineWith,\n        displacedBy: impact.displacedBy\n    });\n    return add(center, displaceBy);\n};\nvar distanceFromStartToBorderBoxCenter = function distanceFromStartToBorderBoxCenter(axis, box) {\n    return box.margin[axis.start] + box.borderBox[axis.size] / 2;\n};\nvar distanceFromEndToBorderBoxCenter = function distanceFromEndToBorderBoxCenter(axis, box) {\n    return box.margin[axis.end] + box.borderBox[axis.size] / 2;\n};\nvar getCrossAxisBorderBoxCenter = function getCrossAxisBorderBoxCenter(axis, target, isMoving) {\n    return target[axis.crossAxisStart] + isMoving.margin[axis.crossAxisStart] + isMoving.borderBox[axis.crossAxisSize] / 2;\n};\nvar goAfter = function goAfter(_ref) {\n    var axis = _ref.axis, moveRelativeTo = _ref.moveRelativeTo, isMoving = _ref.isMoving;\n    return patch(axis.line, moveRelativeTo.marginBox[axis.end] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));\n};\nvar goBefore = function goBefore(_ref2) {\n    var axis = _ref2.axis, moveRelativeTo = _ref2.moveRelativeTo, isMoving = _ref2.isMoving;\n    return patch(axis.line, moveRelativeTo.marginBox[axis.start] - distanceFromEndToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveRelativeTo.marginBox, isMoving));\n};\nvar goIntoStart = function goIntoStart(_ref3) {\n    var axis = _ref3.axis, moveInto = _ref3.moveInto, isMoving = _ref3.isMoving;\n    return patch(axis.line, moveInto.contentBox[axis.start] + distanceFromStartToBorderBoxCenter(axis, isMoving), getCrossAxisBorderBoxCenter(axis, moveInto.contentBox, isMoving));\n};\nvar whenReordering = function(_ref) {\n    var impact = _ref.impact, draggable = _ref.draggable, draggables = _ref.draggables, droppable = _ref.droppable, afterCritical = _ref.afterCritical;\n    var insideDestination = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);\n    var draggablePage = draggable.page;\n    var axis = droppable.axis;\n    if (!insideDestination.length) {\n        return goIntoStart({\n            axis: axis,\n            moveInto: droppable.page,\n            isMoving: draggablePage\n        });\n    }\n    var displaced = impact.displaced, displacedBy = impact.displacedBy;\n    var closestAfter = displaced.all[0];\n    if (closestAfter) {\n        var closest = draggables[closestAfter];\n        if (didStartAfterCritical(closestAfter, afterCritical)) {\n            return goBefore({\n                axis: axis,\n                moveRelativeTo: closest.page,\n                isMoving: draggablePage\n            });\n        }\n        var withDisplacement = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.offset)(closest.page, displacedBy.point);\n        return goBefore({\n            axis: axis,\n            moveRelativeTo: withDisplacement,\n            isMoving: draggablePage\n        });\n    }\n    var last = insideDestination[insideDestination.length - 1];\n    if (last.descriptor.id === draggable.descriptor.id) {\n        return draggablePage.borderBox.center;\n    }\n    if (didStartAfterCritical(last.descriptor.id, afterCritical)) {\n        var page = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.offset)(last.page, negate(afterCritical.displacedBy.point));\n        return goAfter({\n            axis: axis,\n            moveRelativeTo: page,\n            isMoving: draggablePage\n        });\n    }\n    return goAfter({\n        axis: axis,\n        moveRelativeTo: last.page,\n        isMoving: draggablePage\n    });\n};\nvar withDroppableDisplacement = function(droppable, point) {\n    var frame = droppable.frame;\n    if (!frame) {\n        return point;\n    }\n    return add(point, frame.scroll.diff.displacement);\n};\nvar getResultWithoutDroppableDisplacement = function getResultWithoutDroppableDisplacement(_ref) {\n    var impact = _ref.impact, draggable = _ref.draggable, droppable = _ref.droppable, draggables = _ref.draggables, afterCritical = _ref.afterCritical;\n    var original = draggable.page.borderBox.center;\n    var at = impact.at;\n    if (!droppable) {\n        return original;\n    }\n    if (!at) {\n        return original;\n    }\n    if (at.type === \"REORDER\") {\n        return whenReordering({\n            impact: impact,\n            draggable: draggable,\n            draggables: draggables,\n            droppable: droppable,\n            afterCritical: afterCritical\n        });\n    }\n    return whenCombining({\n        impact: impact,\n        draggables: draggables,\n        afterCritical: afterCritical\n    });\n};\nvar getPageBorderBoxCenterFromImpact = function(args) {\n    var withoutDisplacement = getResultWithoutDroppableDisplacement(args);\n    var droppable = args.droppable;\n    var withDisplacement = droppable ? withDroppableDisplacement(droppable, withoutDisplacement) : withoutDisplacement;\n    return withDisplacement;\n};\nvar scrollViewport = function(viewport, newScroll) {\n    var diff = subtract(newScroll, viewport.scroll.initial);\n    var displacement = negate(diff);\n    var frame = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getRect)({\n        top: newScroll.y,\n        bottom: newScroll.y + viewport.frame.height,\n        left: newScroll.x,\n        right: newScroll.x + viewport.frame.width\n    });\n    var updated = {\n        frame: frame,\n        scroll: {\n            initial: viewport.scroll.initial,\n            max: viewport.scroll.max,\n            current: newScroll,\n            diff: {\n                value: diff,\n                displacement: displacement\n            }\n        }\n    };\n    return updated;\n};\nfunction getDraggables(ids, draggables) {\n    return ids.map(function(id) {\n        return draggables[id];\n    });\n}\nfunction tryGetVisible(id, groups) {\n    for(var i = 0; i < groups.length; i++){\n        var displacement = groups[i].visible[id];\n        if (displacement) {\n            return displacement;\n        }\n    }\n    return null;\n}\nvar speculativelyIncrease = function(_ref) {\n    var impact = _ref.impact, viewport = _ref.viewport, destination = _ref.destination, draggables = _ref.draggables, maxScrollChange = _ref.maxScrollChange;\n    var scrolledViewport = scrollViewport(viewport, add(viewport.scroll.current, maxScrollChange));\n    var scrolledDroppable = destination.frame ? scrollDroppable(destination, add(destination.frame.scroll.current, maxScrollChange)) : destination;\n    var last = impact.displaced;\n    var withViewportScroll = getDisplacementGroups({\n        afterDragging: getDraggables(last.all, draggables),\n        destination: destination,\n        displacedBy: impact.displacedBy,\n        viewport: scrolledViewport.frame,\n        last: last,\n        forceShouldAnimate: false\n    });\n    var withDroppableScroll = getDisplacementGroups({\n        afterDragging: getDraggables(last.all, draggables),\n        destination: scrolledDroppable,\n        displacedBy: impact.displacedBy,\n        viewport: viewport.frame,\n        last: last,\n        forceShouldAnimate: false\n    });\n    var invisible = {};\n    var visible = {};\n    var groups = [\n        last,\n        withViewportScroll,\n        withDroppableScroll\n    ];\n    last.all.forEach(function(id) {\n        var displacement = tryGetVisible(id, groups);\n        if (displacement) {\n            visible[id] = displacement;\n            return;\n        }\n        invisible[id] = true;\n    });\n    var newImpact = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, impact, {\n        displaced: {\n            all: last.all,\n            invisible: invisible,\n            visible: visible\n        }\n    });\n    return newImpact;\n};\nvar withViewportDisplacement = function(viewport, point) {\n    return add(viewport.scroll.diff.displacement, point);\n};\nvar getClientFromPageBorderBoxCenter = function(_ref) {\n    var pageBorderBoxCenter = _ref.pageBorderBoxCenter, draggable = _ref.draggable, viewport = _ref.viewport;\n    var withoutPageScrollChange = withViewportDisplacement(viewport, pageBorderBoxCenter);\n    var offset = subtract(withoutPageScrollChange, draggable.page.borderBox.center);\n    return add(draggable.client.borderBox.center, offset);\n};\nvar isTotallyVisibleInNewLocation = function(_ref) {\n    var draggable = _ref.draggable, destination = _ref.destination, newPageBorderBoxCenter = _ref.newPageBorderBoxCenter, viewport = _ref.viewport, withDroppableDisplacement = _ref.withDroppableDisplacement, _ref$onlyOnMainAxis = _ref.onlyOnMainAxis, onlyOnMainAxis = _ref$onlyOnMainAxis === void 0 ? false : _ref$onlyOnMainAxis;\n    var changeNeeded = subtract(newPageBorderBoxCenter, draggable.page.borderBox.center);\n    var shifted = offsetByPosition(draggable.page.borderBox, changeNeeded);\n    var args = {\n        target: shifted,\n        destination: destination,\n        withDroppableDisplacement: withDroppableDisplacement,\n        viewport: viewport\n    };\n    return onlyOnMainAxis ? isTotallyVisibleOnAxis(args) : isTotallyVisible(args);\n};\nvar moveToNextPlace = function(_ref) {\n    var isMovingForward = _ref.isMovingForward, draggable = _ref.draggable, destination = _ref.destination, draggables = _ref.draggables, previousImpact = _ref.previousImpact, viewport = _ref.viewport, previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter, previousClientSelection = _ref.previousClientSelection, afterCritical = _ref.afterCritical;\n    if (!destination.isEnabled) {\n        return null;\n    }\n    var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n    var isInHomeList = isHomeOf(draggable, destination);\n    var impact = moveToNextCombine({\n        isMovingForward: isMovingForward,\n        draggable: draggable,\n        destination: destination,\n        insideDestination: insideDestination,\n        previousImpact: previousImpact\n    }) || moveToNextIndex({\n        isMovingForward: isMovingForward,\n        isInHomeList: isInHomeList,\n        draggable: draggable,\n        draggables: draggables,\n        destination: destination,\n        insideDestination: insideDestination,\n        previousImpact: previousImpact,\n        viewport: viewport,\n        afterCritical: afterCritical\n    });\n    if (!impact) {\n        return null;\n    }\n    var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n        impact: impact,\n        draggable: draggable,\n        droppable: destination,\n        draggables: draggables,\n        afterCritical: afterCritical\n    });\n    var isVisibleInNewLocation = isTotallyVisibleInNewLocation({\n        draggable: draggable,\n        destination: destination,\n        newPageBorderBoxCenter: pageBorderBoxCenter,\n        viewport: viewport.frame,\n        withDroppableDisplacement: false,\n        onlyOnMainAxis: true\n    });\n    if (isVisibleInNewLocation) {\n        var clientSelection = getClientFromPageBorderBoxCenter({\n            pageBorderBoxCenter: pageBorderBoxCenter,\n            draggable: draggable,\n            viewport: viewport\n        });\n        return {\n            clientSelection: clientSelection,\n            impact: impact,\n            scrollJumpRequest: null\n        };\n    }\n    var distance = subtract(pageBorderBoxCenter, previousPageBorderBoxCenter);\n    var cautious = speculativelyIncrease({\n        impact: impact,\n        viewport: viewport,\n        destination: destination,\n        draggables: draggables,\n        maxScrollChange: distance\n    });\n    return {\n        clientSelection: previousClientSelection,\n        impact: cautious,\n        scrollJumpRequest: distance\n    };\n};\nvar getKnownActive = function getKnownActive(droppable) {\n    var rect = droppable.subject.active;\n    !rect ?  true ? invariant(false, \"Cannot get clipped area from droppable\") : 0 : void 0;\n    return rect;\n};\nvar getBestCrossAxisDroppable = function(_ref) {\n    var isMovingForward = _ref.isMovingForward, pageBorderBoxCenter = _ref.pageBorderBoxCenter, source = _ref.source, droppables = _ref.droppables, viewport = _ref.viewport;\n    var active = source.subject.active;\n    if (!active) {\n        return null;\n    }\n    var axis = source.axis;\n    var isBetweenSourceClipped = isWithin(active[axis.start], active[axis.end]);\n    var candidates = toDroppableList(droppables).filter(function(droppable) {\n        return droppable !== source;\n    }).filter(function(droppable) {\n        return droppable.isEnabled;\n    }).filter(function(droppable) {\n        return Boolean(droppable.subject.active);\n    }).filter(function(droppable) {\n        return isPartiallyVisibleThroughFrame(viewport.frame)(getKnownActive(droppable));\n    }).filter(function(droppable) {\n        var activeOfTarget = getKnownActive(droppable);\n        if (isMovingForward) {\n            return active[axis.crossAxisEnd] < activeOfTarget[axis.crossAxisEnd];\n        }\n        return activeOfTarget[axis.crossAxisStart] < active[axis.crossAxisStart];\n    }).filter(function(droppable) {\n        var activeOfTarget = getKnownActive(droppable);\n        var isBetweenDestinationClipped = isWithin(activeOfTarget[axis.start], activeOfTarget[axis.end]);\n        return isBetweenSourceClipped(activeOfTarget[axis.start]) || isBetweenSourceClipped(activeOfTarget[axis.end]) || isBetweenDestinationClipped(active[axis.start]) || isBetweenDestinationClipped(active[axis.end]);\n    }).sort(function(a, b) {\n        var first = getKnownActive(a)[axis.crossAxisStart];\n        var second = getKnownActive(b)[axis.crossAxisStart];\n        if (isMovingForward) {\n            return first - second;\n        }\n        return second - first;\n    }).filter(function(droppable, index, array) {\n        return getKnownActive(droppable)[axis.crossAxisStart] === getKnownActive(array[0])[axis.crossAxisStart];\n    });\n    if (!candidates.length) {\n        return null;\n    }\n    if (candidates.length === 1) {\n        return candidates[0];\n    }\n    var contains = candidates.filter(function(droppable) {\n        var isWithinDroppable = isWithin(getKnownActive(droppable)[axis.start], getKnownActive(droppable)[axis.end]);\n        return isWithinDroppable(pageBorderBoxCenter[axis.line]);\n    });\n    if (contains.length === 1) {\n        return contains[0];\n    }\n    if (contains.length > 1) {\n        return contains.sort(function(a, b) {\n            return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];\n        })[0];\n    }\n    return candidates.sort(function(a, b) {\n        var first = closest(pageBorderBoxCenter, getCorners(getKnownActive(a)));\n        var second = closest(pageBorderBoxCenter, getCorners(getKnownActive(b)));\n        if (first !== second) {\n            return first - second;\n        }\n        return getKnownActive(a)[axis.start] - getKnownActive(b)[axis.start];\n    })[0];\n};\nvar getCurrentPageBorderBoxCenter = function getCurrentPageBorderBoxCenter(draggable, afterCritical) {\n    var original = draggable.page.borderBox.center;\n    return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? subtract(original, afterCritical.displacedBy.point) : original;\n};\nvar getCurrentPageBorderBox = function getCurrentPageBorderBox(draggable, afterCritical) {\n    var original = draggable.page.borderBox;\n    return didStartAfterCritical(draggable.descriptor.id, afterCritical) ? offsetByPosition(original, negate(afterCritical.displacedBy.point)) : original;\n};\nvar getClosestDraggable = function(_ref) {\n    var pageBorderBoxCenter = _ref.pageBorderBoxCenter, viewport = _ref.viewport, destination = _ref.destination, insideDestination = _ref.insideDestination, afterCritical = _ref.afterCritical;\n    var sorted = insideDestination.filter(function(draggable) {\n        return isTotallyVisible({\n            target: getCurrentPageBorderBox(draggable, afterCritical),\n            destination: destination,\n            viewport: viewport.frame,\n            withDroppableDisplacement: true\n        });\n    }).sort(function(a, b) {\n        var distanceToA = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(a, afterCritical)));\n        var distanceToB = distance(pageBorderBoxCenter, withDroppableDisplacement(destination, getCurrentPageBorderBoxCenter(b, afterCritical)));\n        if (distanceToA < distanceToB) {\n            return -1;\n        }\n        if (distanceToB < distanceToA) {\n            return 1;\n        }\n        return a.descriptor.index - b.descriptor.index;\n    });\n    return sorted[0] || null;\n};\nvar getDisplacedBy = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function getDisplacedBy(axis, displaceBy) {\n    var displacement = displaceBy[axis.line];\n    return {\n        value: displacement,\n        point: patch(axis.line, displacement)\n    };\n});\nvar getRequiredGrowthForPlaceholder = function getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables) {\n    var axis = droppable.axis;\n    if (droppable.descriptor.mode === \"virtual\") {\n        return patch(axis.line, placeholderSize[axis.line]);\n    }\n    var availableSpace = droppable.subject.page.contentBox[axis.size];\n    var insideDroppable = getDraggablesInsideDroppable(droppable.descriptor.id, draggables);\n    var spaceUsed = insideDroppable.reduce(function(sum, dimension) {\n        return sum + dimension.client.marginBox[axis.size];\n    }, 0);\n    var requiredSpace = spaceUsed + placeholderSize[axis.line];\n    var needsToGrowBy = requiredSpace - availableSpace;\n    if (needsToGrowBy <= 0) {\n        return null;\n    }\n    return patch(axis.line, needsToGrowBy);\n};\nvar withMaxScroll = function withMaxScroll(frame, max) {\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, frame, {\n        scroll: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, frame.scroll, {\n            max: max\n        })\n    });\n};\nvar addPlaceholder = function addPlaceholder(droppable, draggable, draggables) {\n    var frame = droppable.frame;\n    !!isHomeOf(draggable, droppable) ?  true ? invariant(false, \"Should not add placeholder space to home list\") : 0 : void 0;\n    !!droppable.subject.withPlaceholder ?  true ? invariant(false, \"Cannot add placeholder size to a subject when it already has one\") : 0 : void 0;\n    var placeholderSize = getDisplacedBy(droppable.axis, draggable.displaceBy).point;\n    var requiredGrowth = getRequiredGrowthForPlaceholder(droppable, placeholderSize, draggables);\n    var added = {\n        placeholderSize: placeholderSize,\n        increasedBy: requiredGrowth,\n        oldFrameMaxScroll: droppable.frame ? droppable.frame.scroll.max : null\n    };\n    if (!frame) {\n        var _subject = getSubject({\n            page: droppable.subject.page,\n            withPlaceholder: added,\n            axis: droppable.axis,\n            frame: droppable.frame\n        });\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, droppable, {\n            subject: _subject\n        });\n    }\n    var maxScroll = requiredGrowth ? add(frame.scroll.max, requiredGrowth) : frame.scroll.max;\n    var newFrame = withMaxScroll(frame, maxScroll);\n    var subject = getSubject({\n        page: droppable.subject.page,\n        withPlaceholder: added,\n        axis: droppable.axis,\n        frame: newFrame\n    });\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, droppable, {\n        subject: subject,\n        frame: newFrame\n    });\n};\nvar removePlaceholder = function removePlaceholder(droppable) {\n    var added = droppable.subject.withPlaceholder;\n    !added ?  true ? invariant(false, \"Cannot remove placeholder form subject when there was none\") : 0 : void 0;\n    var frame = droppable.frame;\n    if (!frame) {\n        var _subject2 = getSubject({\n            page: droppable.subject.page,\n            axis: droppable.axis,\n            frame: null,\n            withPlaceholder: null\n        });\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, droppable, {\n            subject: _subject2\n        });\n    }\n    var oldMaxScroll = added.oldFrameMaxScroll;\n    !oldMaxScroll ?  true ? invariant(false, \"Expected droppable with frame to have old max frame scroll when removing placeholder\") : 0 : void 0;\n    var newFrame = withMaxScroll(frame, oldMaxScroll);\n    var subject = getSubject({\n        page: droppable.subject.page,\n        axis: droppable.axis,\n        frame: newFrame,\n        withPlaceholder: null\n    });\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, droppable, {\n        subject: subject,\n        frame: newFrame\n    });\n};\nvar moveToNewDroppable = function(_ref) {\n    var previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter, moveRelativeTo = _ref.moveRelativeTo, insideDestination = _ref.insideDestination, draggable = _ref.draggable, draggables = _ref.draggables, destination = _ref.destination, viewport = _ref.viewport, afterCritical = _ref.afterCritical;\n    if (!moveRelativeTo) {\n        if (insideDestination.length) {\n            return null;\n        }\n        var proposed = {\n            displaced: emptyGroups,\n            displacedBy: noDisplacedBy,\n            at: {\n                type: \"REORDER\",\n                destination: {\n                    droppableId: destination.descriptor.id,\n                    index: 0\n                }\n            }\n        };\n        var proposedPageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n            impact: proposed,\n            draggable: draggable,\n            droppable: destination,\n            draggables: draggables,\n            afterCritical: afterCritical\n        });\n        var withPlaceholder = isHomeOf(draggable, destination) ? destination : addPlaceholder(destination, draggable, draggables);\n        var isVisibleInNewLocation = isTotallyVisibleInNewLocation({\n            draggable: draggable,\n            destination: withPlaceholder,\n            newPageBorderBoxCenter: proposedPageBorderBoxCenter,\n            viewport: viewport.frame,\n            withDroppableDisplacement: false,\n            onlyOnMainAxis: true\n        });\n        return isVisibleInNewLocation ? proposed : null;\n    }\n    var isGoingBeforeTarget = Boolean(previousPageBorderBoxCenter[destination.axis.line] <= moveRelativeTo.page.borderBox.center[destination.axis.line]);\n    var proposedIndex = function() {\n        var relativeTo = moveRelativeTo.descriptor.index;\n        if (moveRelativeTo.descriptor.id === draggable.descriptor.id) {\n            return relativeTo;\n        }\n        if (isGoingBeforeTarget) {\n            return relativeTo;\n        }\n        return relativeTo + 1;\n    }();\n    var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n    return calculateReorderImpact({\n        draggable: draggable,\n        insideDestination: insideDestination,\n        destination: destination,\n        viewport: viewport,\n        displacedBy: displacedBy,\n        last: emptyGroups,\n        index: proposedIndex\n    });\n};\nvar moveCrossAxis = function(_ref) {\n    var isMovingForward = _ref.isMovingForward, previousPageBorderBoxCenter = _ref.previousPageBorderBoxCenter, draggable = _ref.draggable, isOver = _ref.isOver, draggables = _ref.draggables, droppables = _ref.droppables, viewport = _ref.viewport, afterCritical = _ref.afterCritical;\n    var destination = getBestCrossAxisDroppable({\n        isMovingForward: isMovingForward,\n        pageBorderBoxCenter: previousPageBorderBoxCenter,\n        source: isOver,\n        droppables: droppables,\n        viewport: viewport\n    });\n    if (!destination) {\n        return null;\n    }\n    var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n    var moveRelativeTo = getClosestDraggable({\n        pageBorderBoxCenter: previousPageBorderBoxCenter,\n        viewport: viewport,\n        destination: destination,\n        insideDestination: insideDestination,\n        afterCritical: afterCritical\n    });\n    var impact = moveToNewDroppable({\n        previousPageBorderBoxCenter: previousPageBorderBoxCenter,\n        destination: destination,\n        draggable: draggable,\n        draggables: draggables,\n        moveRelativeTo: moveRelativeTo,\n        insideDestination: insideDestination,\n        viewport: viewport,\n        afterCritical: afterCritical\n    });\n    if (!impact) {\n        return null;\n    }\n    var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n        impact: impact,\n        draggable: draggable,\n        droppable: destination,\n        draggables: draggables,\n        afterCritical: afterCritical\n    });\n    var clientSelection = getClientFromPageBorderBoxCenter({\n        pageBorderBoxCenter: pageBorderBoxCenter,\n        draggable: draggable,\n        viewport: viewport\n    });\n    return {\n        clientSelection: clientSelection,\n        impact: impact,\n        scrollJumpRequest: null\n    };\n};\nvar whatIsDraggedOver = function(impact) {\n    var at = impact.at;\n    if (!at) {\n        return null;\n    }\n    if (at.type === \"REORDER\") {\n        return at.destination.droppableId;\n    }\n    return at.combine.droppableId;\n};\nvar getDroppableOver = function getDroppableOver(impact, droppables) {\n    var id = whatIsDraggedOver(impact);\n    return id ? droppables[id] : null;\n};\nvar moveInDirection = function(_ref) {\n    var state = _ref.state, type = _ref.type;\n    var isActuallyOver = getDroppableOver(state.impact, state.dimensions.droppables);\n    var isMainAxisMovementAllowed = Boolean(isActuallyOver);\n    var home = state.dimensions.droppables[state.critical.droppable.id];\n    var isOver = isActuallyOver || home;\n    var direction = isOver.axis.direction;\n    var isMovingOnMainAxis = direction === \"vertical\" && (type === \"MOVE_UP\" || type === \"MOVE_DOWN\") || direction === \"horizontal\" && (type === \"MOVE_LEFT\" || type === \"MOVE_RIGHT\");\n    if (isMovingOnMainAxis && !isMainAxisMovementAllowed) {\n        return null;\n    }\n    var isMovingForward = type === \"MOVE_DOWN\" || type === \"MOVE_RIGHT\";\n    var draggable = state.dimensions.draggables[state.critical.draggable.id];\n    var previousPageBorderBoxCenter = state.current.page.borderBoxCenter;\n    var _state$dimensions = state.dimensions, draggables = _state$dimensions.draggables, droppables = _state$dimensions.droppables;\n    return isMovingOnMainAxis ? moveToNextPlace({\n        isMovingForward: isMovingForward,\n        previousPageBorderBoxCenter: previousPageBorderBoxCenter,\n        draggable: draggable,\n        destination: isOver,\n        draggables: draggables,\n        viewport: state.viewport,\n        previousClientSelection: state.current.client.selection,\n        previousImpact: state.impact,\n        afterCritical: state.afterCritical\n    }) : moveCrossAxis({\n        isMovingForward: isMovingForward,\n        previousPageBorderBoxCenter: previousPageBorderBoxCenter,\n        draggable: draggable,\n        isOver: isOver,\n        draggables: draggables,\n        droppables: droppables,\n        viewport: state.viewport,\n        afterCritical: state.afterCritical\n    });\n};\nfunction isMovementAllowed(state) {\n    return state.phase === \"DRAGGING\" || state.phase === \"COLLECTING\";\n}\nfunction isPositionInFrame(frame) {\n    var isWithinVertical = isWithin(frame.top, frame.bottom);\n    var isWithinHorizontal = isWithin(frame.left, frame.right);\n    return function run(point) {\n        return isWithinVertical(point.y) && isWithinHorizontal(point.x);\n    };\n}\nfunction getHasOverlap(first, second) {\n    return first.left < second.right && first.right > second.left && first.top < second.bottom && first.bottom > second.top;\n}\nfunction getFurthestAway(_ref) {\n    var pageBorderBox = _ref.pageBorderBox, draggable = _ref.draggable, candidates = _ref.candidates;\n    var startCenter = draggable.page.borderBox.center;\n    var sorted = candidates.map(function(candidate) {\n        var axis = candidate.axis;\n        var target = patch(candidate.axis.line, pageBorderBox.center[axis.line], candidate.page.borderBox.center[axis.crossAxisLine]);\n        return {\n            id: candidate.descriptor.id,\n            distance: distance(startCenter, target)\n        };\n    }).sort(function(a, b) {\n        return b.distance - a.distance;\n    });\n    return sorted[0] ? sorted[0].id : null;\n}\nfunction getDroppableOver$1(_ref2) {\n    var pageBorderBox = _ref2.pageBorderBox, draggable = _ref2.draggable, droppables = _ref2.droppables;\n    var candidates = toDroppableList(droppables).filter(function(item) {\n        if (!item.isEnabled) {\n            return false;\n        }\n        var active = item.subject.active;\n        if (!active) {\n            return false;\n        }\n        if (!getHasOverlap(pageBorderBox, active)) {\n            return false;\n        }\n        if (isPositionInFrame(active)(pageBorderBox.center)) {\n            return true;\n        }\n        var axis = item.axis;\n        var childCenter = active.center[axis.crossAxisLine];\n        var crossAxisStart = pageBorderBox[axis.crossAxisStart];\n        var crossAxisEnd = pageBorderBox[axis.crossAxisEnd];\n        var isContained = isWithin(active[axis.crossAxisStart], active[axis.crossAxisEnd]);\n        var isStartContained = isContained(crossAxisStart);\n        var isEndContained = isContained(crossAxisEnd);\n        if (!isStartContained && !isEndContained) {\n            return true;\n        }\n        if (isStartContained) {\n            return crossAxisStart < childCenter;\n        }\n        return crossAxisEnd > childCenter;\n    });\n    if (!candidates.length) {\n        return null;\n    }\n    if (candidates.length === 1) {\n        return candidates[0].descriptor.id;\n    }\n    return getFurthestAway({\n        pageBorderBox: pageBorderBox,\n        draggable: draggable,\n        candidates: candidates\n    });\n}\nvar offsetRectByPosition = function offsetRectByPosition(rect, point) {\n    return (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getRect)(offsetByPosition(rect, point));\n};\nvar withDroppableScroll = function(droppable, area) {\n    var frame = droppable.frame;\n    if (!frame) {\n        return area;\n    }\n    return offsetRectByPosition(area, frame.scroll.diff.value);\n};\nfunction getIsDisplaced(_ref) {\n    var displaced = _ref.displaced, id = _ref.id;\n    return Boolean(displaced.visible[id] || displaced.invisible[id]);\n}\nfunction atIndex(_ref) {\n    var draggable = _ref.draggable, closest = _ref.closest, inHomeList = _ref.inHomeList;\n    if (!closest) {\n        return null;\n    }\n    if (!inHomeList) {\n        return closest.descriptor.index;\n    }\n    if (closest.descriptor.index > draggable.descriptor.index) {\n        return closest.descriptor.index - 1;\n    }\n    return closest.descriptor.index;\n}\nvar getReorderImpact = function(_ref2) {\n    var targetRect = _ref2.pageBorderBoxWithDroppableScroll, draggable = _ref2.draggable, destination = _ref2.destination, insideDestination = _ref2.insideDestination, last = _ref2.last, viewport = _ref2.viewport, afterCritical = _ref2.afterCritical;\n    var axis = destination.axis;\n    var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n    var displacement = displacedBy.value;\n    var targetStart = targetRect[axis.start];\n    var targetEnd = targetRect[axis.end];\n    var withoutDragging = removeDraggableFromList(draggable, insideDestination);\n    var closest = find(withoutDragging, function(child) {\n        var id = child.descriptor.id;\n        var childCenter = child.page.borderBox.center[axis.line];\n        var didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);\n        var isDisplaced = getIsDisplaced({\n            displaced: last,\n            id: id\n        });\n        if (didStartAfterCritical$1) {\n            if (isDisplaced) {\n                return targetEnd <= childCenter;\n            }\n            return targetStart < childCenter - displacement;\n        }\n        if (isDisplaced) {\n            return targetEnd <= childCenter + displacement;\n        }\n        return targetStart < childCenter;\n    });\n    var newIndex = atIndex({\n        draggable: draggable,\n        closest: closest,\n        inHomeList: isHomeOf(draggable, destination)\n    });\n    return calculateReorderImpact({\n        draggable: draggable,\n        insideDestination: insideDestination,\n        destination: destination,\n        viewport: viewport,\n        last: last,\n        displacedBy: displacedBy,\n        index: newIndex\n    });\n};\nvar combineThresholdDivisor = 4;\nvar getCombineImpact = function(_ref) {\n    var draggable = _ref.draggable, targetRect = _ref.pageBorderBoxWithDroppableScroll, previousImpact = _ref.previousImpact, destination = _ref.destination, insideDestination = _ref.insideDestination, afterCritical = _ref.afterCritical;\n    if (!destination.isCombineEnabled) {\n        return null;\n    }\n    var axis = destination.axis;\n    var displacedBy = getDisplacedBy(destination.axis, draggable.displaceBy);\n    var displacement = displacedBy.value;\n    var targetStart = targetRect[axis.start];\n    var targetEnd = targetRect[axis.end];\n    var withoutDragging = removeDraggableFromList(draggable, insideDestination);\n    var combineWith = find(withoutDragging, function(child) {\n        var id = child.descriptor.id;\n        var childRect = child.page.borderBox;\n        var childSize = childRect[axis.size];\n        var threshold = childSize / combineThresholdDivisor;\n        var didStartAfterCritical$1 = didStartAfterCritical(id, afterCritical);\n        var isDisplaced = getIsDisplaced({\n            displaced: previousImpact.displaced,\n            id: id\n        });\n        if (didStartAfterCritical$1) {\n            if (isDisplaced) {\n                return targetEnd > childRect[axis.start] + threshold && targetEnd < childRect[axis.end] - threshold;\n            }\n            return targetStart > childRect[axis.start] - displacement + threshold && targetStart < childRect[axis.end] - displacement - threshold;\n        }\n        if (isDisplaced) {\n            return targetEnd > childRect[axis.start] + displacement + threshold && targetEnd < childRect[axis.end] + displacement - threshold;\n        }\n        return targetStart > childRect[axis.start] + threshold && targetStart < childRect[axis.end] - threshold;\n    });\n    if (!combineWith) {\n        return null;\n    }\n    var impact = {\n        displacedBy: displacedBy,\n        displaced: previousImpact.displaced,\n        at: {\n            type: \"COMBINE\",\n            combine: {\n                draggableId: combineWith.descriptor.id,\n                droppableId: destination.descriptor.id\n            }\n        }\n    };\n    return impact;\n};\nvar getDragImpact = function(_ref) {\n    var pageOffset = _ref.pageOffset, draggable = _ref.draggable, draggables = _ref.draggables, droppables = _ref.droppables, previousImpact = _ref.previousImpact, viewport = _ref.viewport, afterCritical = _ref.afterCritical;\n    var pageBorderBox = offsetRectByPosition(draggable.page.borderBox, pageOffset);\n    var destinationId = getDroppableOver$1({\n        pageBorderBox: pageBorderBox,\n        draggable: draggable,\n        droppables: droppables\n    });\n    if (!destinationId) {\n        return noImpact;\n    }\n    var destination = droppables[destinationId];\n    var insideDestination = getDraggablesInsideDroppable(destination.descriptor.id, draggables);\n    var pageBorderBoxWithDroppableScroll = withDroppableScroll(destination, pageBorderBox);\n    return getCombineImpact({\n        pageBorderBoxWithDroppableScroll: pageBorderBoxWithDroppableScroll,\n        draggable: draggable,\n        previousImpact: previousImpact,\n        destination: destination,\n        insideDestination: insideDestination,\n        afterCritical: afterCritical\n    }) || getReorderImpact({\n        pageBorderBoxWithDroppableScroll: pageBorderBoxWithDroppableScroll,\n        draggable: draggable,\n        destination: destination,\n        insideDestination: insideDestination,\n        last: previousImpact.displaced,\n        viewport: viewport,\n        afterCritical: afterCritical\n    });\n};\nvar patchDroppableMap = function(droppables, updated) {\n    var _extends2;\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, droppables, (_extends2 = {}, _extends2[updated.descriptor.id] = updated, _extends2));\n};\nvar clearUnusedPlaceholder = function clearUnusedPlaceholder(_ref) {\n    var previousImpact = _ref.previousImpact, impact = _ref.impact, droppables = _ref.droppables;\n    var last = whatIsDraggedOver(previousImpact);\n    var now = whatIsDraggedOver(impact);\n    if (!last) {\n        return droppables;\n    }\n    if (last === now) {\n        return droppables;\n    }\n    var lastDroppable = droppables[last];\n    if (!lastDroppable.subject.withPlaceholder) {\n        return droppables;\n    }\n    var updated = removePlaceholder(lastDroppable);\n    return patchDroppableMap(droppables, updated);\n};\nvar recomputePlaceholders = function(_ref2) {\n    var draggable = _ref2.draggable, draggables = _ref2.draggables, droppables = _ref2.droppables, previousImpact = _ref2.previousImpact, impact = _ref2.impact;\n    var cleaned = clearUnusedPlaceholder({\n        previousImpact: previousImpact,\n        impact: impact,\n        droppables: droppables\n    });\n    var isOver = whatIsDraggedOver(impact);\n    if (!isOver) {\n        return cleaned;\n    }\n    var droppable = droppables[isOver];\n    if (isHomeOf(draggable, droppable)) {\n        return cleaned;\n    }\n    if (droppable.subject.withPlaceholder) {\n        return cleaned;\n    }\n    var patched = addPlaceholder(droppable, draggable, draggables);\n    return patchDroppableMap(cleaned, patched);\n};\nvar update = function(_ref) {\n    var state = _ref.state, forcedClientSelection = _ref.clientSelection, forcedDimensions = _ref.dimensions, forcedViewport = _ref.viewport, forcedImpact = _ref.impact, scrollJumpRequest = _ref.scrollJumpRequest;\n    var viewport = forcedViewport || state.viewport;\n    var dimensions = forcedDimensions || state.dimensions;\n    var clientSelection = forcedClientSelection || state.current.client.selection;\n    var offset = subtract(clientSelection, state.initial.client.selection);\n    var client = {\n        offset: offset,\n        selection: clientSelection,\n        borderBoxCenter: add(state.initial.client.borderBoxCenter, offset)\n    };\n    var page = {\n        selection: add(client.selection, viewport.scroll.current),\n        borderBoxCenter: add(client.borderBoxCenter, viewport.scroll.current),\n        offset: add(client.offset, viewport.scroll.diff.value)\n    };\n    var current = {\n        client: client,\n        page: page\n    };\n    if (state.phase === \"COLLECTING\") {\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            phase: \"COLLECTING\"\n        }, state, {\n            dimensions: dimensions,\n            viewport: viewport,\n            current: current\n        });\n    }\n    var draggable = dimensions.draggables[state.critical.draggable.id];\n    var newImpact = forcedImpact || getDragImpact({\n        pageOffset: page.offset,\n        draggable: draggable,\n        draggables: dimensions.draggables,\n        droppables: dimensions.droppables,\n        previousImpact: state.impact,\n        viewport: viewport,\n        afterCritical: state.afterCritical\n    });\n    var withUpdatedPlaceholders = recomputePlaceholders({\n        draggable: draggable,\n        impact: newImpact,\n        previousImpact: state.impact,\n        draggables: dimensions.draggables,\n        droppables: dimensions.droppables\n    });\n    var result = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, state, {\n        current: current,\n        dimensions: {\n            draggables: dimensions.draggables,\n            droppables: withUpdatedPlaceholders\n        },\n        impact: newImpact,\n        viewport: viewport,\n        scrollJumpRequest: scrollJumpRequest || null,\n        forceShouldAnimate: scrollJumpRequest ? false : null\n    });\n    return result;\n};\nfunction getDraggables$1(ids, draggables) {\n    return ids.map(function(id) {\n        return draggables[id];\n    });\n}\nvar recompute = function(_ref) {\n    var impact = _ref.impact, viewport = _ref.viewport, draggables = _ref.draggables, destination = _ref.destination, forceShouldAnimate = _ref.forceShouldAnimate;\n    var last = impact.displaced;\n    var afterDragging = getDraggables$1(last.all, draggables);\n    var displaced = getDisplacementGroups({\n        afterDragging: afterDragging,\n        destination: destination,\n        displacedBy: impact.displacedBy,\n        viewport: viewport.frame,\n        forceShouldAnimate: forceShouldAnimate,\n        last: last\n    });\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, impact, {\n        displaced: displaced\n    });\n};\nvar getClientBorderBoxCenter = function(_ref) {\n    var impact = _ref.impact, draggable = _ref.draggable, droppable = _ref.droppable, draggables = _ref.draggables, viewport = _ref.viewport, afterCritical = _ref.afterCritical;\n    var pageBorderBoxCenter = getPageBorderBoxCenterFromImpact({\n        impact: impact,\n        draggable: draggable,\n        draggables: draggables,\n        droppable: droppable,\n        afterCritical: afterCritical\n    });\n    return getClientFromPageBorderBoxCenter({\n        pageBorderBoxCenter: pageBorderBoxCenter,\n        draggable: draggable,\n        viewport: viewport\n    });\n};\nvar refreshSnap = function(_ref) {\n    var state = _ref.state, forcedDimensions = _ref.dimensions, forcedViewport = _ref.viewport;\n    !(state.movementMode === \"SNAP\") ?  true ? invariant(false) : 0 : void 0;\n    var needsVisibilityCheck = state.impact;\n    var viewport = forcedViewport || state.viewport;\n    var dimensions = forcedDimensions || state.dimensions;\n    var draggables = dimensions.draggables, droppables = dimensions.droppables;\n    var draggable = draggables[state.critical.draggable.id];\n    var isOver = whatIsDraggedOver(needsVisibilityCheck);\n    !isOver ?  true ? invariant(false, \"Must be over a destination in SNAP movement mode\") : 0 : void 0;\n    var destination = droppables[isOver];\n    var impact = recompute({\n        impact: needsVisibilityCheck,\n        viewport: viewport,\n        destination: destination,\n        draggables: draggables\n    });\n    var clientSelection = getClientBorderBoxCenter({\n        impact: impact,\n        draggable: draggable,\n        droppable: destination,\n        draggables: draggables,\n        viewport: viewport,\n        afterCritical: state.afterCritical\n    });\n    return update({\n        impact: impact,\n        clientSelection: clientSelection,\n        state: state,\n        dimensions: dimensions,\n        viewport: viewport\n    });\n};\nvar getHomeLocation = function(descriptor) {\n    return {\n        index: descriptor.index,\n        droppableId: descriptor.droppableId\n    };\n};\nvar getLiftEffect = function(_ref) {\n    var draggable = _ref.draggable, home = _ref.home, draggables = _ref.draggables, viewport = _ref.viewport;\n    var displacedBy = getDisplacedBy(home.axis, draggable.displaceBy);\n    var insideHome = getDraggablesInsideDroppable(home.descriptor.id, draggables);\n    var rawIndex = insideHome.indexOf(draggable);\n    !(rawIndex !== -1) ?  true ? invariant(false, \"Expected draggable to be inside home list\") : 0 : void 0;\n    var afterDragging = insideHome.slice(rawIndex + 1);\n    var effected = afterDragging.reduce(function(previous, item) {\n        previous[item.descriptor.id] = true;\n        return previous;\n    }, {});\n    var afterCritical = {\n        inVirtualList: home.descriptor.mode === \"virtual\",\n        displacedBy: displacedBy,\n        effected: effected\n    };\n    var displaced = getDisplacementGroups({\n        afterDragging: afterDragging,\n        destination: home,\n        displacedBy: displacedBy,\n        last: null,\n        viewport: viewport.frame,\n        forceShouldAnimate: false\n    });\n    var impact = {\n        displaced: displaced,\n        displacedBy: displacedBy,\n        at: {\n            type: \"REORDER\",\n            destination: getHomeLocation(draggable.descriptor)\n        }\n    };\n    return {\n        impact: impact,\n        afterCritical: afterCritical\n    };\n};\nvar patchDimensionMap = function(dimensions, updated) {\n    return {\n        draggables: dimensions.draggables,\n        droppables: patchDroppableMap(dimensions.droppables, updated)\n    };\n};\nvar start = function start(key) {\n    if (true) {\n        {\n            return;\n        }\n    }\n};\nvar finish = function finish(key) {\n    if (true) {\n        {\n            return;\n        }\n    }\n};\nvar offsetDraggable = function(_ref) {\n    var draggable = _ref.draggable, offset$1 = _ref.offset, initialWindowScroll = _ref.initialWindowScroll;\n    var client = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.offset)(draggable.client, offset$1);\n    var page = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.withScroll)(client, initialWindowScroll);\n    var moved = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, draggable, {\n        placeholder: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, draggable.placeholder, {\n            client: client\n        }),\n        client: client,\n        page: page\n    });\n    return moved;\n};\nvar getFrame = function(droppable) {\n    var frame = droppable.frame;\n    !frame ?  true ? invariant(false, \"Expected Droppable to have a frame\") : 0 : void 0;\n    return frame;\n};\nvar adjustAdditionsForScrollChanges = function(_ref) {\n    var additions = _ref.additions, updatedDroppables = _ref.updatedDroppables, viewport = _ref.viewport;\n    var windowScrollChange = viewport.scroll.diff.value;\n    return additions.map(function(draggable) {\n        var droppableId = draggable.descriptor.droppableId;\n        var modified = updatedDroppables[droppableId];\n        var frame = getFrame(modified);\n        var droppableScrollChange = frame.scroll.diff.value;\n        var totalChange = add(windowScrollChange, droppableScrollChange);\n        var moved = offsetDraggable({\n            draggable: draggable,\n            offset: totalChange,\n            initialWindowScroll: viewport.scroll.initial\n        });\n        return moved;\n    });\n};\nvar publishWhileDraggingInVirtual = function(_ref) {\n    var state = _ref.state, published = _ref.published;\n    start();\n    var withScrollChange = published.modified.map(function(update) {\n        var existing = state.dimensions.droppables[update.droppableId];\n        var scrolled = scrollDroppable(existing, update.scroll);\n        return scrolled;\n    });\n    var droppables = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, state.dimensions.droppables, {}, toDroppableMap(withScrollChange));\n    var updatedAdditions = toDraggableMap(adjustAdditionsForScrollChanges({\n        additions: published.additions,\n        updatedDroppables: droppables,\n        viewport: state.viewport\n    }));\n    var draggables = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, state.dimensions.draggables, {}, updatedAdditions);\n    published.removals.forEach(function(id) {\n        delete draggables[id];\n    });\n    var dimensions = {\n        droppables: droppables,\n        draggables: draggables\n    };\n    var wasOverId = whatIsDraggedOver(state.impact);\n    var wasOver = wasOverId ? dimensions.droppables[wasOverId] : null;\n    var draggable = dimensions.draggables[state.critical.draggable.id];\n    var home = dimensions.droppables[state.critical.droppable.id];\n    var _getLiftEffect = getLiftEffect({\n        draggable: draggable,\n        home: home,\n        draggables: draggables,\n        viewport: state.viewport\n    }), onLiftImpact = _getLiftEffect.impact, afterCritical = _getLiftEffect.afterCritical;\n    var previousImpact = wasOver && wasOver.isCombineEnabled ? state.impact : onLiftImpact;\n    var impact = getDragImpact({\n        pageOffset: state.current.page.offset,\n        draggable: dimensions.draggables[state.critical.draggable.id],\n        draggables: dimensions.draggables,\n        droppables: dimensions.droppables,\n        previousImpact: previousImpact,\n        viewport: state.viewport,\n        afterCritical: afterCritical\n    });\n    finish();\n    var draggingState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n        phase: \"DRAGGING\"\n    }, state, {\n        phase: \"DRAGGING\",\n        impact: impact,\n        onLiftImpact: onLiftImpact,\n        dimensions: dimensions,\n        afterCritical: afterCritical,\n        forceShouldAnimate: false\n    });\n    if (state.phase === \"COLLECTING\") {\n        return draggingState;\n    }\n    var dropPending = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n        phase: \"DROP_PENDING\"\n    }, draggingState, {\n        phase: \"DROP_PENDING\",\n        reason: state.reason,\n        isWaiting: false\n    });\n    return dropPending;\n};\nvar isSnapping = function isSnapping(state) {\n    return state.movementMode === \"SNAP\";\n};\nvar postDroppableChange = function postDroppableChange(state, updated, isEnabledChanging) {\n    var dimensions = patchDimensionMap(state.dimensions, updated);\n    if (!isSnapping(state) || isEnabledChanging) {\n        return update({\n            state: state,\n            dimensions: dimensions\n        });\n    }\n    return refreshSnap({\n        state: state,\n        dimensions: dimensions\n    });\n};\nfunction removeScrollJumpRequest(state) {\n    if (state.isDragging && state.movementMode === \"SNAP\") {\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            phase: \"DRAGGING\"\n        }, state, {\n            scrollJumpRequest: null\n        });\n    }\n    return state;\n}\nvar idle = {\n    phase: \"IDLE\",\n    completed: null,\n    shouldFlush: false\n};\nvar reducer = function(state, action) {\n    if (state === void 0) {\n        state = idle;\n    }\n    if (action.type === \"FLUSH\") {\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, idle, {\n            shouldFlush: true\n        });\n    }\n    if (action.type === \"INITIAL_PUBLISH\") {\n        !(state.phase === \"IDLE\") ?  true ? invariant(false, \"INITIAL_PUBLISH must come after a IDLE phase\") : 0 : void 0;\n        var _action$payload = action.payload, critical = _action$payload.critical, clientSelection = _action$payload.clientSelection, viewport = _action$payload.viewport, dimensions = _action$payload.dimensions, movementMode = _action$payload.movementMode;\n        var draggable = dimensions.draggables[critical.draggable.id];\n        var home = dimensions.droppables[critical.droppable.id];\n        var client = {\n            selection: clientSelection,\n            borderBoxCenter: draggable.client.borderBox.center,\n            offset: origin\n        };\n        var initial = {\n            client: client,\n            page: {\n                selection: add(client.selection, viewport.scroll.initial),\n                borderBoxCenter: add(client.selection, viewport.scroll.initial),\n                offset: add(client.selection, viewport.scroll.diff.value)\n            }\n        };\n        var isWindowScrollAllowed = toDroppableList(dimensions.droppables).every(function(item) {\n            return !item.isFixedOnPage;\n        });\n        var _getLiftEffect = getLiftEffect({\n            draggable: draggable,\n            home: home,\n            draggables: dimensions.draggables,\n            viewport: viewport\n        }), impact = _getLiftEffect.impact, afterCritical = _getLiftEffect.afterCritical;\n        var result = {\n            phase: \"DRAGGING\",\n            isDragging: true,\n            critical: critical,\n            movementMode: movementMode,\n            dimensions: dimensions,\n            initial: initial,\n            current: initial,\n            isWindowScrollAllowed: isWindowScrollAllowed,\n            impact: impact,\n            afterCritical: afterCritical,\n            onLiftImpact: impact,\n            viewport: viewport,\n            scrollJumpRequest: null,\n            forceShouldAnimate: null\n        };\n        return result;\n    }\n    if (action.type === \"COLLECTION_STARTING\") {\n        if (state.phase === \"COLLECTING\" || state.phase === \"DROP_PENDING\") {\n            return state;\n        }\n        !(state.phase === \"DRAGGING\") ?  true ? invariant(false, \"Collection cannot start from phase \" + state.phase) : 0 : void 0;\n        var _result = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            phase: \"COLLECTING\"\n        }, state, {\n            phase: \"COLLECTING\"\n        });\n        return _result;\n    }\n    if (action.type === \"PUBLISH_WHILE_DRAGGING\") {\n        !(state.phase === \"COLLECTING\" || state.phase === \"DROP_PENDING\") ?  true ? invariant(false, \"Unexpected \" + action.type + \" received in phase \" + state.phase) : 0 : void 0;\n        return publishWhileDraggingInVirtual({\n            state: state,\n            published: action.payload\n        });\n    }\n    if (action.type === \"MOVE\") {\n        if (state.phase === \"DROP_PENDING\") {\n            return state;\n        }\n        !isMovementAllowed(state) ?  true ? invariant(false, action.type + \" not permitted in phase \" + state.phase) : 0 : void 0;\n        var _clientSelection = action.payload.client;\n        if (isEqual(_clientSelection, state.current.client.selection)) {\n            return state;\n        }\n        return update({\n            state: state,\n            clientSelection: _clientSelection,\n            impact: isSnapping(state) ? state.impact : null\n        });\n    }\n    if (action.type === \"UPDATE_DROPPABLE_SCROLL\") {\n        if (state.phase === \"DROP_PENDING\") {\n            return removeScrollJumpRequest(state);\n        }\n        if (state.phase === \"COLLECTING\") {\n            return removeScrollJumpRequest(state);\n        }\n        !isMovementAllowed(state) ?  true ? invariant(false, action.type + \" not permitted in phase \" + state.phase) : 0 : void 0;\n        var _action$payload2 = action.payload, id = _action$payload2.id, newScroll = _action$payload2.newScroll;\n        var target = state.dimensions.droppables[id];\n        if (!target) {\n            return state;\n        }\n        var scrolled = scrollDroppable(target, newScroll);\n        return postDroppableChange(state, scrolled, false);\n    }\n    if (action.type === \"UPDATE_DROPPABLE_IS_ENABLED\") {\n        if (state.phase === \"DROP_PENDING\") {\n            return state;\n        }\n        !isMovementAllowed(state) ?  true ? invariant(false, \"Attempting to move in an unsupported phase \" + state.phase) : 0 : void 0;\n        var _action$payload3 = action.payload, _id = _action$payload3.id, isEnabled = _action$payload3.isEnabled;\n        var _target = state.dimensions.droppables[_id];\n        !_target ?  true ? invariant(false, \"Cannot find Droppable[id: \" + _id + \"] to toggle its enabled state\") : 0 : void 0;\n        !(_target.isEnabled !== isEnabled) ?  true ? invariant(false, \"Trying to set droppable isEnabled to \" + String(isEnabled) + \"\\n      but it is already \" + String(_target.isEnabled)) : 0 : void 0;\n        var updated = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, _target, {\n            isEnabled: isEnabled\n        });\n        return postDroppableChange(state, updated, true);\n    }\n    if (action.type === \"UPDATE_DROPPABLE_IS_COMBINE_ENABLED\") {\n        if (state.phase === \"DROP_PENDING\") {\n            return state;\n        }\n        !isMovementAllowed(state) ?  true ? invariant(false, \"Attempting to move in an unsupported phase \" + state.phase) : 0 : void 0;\n        var _action$payload4 = action.payload, _id2 = _action$payload4.id, isCombineEnabled = _action$payload4.isCombineEnabled;\n        var _target2 = state.dimensions.droppables[_id2];\n        !_target2 ?  true ? invariant(false, \"Cannot find Droppable[id: \" + _id2 + \"] to toggle its isCombineEnabled state\") : 0 : void 0;\n        !(_target2.isCombineEnabled !== isCombineEnabled) ?  true ? invariant(false, \"Trying to set droppable isCombineEnabled to \" + String(isCombineEnabled) + \"\\n      but it is already \" + String(_target2.isCombineEnabled)) : 0 : void 0;\n        var _updated = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, _target2, {\n            isCombineEnabled: isCombineEnabled\n        });\n        return postDroppableChange(state, _updated, true);\n    }\n    if (action.type === \"MOVE_BY_WINDOW_SCROLL\") {\n        if (state.phase === \"DROP_PENDING\" || state.phase === \"DROP_ANIMATING\") {\n            return state;\n        }\n        !isMovementAllowed(state) ?  true ? invariant(false, \"Cannot move by window in phase \" + state.phase) : 0 : void 0;\n        !state.isWindowScrollAllowed ?  true ? invariant(false, \"Window scrolling is currently not supported for fixed lists\") : 0 : void 0;\n        var _newScroll = action.payload.newScroll;\n        if (isEqual(state.viewport.scroll.current, _newScroll)) {\n            return removeScrollJumpRequest(state);\n        }\n        var _viewport = scrollViewport(state.viewport, _newScroll);\n        if (isSnapping(state)) {\n            return refreshSnap({\n                state: state,\n                viewport: _viewport\n            });\n        }\n        return update({\n            state: state,\n            viewport: _viewport\n        });\n    }\n    if (action.type === \"UPDATE_VIEWPORT_MAX_SCROLL\") {\n        if (!isMovementAllowed(state)) {\n            return state;\n        }\n        var maxScroll = action.payload.maxScroll;\n        if (isEqual(maxScroll, state.viewport.scroll.max)) {\n            return state;\n        }\n        var withMaxScroll = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, state.viewport, {\n            scroll: (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, state.viewport.scroll, {\n                max: maxScroll\n            })\n        });\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            phase: \"DRAGGING\"\n        }, state, {\n            viewport: withMaxScroll\n        });\n    }\n    if (action.type === \"MOVE_UP\" || action.type === \"MOVE_DOWN\" || action.type === \"MOVE_LEFT\" || action.type === \"MOVE_RIGHT\") {\n        if (state.phase === \"COLLECTING\" || state.phase === \"DROP_PENDING\") {\n            return state;\n        }\n        !(state.phase === \"DRAGGING\") ?  true ? invariant(false, action.type + \" received while not in DRAGGING phase\") : 0 : void 0;\n        var _result2 = moveInDirection({\n            state: state,\n            type: action.type\n        });\n        if (!_result2) {\n            return state;\n        }\n        return update({\n            state: state,\n            impact: _result2.impact,\n            clientSelection: _result2.clientSelection,\n            scrollJumpRequest: _result2.scrollJumpRequest\n        });\n    }\n    if (action.type === \"DROP_PENDING\") {\n        var reason = action.payload.reason;\n        !(state.phase === \"COLLECTING\") ?  true ? invariant(false, \"Can only move into the DROP_PENDING phase from the COLLECTING phase\") : 0 : void 0;\n        var newState = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            phase: \"DROP_PENDING\"\n        }, state, {\n            phase: \"DROP_PENDING\",\n            isWaiting: true,\n            reason: reason\n        });\n        return newState;\n    }\n    if (action.type === \"DROP_ANIMATE\") {\n        var _action$payload5 = action.payload, completed = _action$payload5.completed, dropDuration = _action$payload5.dropDuration, newHomeClientOffset = _action$payload5.newHomeClientOffset;\n        !(state.phase === \"DRAGGING\" || state.phase === \"DROP_PENDING\") ?  true ? invariant(false, \"Cannot animate drop from phase \" + state.phase) : 0 : void 0;\n        var _result3 = {\n            phase: \"DROP_ANIMATING\",\n            completed: completed,\n            dropDuration: dropDuration,\n            newHomeClientOffset: newHomeClientOffset,\n            dimensions: state.dimensions\n        };\n        return _result3;\n    }\n    if (action.type === \"DROP_COMPLETE\") {\n        var _completed = action.payload.completed;\n        return {\n            phase: \"IDLE\",\n            completed: _completed,\n            shouldFlush: false\n        };\n    }\n    return state;\n};\nvar beforeInitialCapture = function beforeInitialCapture(args) {\n    return {\n        type: \"BEFORE_INITIAL_CAPTURE\",\n        payload: args\n    };\n};\nvar lift = function lift(args) {\n    return {\n        type: \"LIFT\",\n        payload: args\n    };\n};\nvar initialPublish = function initialPublish(args) {\n    return {\n        type: \"INITIAL_PUBLISH\",\n        payload: args\n    };\n};\nvar publishWhileDragging = function publishWhileDragging(args) {\n    return {\n        type: \"PUBLISH_WHILE_DRAGGING\",\n        payload: args\n    };\n};\nvar collectionStarting = function collectionStarting() {\n    return {\n        type: \"COLLECTION_STARTING\",\n        payload: null\n    };\n};\nvar updateDroppableScroll = function updateDroppableScroll(args) {\n    return {\n        type: \"UPDATE_DROPPABLE_SCROLL\",\n        payload: args\n    };\n};\nvar updateDroppableIsEnabled = function updateDroppableIsEnabled(args) {\n    return {\n        type: \"UPDATE_DROPPABLE_IS_ENABLED\",\n        payload: args\n    };\n};\nvar updateDroppableIsCombineEnabled = function updateDroppableIsCombineEnabled(args) {\n    return {\n        type: \"UPDATE_DROPPABLE_IS_COMBINE_ENABLED\",\n        payload: args\n    };\n};\nvar move = function move(args) {\n    return {\n        type: \"MOVE\",\n        payload: args\n    };\n};\nvar moveByWindowScroll = function moveByWindowScroll(args) {\n    return {\n        type: \"MOVE_BY_WINDOW_SCROLL\",\n        payload: args\n    };\n};\nvar updateViewportMaxScroll = function updateViewportMaxScroll(args) {\n    return {\n        type: \"UPDATE_VIEWPORT_MAX_SCROLL\",\n        payload: args\n    };\n};\nvar moveUp = function moveUp() {\n    return {\n        type: \"MOVE_UP\",\n        payload: null\n    };\n};\nvar moveDown = function moveDown() {\n    return {\n        type: \"MOVE_DOWN\",\n        payload: null\n    };\n};\nvar moveRight = function moveRight() {\n    return {\n        type: \"MOVE_RIGHT\",\n        payload: null\n    };\n};\nvar moveLeft = function moveLeft() {\n    return {\n        type: \"MOVE_LEFT\",\n        payload: null\n    };\n};\nvar flush = function flush() {\n    return {\n        type: \"FLUSH\",\n        payload: null\n    };\n};\nvar animateDrop = function animateDrop(args) {\n    return {\n        type: \"DROP_ANIMATE\",\n        payload: args\n    };\n};\nvar completeDrop = function completeDrop(args) {\n    return {\n        type: \"DROP_COMPLETE\",\n        payload: args\n    };\n};\nvar drop = function drop(args) {\n    return {\n        type: \"DROP\",\n        payload: args\n    };\n};\nvar dropPending = function dropPending(args) {\n    return {\n        type: \"DROP_PENDING\",\n        payload: args\n    };\n};\nvar dropAnimationFinished = function dropAnimationFinished() {\n    return {\n        type: \"DROP_ANIMATION_FINISHED\",\n        payload: null\n    };\n};\nfunction checkIndexes(insideDestination) {\n    if (insideDestination.length <= 1) {\n        return;\n    }\n    var indexes = insideDestination.map(function(d) {\n        return d.descriptor.index;\n    });\n    var errors = {};\n    for(var i = 1; i < indexes.length; i++){\n        var current = indexes[i];\n        var previous = indexes[i - 1];\n        if (current !== previous + 1) {\n            errors[current] = true;\n        }\n    }\n    if (!Object.keys(errors).length) {\n        return;\n    }\n    var formatted = indexes.map(function(index) {\n        var hasError = Boolean(errors[index]);\n        return hasError ? \"[\\uD83D\\uDD25\" + index + \"]\" : \"\" + index;\n    }).join(\", \");\n     true ? warning(\"\\n    Detected non-consecutive <Draggable /> indexes.\\n\\n    (This can cause unexpected bugs)\\n\\n    \" + formatted + \"\\n  \") : 0;\n}\nfunction validateDimensions(critical, dimensions) {\n    if (true) {\n        var insideDestination = getDraggablesInsideDroppable(critical.droppable.id, dimensions.draggables);\n        checkIndexes(insideDestination);\n    }\n}\nvar lift$1 = function(marshal) {\n    return function(_ref) {\n        var getState = _ref.getState, dispatch = _ref.dispatch;\n        return function(next) {\n            return function(action) {\n                if (action.type !== \"LIFT\") {\n                    next(action);\n                    return;\n                }\n                var _action$payload = action.payload, id = _action$payload.id, clientSelection = _action$payload.clientSelection, movementMode = _action$payload.movementMode;\n                var initial = getState();\n                if (initial.phase === \"DROP_ANIMATING\") {\n                    dispatch(completeDrop({\n                        completed: initial.completed\n                    }));\n                }\n                !(getState().phase === \"IDLE\") ?  true ? invariant(false, \"Unexpected phase to start a drag\") : 0 : void 0;\n                dispatch(flush());\n                dispatch(beforeInitialCapture({\n                    draggableId: id,\n                    movementMode: movementMode\n                }));\n                var scrollOptions = {\n                    shouldPublishImmediately: movementMode === \"SNAP\"\n                };\n                var request = {\n                    draggableId: id,\n                    scrollOptions: scrollOptions\n                };\n                var _marshal$startPublish = marshal.startPublishing(request), critical = _marshal$startPublish.critical, dimensions = _marshal$startPublish.dimensions, viewport = _marshal$startPublish.viewport;\n                validateDimensions(critical, dimensions);\n                dispatch(initialPublish({\n                    critical: critical,\n                    dimensions: dimensions,\n                    clientSelection: clientSelection,\n                    movementMode: movementMode,\n                    viewport: viewport\n                }));\n            };\n        };\n    };\n};\nvar style = function(marshal) {\n    return function() {\n        return function(next) {\n            return function(action) {\n                if (action.type === \"INITIAL_PUBLISH\") {\n                    marshal.dragging();\n                }\n                if (action.type === \"DROP_ANIMATE\") {\n                    marshal.dropping(action.payload.completed.result.reason);\n                }\n                if (action.type === \"FLUSH\" || action.type === \"DROP_COMPLETE\") {\n                    marshal.resting();\n                }\n                next(action);\n            };\n        };\n    };\n};\nvar curves = {\n    outOfTheWay: \"cubic-bezier(0.2, 0, 0, 1)\",\n    drop: \"cubic-bezier(.2,1,.1,1)\"\n};\nvar combine = {\n    opacity: {\n        drop: 0,\n        combining: 0.7\n    },\n    scale: {\n        drop: 0.75\n    }\n};\nvar timings = {\n    outOfTheWay: 0.2,\n    minDropTime: 0.33,\n    maxDropTime: 0.55\n};\nvar outOfTheWayTiming = timings.outOfTheWay + \"s \" + curves.outOfTheWay;\nvar transitions = {\n    fluid: \"opacity \" + outOfTheWayTiming,\n    snap: \"transform \" + outOfTheWayTiming + \", opacity \" + outOfTheWayTiming,\n    drop: function drop(duration) {\n        var timing = duration + \"s \" + curves.drop;\n        return \"transform \" + timing + \", opacity \" + timing;\n    },\n    outOfTheWay: \"transform \" + outOfTheWayTiming,\n    placeholder: \"height \" + outOfTheWayTiming + \", width \" + outOfTheWayTiming + \", margin \" + outOfTheWayTiming\n};\nvar moveTo = function moveTo(offset) {\n    return isEqual(offset, origin) ? null : \"translate(\" + offset.x + \"px, \" + offset.y + \"px)\";\n};\nvar transforms = {\n    moveTo: moveTo,\n    drop: function drop(offset, isCombining) {\n        var translate = moveTo(offset);\n        if (!translate) {\n            return null;\n        }\n        if (!isCombining) {\n            return translate;\n        }\n        return translate + \" scale(\" + combine.scale.drop + \")\";\n    }\n};\nvar minDropTime = timings.minDropTime, maxDropTime = timings.maxDropTime;\nvar dropTimeRange = maxDropTime - minDropTime;\nvar maxDropTimeAtDistance = 1500;\nvar cancelDropModifier = 0.6;\nvar getDropDuration = function(_ref) {\n    var current = _ref.current, destination = _ref.destination, reason = _ref.reason;\n    var distance$1 = distance(current, destination);\n    if (distance$1 <= 0) {\n        return minDropTime;\n    }\n    if (distance$1 >= maxDropTimeAtDistance) {\n        return maxDropTime;\n    }\n    var percentage = distance$1 / maxDropTimeAtDistance;\n    var duration = minDropTime + dropTimeRange * percentage;\n    var withDuration = reason === \"CANCEL\" ? duration * cancelDropModifier : duration;\n    return Number(withDuration.toFixed(2));\n};\nvar getNewHomeClientOffset = function(_ref) {\n    var impact = _ref.impact, draggable = _ref.draggable, dimensions = _ref.dimensions, viewport = _ref.viewport, afterCritical = _ref.afterCritical;\n    var draggables = dimensions.draggables, droppables = dimensions.droppables;\n    var droppableId = whatIsDraggedOver(impact);\n    var destination = droppableId ? droppables[droppableId] : null;\n    var home = droppables[draggable.descriptor.droppableId];\n    var newClientCenter = getClientBorderBoxCenter({\n        impact: impact,\n        draggable: draggable,\n        draggables: draggables,\n        afterCritical: afterCritical,\n        droppable: destination || home,\n        viewport: viewport\n    });\n    var offset = subtract(newClientCenter, draggable.client.borderBox.center);\n    return offset;\n};\nvar getDropImpact = function(_ref) {\n    var draggables = _ref.draggables, reason = _ref.reason, lastImpact = _ref.lastImpact, home = _ref.home, viewport = _ref.viewport, onLiftImpact = _ref.onLiftImpact;\n    if (!lastImpact.at || reason !== \"DROP\") {\n        var recomputedHomeImpact = recompute({\n            draggables: draggables,\n            impact: onLiftImpact,\n            destination: home,\n            viewport: viewport,\n            forceShouldAnimate: true\n        });\n        return {\n            impact: recomputedHomeImpact,\n            didDropInsideDroppable: false\n        };\n    }\n    if (lastImpact.at.type === \"REORDER\") {\n        return {\n            impact: lastImpact,\n            didDropInsideDroppable: true\n        };\n    }\n    var withoutMovement = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, lastImpact, {\n        displaced: emptyGroups\n    });\n    return {\n        impact: withoutMovement,\n        didDropInsideDroppable: true\n    };\n};\nvar drop$1 = function(_ref) {\n    var getState = _ref.getState, dispatch = _ref.dispatch;\n    return function(next) {\n        return function(action) {\n            if (action.type !== \"DROP\") {\n                next(action);\n                return;\n            }\n            var state = getState();\n            var reason = action.payload.reason;\n            if (state.phase === \"COLLECTING\") {\n                dispatch(dropPending({\n                    reason: reason\n                }));\n                return;\n            }\n            if (state.phase === \"IDLE\") {\n                return;\n            }\n            var isWaitingForDrop = state.phase === \"DROP_PENDING\" && state.isWaiting;\n            !!isWaitingForDrop ?  true ? invariant(false, \"A DROP action occurred while DROP_PENDING and still waiting\") : 0 : void 0;\n            !(state.phase === \"DRAGGING\" || state.phase === \"DROP_PENDING\") ?  true ? invariant(false, \"Cannot drop in phase: \" + state.phase) : 0 : void 0;\n            var critical = state.critical;\n            var dimensions = state.dimensions;\n            var draggable = dimensions.draggables[state.critical.draggable.id];\n            var _getDropImpact = getDropImpact({\n                reason: reason,\n                lastImpact: state.impact,\n                afterCritical: state.afterCritical,\n                onLiftImpact: state.onLiftImpact,\n                home: state.dimensions.droppables[state.critical.droppable.id],\n                viewport: state.viewport,\n                draggables: state.dimensions.draggables\n            }), impact = _getDropImpact.impact, didDropInsideDroppable = _getDropImpact.didDropInsideDroppable;\n            var destination = didDropInsideDroppable ? tryGetDestination(impact) : null;\n            var combine = didDropInsideDroppable ? tryGetCombine(impact) : null;\n            var source = {\n                index: critical.draggable.index,\n                droppableId: critical.droppable.id\n            };\n            var result = {\n                draggableId: draggable.descriptor.id,\n                type: draggable.descriptor.type,\n                source: source,\n                reason: reason,\n                mode: state.movementMode,\n                destination: destination,\n                combine: combine\n            };\n            var newHomeClientOffset = getNewHomeClientOffset({\n                impact: impact,\n                draggable: draggable,\n                dimensions: dimensions,\n                viewport: state.viewport,\n                afterCritical: state.afterCritical\n            });\n            var completed = {\n                critical: state.critical,\n                afterCritical: state.afterCritical,\n                result: result,\n                impact: impact\n            };\n            var isAnimationRequired = !isEqual(state.current.client.offset, newHomeClientOffset) || Boolean(result.combine);\n            if (!isAnimationRequired) {\n                dispatch(completeDrop({\n                    completed: completed\n                }));\n                return;\n            }\n            var dropDuration = getDropDuration({\n                current: state.current.client.offset,\n                destination: newHomeClientOffset,\n                reason: reason\n            });\n            var args = {\n                newHomeClientOffset: newHomeClientOffset,\n                dropDuration: dropDuration,\n                completed: completed\n            };\n            dispatch(animateDrop(args));\n        };\n    };\n};\nvar getWindowScroll = function() {\n    return {\n        x: window.pageXOffset,\n        y: window.pageYOffset\n    };\n};\nfunction getWindowScrollBinding(update) {\n    return {\n        eventName: \"scroll\",\n        options: {\n            passive: true,\n            capture: false\n        },\n        fn: function fn(event) {\n            if (event.target !== window && event.target !== window.document) {\n                return;\n            }\n            update();\n        }\n    };\n}\nfunction getScrollListener(_ref) {\n    var onWindowScroll = _ref.onWindowScroll;\n    function updateScroll() {\n        onWindowScroll(getWindowScroll());\n    }\n    var scheduled = (0,raf_schd__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(updateScroll);\n    var binding = getWindowScrollBinding(scheduled);\n    var unbind = noop;\n    function isActive() {\n        return unbind !== noop;\n    }\n    function start() {\n        !!isActive() ?  true ? invariant(false, \"Cannot start scroll listener when already active\") : 0 : void 0;\n        unbind = bindEvents(window, [\n            binding\n        ]);\n    }\n    function stop() {\n        !isActive() ?  true ? invariant(false, \"Cannot stop scroll listener when not active\") : 0 : void 0;\n        scheduled.cancel();\n        unbind();\n        unbind = noop;\n    }\n    return {\n        start: start,\n        stop: stop,\n        isActive: isActive\n    };\n}\nvar shouldEnd = function shouldEnd(action) {\n    return action.type === \"DROP_COMPLETE\" || action.type === \"DROP_ANIMATE\" || action.type === \"FLUSH\";\n};\nvar scrollListener = function(store) {\n    var listener = getScrollListener({\n        onWindowScroll: function onWindowScroll(newScroll) {\n            store.dispatch(moveByWindowScroll({\n                newScroll: newScroll\n            }));\n        }\n    });\n    return function(next) {\n        return function(action) {\n            if (!listener.isActive() && action.type === \"INITIAL_PUBLISH\") {\n                listener.start();\n            }\n            if (listener.isActive() && shouldEnd(action)) {\n                listener.stop();\n            }\n            next(action);\n        };\n    };\n};\nvar getExpiringAnnounce = function(announce) {\n    var wasCalled = false;\n    var isExpired = false;\n    var timeoutId = setTimeout(function() {\n        isExpired = true;\n    });\n    var result = function result(message) {\n        if (wasCalled) {\n             true ? warning(\"Announcement already made. Not making a second announcement\") : 0;\n            return;\n        }\n        if (isExpired) {\n             true ? warning(\"\\n        Announcements cannot be made asynchronously.\\n        Default message has already been announced.\\n      \") : 0;\n            return;\n        }\n        wasCalled = true;\n        announce(message);\n        clearTimeout(timeoutId);\n    };\n    result.wasCalled = function() {\n        return wasCalled;\n    };\n    return result;\n};\nvar getAsyncMarshal = function() {\n    var entries = [];\n    var execute = function execute(timerId) {\n        var index = findIndex(entries, function(item) {\n            return item.timerId === timerId;\n        });\n        !(index !== -1) ?  true ? invariant(false, \"Could not find timer\") : 0 : void 0;\n        var _entries$splice = entries.splice(index, 1), entry = _entries$splice[0];\n        entry.callback();\n    };\n    var add = function add(fn) {\n        var timerId = setTimeout(function() {\n            return execute(timerId);\n        });\n        var entry = {\n            timerId: timerId,\n            callback: fn\n        };\n        entries.push(entry);\n    };\n    var flush = function flush() {\n        if (!entries.length) {\n            return;\n        }\n        var shallow = [].concat(entries);\n        entries.length = 0;\n        shallow.forEach(function(entry) {\n            clearTimeout(entry.timerId);\n            entry.callback();\n        });\n    };\n    return {\n        add: add,\n        flush: flush\n    };\n};\nvar areLocationsEqual = function areLocationsEqual(first, second) {\n    if (first == null && second == null) {\n        return true;\n    }\n    if (first == null || second == null) {\n        return false;\n    }\n    return first.droppableId === second.droppableId && first.index === second.index;\n};\nvar isCombineEqual = function isCombineEqual(first, second) {\n    if (first == null && second == null) {\n        return true;\n    }\n    if (first == null || second == null) {\n        return false;\n    }\n    return first.draggableId === second.draggableId && first.droppableId === second.droppableId;\n};\nvar isCriticalEqual = function isCriticalEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    var isDraggableEqual = first.draggable.id === second.draggable.id && first.draggable.droppableId === second.draggable.droppableId && first.draggable.type === second.draggable.type && first.draggable.index === second.draggable.index;\n    var isDroppableEqual = first.droppable.id === second.droppable.id && first.droppable.type === second.droppable.type;\n    return isDraggableEqual && isDroppableEqual;\n};\nvar withTimings = function withTimings(key, fn) {\n    start();\n    fn();\n    finish();\n};\nvar getDragStart = function getDragStart(critical, mode) {\n    return {\n        draggableId: critical.draggable.id,\n        type: critical.droppable.type,\n        source: {\n            droppableId: critical.droppable.id,\n            index: critical.draggable.index\n        },\n        mode: mode\n    };\n};\nvar execute = function execute(responder, data, announce, getDefaultMessage) {\n    if (!responder) {\n        announce(getDefaultMessage(data));\n        return;\n    }\n    var willExpire = getExpiringAnnounce(announce);\n    var provided = {\n        announce: willExpire\n    };\n    responder(data, provided);\n    if (!willExpire.wasCalled()) {\n        announce(getDefaultMessage(data));\n    }\n};\nvar getPublisher = function(getResponders, announce) {\n    var asyncMarshal = getAsyncMarshal();\n    var dragging = null;\n    var beforeCapture = function beforeCapture(draggableId, mode) {\n        !!dragging ?  true ? invariant(false, \"Cannot fire onBeforeCapture as a drag start has already been published\") : 0 : void 0;\n        withTimings(\"onBeforeCapture\", function() {\n            var fn = getResponders().onBeforeCapture;\n            if (fn) {\n                var before = {\n                    draggableId: draggableId,\n                    mode: mode\n                };\n                fn(before);\n            }\n        });\n    };\n    var beforeStart = function beforeStart(critical, mode) {\n        !!dragging ?  true ? invariant(false, \"Cannot fire onBeforeDragStart as a drag start has already been published\") : 0 : void 0;\n        withTimings(\"onBeforeDragStart\", function() {\n            var fn = getResponders().onBeforeDragStart;\n            if (fn) {\n                fn(getDragStart(critical, mode));\n            }\n        });\n    };\n    var start = function start(critical, mode) {\n        !!dragging ?  true ? invariant(false, \"Cannot fire onBeforeDragStart as a drag start has already been published\") : 0 : void 0;\n        var data = getDragStart(critical, mode);\n        dragging = {\n            mode: mode,\n            lastCritical: critical,\n            lastLocation: data.source,\n            lastCombine: null\n        };\n        asyncMarshal.add(function() {\n            withTimings(\"onDragStart\", function() {\n                return execute(getResponders().onDragStart, data, announce, preset.onDragStart);\n            });\n        });\n    };\n    var update = function update(critical, impact) {\n        var location = tryGetDestination(impact);\n        var combine = tryGetCombine(impact);\n        !dragging ?  true ? invariant(false, \"Cannot fire onDragMove when onDragStart has not been called\") : 0 : void 0;\n        var hasCriticalChanged = !isCriticalEqual(critical, dragging.lastCritical);\n        if (hasCriticalChanged) {\n            dragging.lastCritical = critical;\n        }\n        var hasLocationChanged = !areLocationsEqual(dragging.lastLocation, location);\n        if (hasLocationChanged) {\n            dragging.lastLocation = location;\n        }\n        var hasGroupingChanged = !isCombineEqual(dragging.lastCombine, combine);\n        if (hasGroupingChanged) {\n            dragging.lastCombine = combine;\n        }\n        if (!hasCriticalChanged && !hasLocationChanged && !hasGroupingChanged) {\n            return;\n        }\n        var data = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, getDragStart(critical, dragging.mode), {\n            combine: combine,\n            destination: location\n        });\n        asyncMarshal.add(function() {\n            withTimings(\"onDragUpdate\", function() {\n                return execute(getResponders().onDragUpdate, data, announce, preset.onDragUpdate);\n            });\n        });\n    };\n    var flush = function flush() {\n        !dragging ?  true ? invariant(false, \"Can only flush responders while dragging\") : 0 : void 0;\n        asyncMarshal.flush();\n    };\n    var drop = function drop(result) {\n        !dragging ?  true ? invariant(false, \"Cannot fire onDragEnd when there is no matching onDragStart\") : 0 : void 0;\n        dragging = null;\n        withTimings(\"onDragEnd\", function() {\n            return execute(getResponders().onDragEnd, result, announce, preset.onDragEnd);\n        });\n    };\n    var abort = function abort() {\n        if (!dragging) {\n            return;\n        }\n        var result = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, getDragStart(dragging.lastCritical, dragging.mode), {\n            combine: null,\n            destination: null,\n            reason: \"CANCEL\"\n        });\n        drop(result);\n    };\n    return {\n        beforeCapture: beforeCapture,\n        beforeStart: beforeStart,\n        start: start,\n        update: update,\n        flush: flush,\n        drop: drop,\n        abort: abort\n    };\n};\nvar responders = function(getResponders, announce) {\n    var publisher = getPublisher(getResponders, announce);\n    return function(store) {\n        return function(next) {\n            return function(action) {\n                if (action.type === \"BEFORE_INITIAL_CAPTURE\") {\n                    publisher.beforeCapture(action.payload.draggableId, action.payload.movementMode);\n                    return;\n                }\n                if (action.type === \"INITIAL_PUBLISH\") {\n                    var critical = action.payload.critical;\n                    publisher.beforeStart(critical, action.payload.movementMode);\n                    next(action);\n                    publisher.start(critical, action.payload.movementMode);\n                    return;\n                }\n                if (action.type === \"DROP_COMPLETE\") {\n                    var result = action.payload.completed.result;\n                    publisher.flush();\n                    next(action);\n                    publisher.drop(result);\n                    return;\n                }\n                next(action);\n                if (action.type === \"FLUSH\") {\n                    publisher.abort();\n                    return;\n                }\n                var state = store.getState();\n                if (state.phase === \"DRAGGING\") {\n                    publisher.update(state.critical, state.impact);\n                }\n            };\n        };\n    };\n};\nvar dropAnimationFinish = function(store) {\n    return function(next) {\n        return function(action) {\n            if (action.type !== \"DROP_ANIMATION_FINISHED\") {\n                next(action);\n                return;\n            }\n            var state = store.getState();\n            !(state.phase === \"DROP_ANIMATING\") ?  true ? invariant(false, \"Cannot finish a drop animating when no drop is occurring\") : 0 : void 0;\n            store.dispatch(completeDrop({\n                completed: state.completed\n            }));\n        };\n    };\n};\nvar dropAnimationFlushOnScroll = function(store) {\n    var unbind = null;\n    var frameId = null;\n    function clear() {\n        if (frameId) {\n            cancelAnimationFrame(frameId);\n            frameId = null;\n        }\n        if (unbind) {\n            unbind();\n            unbind = null;\n        }\n    }\n    return function(next) {\n        return function(action) {\n            if (action.type === \"FLUSH\" || action.type === \"DROP_COMPLETE\" || action.type === \"DROP_ANIMATION_FINISHED\") {\n                clear();\n            }\n            next(action);\n            if (action.type !== \"DROP_ANIMATE\") {\n                return;\n            }\n            var binding = {\n                eventName: \"scroll\",\n                options: {\n                    capture: true,\n                    passive: false,\n                    once: true\n                },\n                fn: function flushDropAnimation() {\n                    var state = store.getState();\n                    if (state.phase === \"DROP_ANIMATING\") {\n                        store.dispatch(dropAnimationFinished());\n                    }\n                }\n            };\n            frameId = requestAnimationFrame(function() {\n                frameId = null;\n                unbind = bindEvents(window, [\n                    binding\n                ]);\n            });\n        };\n    };\n};\nvar dimensionMarshalStopper = function(marshal) {\n    return function() {\n        return function(next) {\n            return function(action) {\n                if (action.type === \"DROP_COMPLETE\" || action.type === \"FLUSH\" || action.type === \"DROP_ANIMATE\") {\n                    marshal.stopPublishing();\n                }\n                next(action);\n            };\n        };\n    };\n};\nvar focus = function(marshal) {\n    var isWatching = false;\n    return function() {\n        return function(next) {\n            return function(action) {\n                if (action.type === \"INITIAL_PUBLISH\") {\n                    isWatching = true;\n                    marshal.tryRecordFocus(action.payload.critical.draggable.id);\n                    next(action);\n                    marshal.tryRestoreFocusRecorded();\n                    return;\n                }\n                next(action);\n                if (!isWatching) {\n                    return;\n                }\n                if (action.type === \"FLUSH\") {\n                    isWatching = false;\n                    marshal.tryRestoreFocusRecorded();\n                    return;\n                }\n                if (action.type === \"DROP_COMPLETE\") {\n                    isWatching = false;\n                    var result = action.payload.completed.result;\n                    if (result.combine) {\n                        marshal.tryShiftRecord(result.draggableId, result.combine.draggableId);\n                    }\n                    marshal.tryRestoreFocusRecorded();\n                }\n            };\n        };\n    };\n};\nvar shouldStop = function shouldStop(action) {\n    return action.type === \"DROP_COMPLETE\" || action.type === \"DROP_ANIMATE\" || action.type === \"FLUSH\";\n};\nvar autoScroll = function(autoScroller) {\n    return function(store) {\n        return function(next) {\n            return function(action) {\n                if (shouldStop(action)) {\n                    autoScroller.stop();\n                    next(action);\n                    return;\n                }\n                if (action.type === \"INITIAL_PUBLISH\") {\n                    next(action);\n                    var state = store.getState();\n                    !(state.phase === \"DRAGGING\") ?  true ? invariant(false, \"Expected phase to be DRAGGING after INITIAL_PUBLISH\") : 0 : void 0;\n                    autoScroller.start(state);\n                    return;\n                }\n                next(action);\n                autoScroller.scroll(store.getState());\n            };\n        };\n    };\n};\nvar pendingDrop = function(store) {\n    return function(next) {\n        return function(action) {\n            next(action);\n            if (action.type !== \"PUBLISH_WHILE_DRAGGING\") {\n                return;\n            }\n            var postActionState = store.getState();\n            if (postActionState.phase !== \"DROP_PENDING\") {\n                return;\n            }\n            if (postActionState.isWaiting) {\n                return;\n            }\n            store.dispatch(drop({\n                reason: postActionState.reason\n            }));\n        };\n    };\n};\nvar composeEnhancers =  true && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    name: \"react-beautiful-dnd\"\n}) : redux__WEBPACK_IMPORTED_MODULE_8__.compose;\nvar createStore = function(_ref) {\n    var dimensionMarshal = _ref.dimensionMarshal, focusMarshal = _ref.focusMarshal, styleMarshal = _ref.styleMarshal, getResponders = _ref.getResponders, announce = _ref.announce, autoScroller = _ref.autoScroller;\n    return (0,redux__WEBPACK_IMPORTED_MODULE_8__.createStore)(reducer, composeEnhancers((0,redux__WEBPACK_IMPORTED_MODULE_8__.applyMiddleware)(style(styleMarshal), dimensionMarshalStopper(dimensionMarshal), lift$1(dimensionMarshal), drop$1, dropAnimationFinish, dropAnimationFlushOnScroll, pendingDrop, autoScroll(autoScroller), scrollListener, focus(focusMarshal), responders(getResponders, announce))));\n};\nvar clean$1 = function clean() {\n    return {\n        additions: {},\n        removals: {},\n        modified: {}\n    };\n};\nfunction createPublisher(_ref) {\n    var registry = _ref.registry, callbacks = _ref.callbacks;\n    var staging = clean$1();\n    var frameId = null;\n    var collect = function collect() {\n        if (frameId) {\n            return;\n        }\n        callbacks.collectionStarting();\n        frameId = requestAnimationFrame(function() {\n            frameId = null;\n            start();\n            var _staging = staging, additions = _staging.additions, removals = _staging.removals, modified = _staging.modified;\n            var added = Object.keys(additions).map(function(id) {\n                return registry.draggable.getById(id).getDimension(origin);\n            }).sort(function(a, b) {\n                return a.descriptor.index - b.descriptor.index;\n            });\n            var updated = Object.keys(modified).map(function(id) {\n                var entry = registry.droppable.getById(id);\n                var scroll = entry.callbacks.getScrollWhileDragging();\n                return {\n                    droppableId: id,\n                    scroll: scroll\n                };\n            });\n            var result = {\n                additions: added,\n                removals: Object.keys(removals),\n                modified: updated\n            };\n            staging = clean$1();\n            finish();\n            callbacks.publish(result);\n        });\n    };\n    var add = function add(entry) {\n        var id = entry.descriptor.id;\n        staging.additions[id] = entry;\n        staging.modified[entry.descriptor.droppableId] = true;\n        if (staging.removals[id]) {\n            delete staging.removals[id];\n        }\n        collect();\n    };\n    var remove = function remove(entry) {\n        var descriptor = entry.descriptor;\n        staging.removals[descriptor.id] = true;\n        staging.modified[descriptor.droppableId] = true;\n        if (staging.additions[descriptor.id]) {\n            delete staging.additions[descriptor.id];\n        }\n        collect();\n    };\n    var stop = function stop() {\n        if (!frameId) {\n            return;\n        }\n        cancelAnimationFrame(frameId);\n        frameId = null;\n        staging = clean$1();\n    };\n    return {\n        add: add,\n        remove: remove,\n        stop: stop\n    };\n}\nvar getMaxScroll = function(_ref) {\n    var scrollHeight = _ref.scrollHeight, scrollWidth = _ref.scrollWidth, height = _ref.height, width = _ref.width;\n    var maxScroll = subtract({\n        x: scrollWidth,\n        y: scrollHeight\n    }, {\n        x: width,\n        y: height\n    });\n    var adjustedMaxScroll = {\n        x: Math.max(0, maxScroll.x),\n        y: Math.max(0, maxScroll.y)\n    };\n    return adjustedMaxScroll;\n};\nvar getDocumentElement = function() {\n    var doc = document.documentElement;\n    !doc ?  true ? invariant(false, \"Cannot find document.documentElement\") : 0 : void 0;\n    return doc;\n};\nvar getMaxWindowScroll = function() {\n    var doc = getDocumentElement();\n    var maxScroll = getMaxScroll({\n        scrollHeight: doc.scrollHeight,\n        scrollWidth: doc.scrollWidth,\n        width: doc.clientWidth,\n        height: doc.clientHeight\n    });\n    return maxScroll;\n};\nvar getViewport = function() {\n    var scroll = getWindowScroll();\n    var maxScroll = getMaxWindowScroll();\n    var top = scroll.y;\n    var left = scroll.x;\n    var doc = getDocumentElement();\n    var width = doc.clientWidth;\n    var height = doc.clientHeight;\n    var right = left + width;\n    var bottom = top + height;\n    var frame = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getRect)({\n        top: top,\n        left: left,\n        right: right,\n        bottom: bottom\n    });\n    var viewport = {\n        frame: frame,\n        scroll: {\n            initial: scroll,\n            current: scroll,\n            max: maxScroll,\n            diff: {\n                value: origin,\n                displacement: origin\n            }\n        }\n    };\n    return viewport;\n};\nvar getInitialPublish = function(_ref) {\n    var critical = _ref.critical, scrollOptions = _ref.scrollOptions, registry = _ref.registry;\n    start();\n    var viewport = getViewport();\n    var windowScroll = viewport.scroll.current;\n    var home = critical.droppable;\n    var droppables = registry.droppable.getAllByType(home.type).map(function(entry) {\n        return entry.callbacks.getDimensionAndWatchScroll(windowScroll, scrollOptions);\n    });\n    var draggables = registry.draggable.getAllByType(critical.draggable.type).map(function(entry) {\n        return entry.getDimension(windowScroll);\n    });\n    var dimensions = {\n        draggables: toDraggableMap(draggables),\n        droppables: toDroppableMap(droppables)\n    };\n    finish();\n    var result = {\n        dimensions: dimensions,\n        critical: critical,\n        viewport: viewport\n    };\n    return result;\n};\nfunction shouldPublishUpdate(registry, dragging, entry) {\n    if (entry.descriptor.id === dragging.id) {\n        return false;\n    }\n    if (entry.descriptor.type !== dragging.type) {\n        return false;\n    }\n    var home = registry.droppable.getById(entry.descriptor.droppableId);\n    if (home.descriptor.mode !== \"virtual\") {\n         true ? warning(\"\\n      You are attempting to add or remove a Draggable [id: \" + entry.descriptor.id + \"]\\n      while a drag is occurring. This is only supported for virtual lists.\\n\\n      See https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/patterns/virtual-lists.md\\n    \") : 0;\n        return false;\n    }\n    return true;\n}\nvar createDimensionMarshal = function(registry, callbacks) {\n    var collection = null;\n    var publisher = createPublisher({\n        callbacks: {\n            publish: callbacks.publishWhileDragging,\n            collectionStarting: callbacks.collectionStarting\n        },\n        registry: registry\n    });\n    var updateDroppableIsEnabled = function updateDroppableIsEnabled(id, isEnabled) {\n        !registry.droppable.exists(id) ?  true ? invariant(false, \"Cannot update is enabled flag of Droppable \" + id + \" as it is not registered\") : 0 : void 0;\n        if (!collection) {\n            return;\n        }\n        callbacks.updateDroppableIsEnabled({\n            id: id,\n            isEnabled: isEnabled\n        });\n    };\n    var updateDroppableIsCombineEnabled = function updateDroppableIsCombineEnabled(id, isCombineEnabled) {\n        if (!collection) {\n            return;\n        }\n        !registry.droppable.exists(id) ?  true ? invariant(false, \"Cannot update isCombineEnabled flag of Droppable \" + id + \" as it is not registered\") : 0 : void 0;\n        callbacks.updateDroppableIsCombineEnabled({\n            id: id,\n            isCombineEnabled: isCombineEnabled\n        });\n    };\n    var updateDroppableScroll = function updateDroppableScroll(id, newScroll) {\n        if (!collection) {\n            return;\n        }\n        !registry.droppable.exists(id) ?  true ? invariant(false, \"Cannot update the scroll on Droppable \" + id + \" as it is not registered\") : 0 : void 0;\n        callbacks.updateDroppableScroll({\n            id: id,\n            newScroll: newScroll\n        });\n    };\n    var scrollDroppable = function scrollDroppable(id, change) {\n        if (!collection) {\n            return;\n        }\n        registry.droppable.getById(id).callbacks.scroll(change);\n    };\n    var stopPublishing = function stopPublishing() {\n        if (!collection) {\n            return;\n        }\n        publisher.stop();\n        var home = collection.critical.droppable;\n        registry.droppable.getAllByType(home.type).forEach(function(entry) {\n            return entry.callbacks.dragStopped();\n        });\n        collection.unsubscribe();\n        collection = null;\n    };\n    var subscriber = function subscriber(event) {\n        !collection ?  true ? invariant(false, \"Should only be subscribed when a collection is occurring\") : 0 : void 0;\n        var dragging = collection.critical.draggable;\n        if (event.type === \"ADDITION\") {\n            if (shouldPublishUpdate(registry, dragging, event.value)) {\n                publisher.add(event.value);\n            }\n        }\n        if (event.type === \"REMOVAL\") {\n            if (shouldPublishUpdate(registry, dragging, event.value)) {\n                publisher.remove(event.value);\n            }\n        }\n    };\n    var startPublishing = function startPublishing(request) {\n        !!collection ?  true ? invariant(false, \"Cannot start capturing critical dimensions as there is already a collection\") : 0 : void 0;\n        var entry = registry.draggable.getById(request.draggableId);\n        var home = registry.droppable.getById(entry.descriptor.droppableId);\n        var critical = {\n            draggable: entry.descriptor,\n            droppable: home.descriptor\n        };\n        var unsubscribe = registry.subscribe(subscriber);\n        collection = {\n            critical: critical,\n            unsubscribe: unsubscribe\n        };\n        return getInitialPublish({\n            critical: critical,\n            registry: registry,\n            scrollOptions: request.scrollOptions\n        });\n    };\n    var marshal = {\n        updateDroppableIsEnabled: updateDroppableIsEnabled,\n        updateDroppableIsCombineEnabled: updateDroppableIsCombineEnabled,\n        scrollDroppable: scrollDroppable,\n        updateDroppableScroll: updateDroppableScroll,\n        startPublishing: startPublishing,\n        stopPublishing: stopPublishing\n    };\n    return marshal;\n};\nvar canStartDrag = function(state, id) {\n    if (state.phase === \"IDLE\") {\n        return true;\n    }\n    if (state.phase !== \"DROP_ANIMATING\") {\n        return false;\n    }\n    if (state.completed.result.draggableId === id) {\n        return false;\n    }\n    return state.completed.result.reason === \"DROP\";\n};\nvar scrollWindow = function(change) {\n    window.scrollBy(change.x, change.y);\n};\nvar getScrollableDroppables = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(droppables) {\n    return toDroppableList(droppables).filter(function(droppable) {\n        if (!droppable.isEnabled) {\n            return false;\n        }\n        if (!droppable.frame) {\n            return false;\n        }\n        return true;\n    });\n});\nvar getScrollableDroppableOver = function getScrollableDroppableOver(target, droppables) {\n    var maybe = find(getScrollableDroppables(droppables), function(droppable) {\n        !droppable.frame ?  true ? invariant(false, \"Invalid result\") : 0 : void 0;\n        return isPositionInFrame(droppable.frame.pageMarginBox)(target);\n    });\n    return maybe;\n};\nvar getBestScrollableDroppable = function(_ref) {\n    var center = _ref.center, destination = _ref.destination, droppables = _ref.droppables;\n    if (destination) {\n        var _dimension = droppables[destination];\n        if (!_dimension.frame) {\n            return null;\n        }\n        return _dimension;\n    }\n    var dimension = getScrollableDroppableOver(center, droppables);\n    return dimension;\n};\nvar config = {\n    startFromPercentage: 0.25,\n    maxScrollAtPercentage: 0.05,\n    maxPixelScroll: 28,\n    ease: function ease(percentage) {\n        return Math.pow(percentage, 2);\n    },\n    durationDampening: {\n        stopDampeningAt: 1200,\n        accelerateAt: 360\n    }\n};\nvar getDistanceThresholds = function(container, axis) {\n    var startScrollingFrom = container[axis.size] * config.startFromPercentage;\n    var maxScrollValueAt = container[axis.size] * config.maxScrollAtPercentage;\n    var thresholds = {\n        startScrollingFrom: startScrollingFrom,\n        maxScrollValueAt: maxScrollValueAt\n    };\n    return thresholds;\n};\nvar getPercentage = function(_ref) {\n    var startOfRange = _ref.startOfRange, endOfRange = _ref.endOfRange, current = _ref.current;\n    var range = endOfRange - startOfRange;\n    if (range === 0) {\n         true ? warning(\"\\n      Detected distance range of 0 in the fluid auto scroller\\n      This is unexpected and would cause a divide by 0 issue.\\n      Not allowing an auto scroll\\n    \") : 0;\n        return 0;\n    }\n    var currentInRange = current - startOfRange;\n    var percentage = currentInRange / range;\n    return percentage;\n};\nvar minScroll = 1;\nvar getValueFromDistance = function(distanceToEdge, thresholds) {\n    if (distanceToEdge > thresholds.startScrollingFrom) {\n        return 0;\n    }\n    if (distanceToEdge <= thresholds.maxScrollValueAt) {\n        return config.maxPixelScroll;\n    }\n    if (distanceToEdge === thresholds.startScrollingFrom) {\n        return minScroll;\n    }\n    var percentageFromMaxScrollValueAt = getPercentage({\n        startOfRange: thresholds.maxScrollValueAt,\n        endOfRange: thresholds.startScrollingFrom,\n        current: distanceToEdge\n    });\n    var percentageFromStartScrollingFrom = 1 - percentageFromMaxScrollValueAt;\n    var scroll = config.maxPixelScroll * config.ease(percentageFromStartScrollingFrom);\n    return Math.ceil(scroll);\n};\nvar accelerateAt = config.durationDampening.accelerateAt;\nvar stopAt = config.durationDampening.stopDampeningAt;\nvar dampenValueByTime = function(proposedScroll, dragStartTime) {\n    var startOfRange = dragStartTime;\n    var endOfRange = stopAt;\n    var now = Date.now();\n    var runTime = now - startOfRange;\n    if (runTime >= stopAt) {\n        return proposedScroll;\n    }\n    if (runTime < accelerateAt) {\n        return minScroll;\n    }\n    var betweenAccelerateAtAndStopAtPercentage = getPercentage({\n        startOfRange: accelerateAt,\n        endOfRange: endOfRange,\n        current: runTime\n    });\n    var scroll = proposedScroll * config.ease(betweenAccelerateAtAndStopAtPercentage);\n    return Math.ceil(scroll);\n};\nvar getValue = function(_ref) {\n    var distanceToEdge = _ref.distanceToEdge, thresholds = _ref.thresholds, dragStartTime = _ref.dragStartTime, shouldUseTimeDampening = _ref.shouldUseTimeDampening;\n    var scroll = getValueFromDistance(distanceToEdge, thresholds);\n    if (scroll === 0) {\n        return 0;\n    }\n    if (!shouldUseTimeDampening) {\n        return scroll;\n    }\n    return Math.max(dampenValueByTime(scroll, dragStartTime), minScroll);\n};\nvar getScrollOnAxis = function(_ref) {\n    var container = _ref.container, distanceToEdges = _ref.distanceToEdges, dragStartTime = _ref.dragStartTime, axis = _ref.axis, shouldUseTimeDampening = _ref.shouldUseTimeDampening;\n    var thresholds = getDistanceThresholds(container, axis);\n    var isCloserToEnd = distanceToEdges[axis.end] < distanceToEdges[axis.start];\n    if (isCloserToEnd) {\n        return getValue({\n            distanceToEdge: distanceToEdges[axis.end],\n            thresholds: thresholds,\n            dragStartTime: dragStartTime,\n            shouldUseTimeDampening: shouldUseTimeDampening\n        });\n    }\n    return -1 * getValue({\n        distanceToEdge: distanceToEdges[axis.start],\n        thresholds: thresholds,\n        dragStartTime: dragStartTime,\n        shouldUseTimeDampening: shouldUseTimeDampening\n    });\n};\nvar adjustForSizeLimits = function(_ref) {\n    var container = _ref.container, subject = _ref.subject, proposedScroll = _ref.proposedScroll;\n    var isTooBigVertically = subject.height > container.height;\n    var isTooBigHorizontally = subject.width > container.width;\n    if (!isTooBigHorizontally && !isTooBigVertically) {\n        return proposedScroll;\n    }\n    if (isTooBigHorizontally && isTooBigVertically) {\n        return null;\n    }\n    return {\n        x: isTooBigHorizontally ? 0 : proposedScroll.x,\n        y: isTooBigVertically ? 0 : proposedScroll.y\n    };\n};\nvar clean$2 = apply(function(value) {\n    return value === 0 ? 0 : value;\n});\nvar getScroll = function(_ref) {\n    var dragStartTime = _ref.dragStartTime, container = _ref.container, subject = _ref.subject, center = _ref.center, shouldUseTimeDampening = _ref.shouldUseTimeDampening;\n    var distanceToEdges = {\n        top: center.y - container.top,\n        right: container.right - center.x,\n        bottom: container.bottom - center.y,\n        left: center.x - container.left\n    };\n    var y = getScrollOnAxis({\n        container: container,\n        distanceToEdges: distanceToEdges,\n        dragStartTime: dragStartTime,\n        axis: vertical,\n        shouldUseTimeDampening: shouldUseTimeDampening\n    });\n    var x = getScrollOnAxis({\n        container: container,\n        distanceToEdges: distanceToEdges,\n        dragStartTime: dragStartTime,\n        axis: horizontal,\n        shouldUseTimeDampening: shouldUseTimeDampening\n    });\n    var required = clean$2({\n        x: x,\n        y: y\n    });\n    if (isEqual(required, origin)) {\n        return null;\n    }\n    var limited = adjustForSizeLimits({\n        container: container,\n        subject: subject,\n        proposedScroll: required\n    });\n    if (!limited) {\n        return null;\n    }\n    return isEqual(limited, origin) ? null : limited;\n};\nvar smallestSigned = apply(function(value) {\n    if (value === 0) {\n        return 0;\n    }\n    return value > 0 ? 1 : -1;\n});\nvar getOverlap = function() {\n    var getRemainder = function getRemainder(target, max) {\n        if (target < 0) {\n            return target;\n        }\n        if (target > max) {\n            return target - max;\n        }\n        return 0;\n    };\n    return function(_ref) {\n        var current = _ref.current, max = _ref.max, change = _ref.change;\n        var targetScroll = add(current, change);\n        var overlap = {\n            x: getRemainder(targetScroll.x, max.x),\n            y: getRemainder(targetScroll.y, max.y)\n        };\n        if (isEqual(overlap, origin)) {\n            return null;\n        }\n        return overlap;\n    };\n}();\nvar canPartiallyScroll = function canPartiallyScroll(_ref2) {\n    var rawMax = _ref2.max, current = _ref2.current, change = _ref2.change;\n    var max = {\n        x: Math.max(current.x, rawMax.x),\n        y: Math.max(current.y, rawMax.y)\n    };\n    var smallestChange = smallestSigned(change);\n    var overlap = getOverlap({\n        max: max,\n        current: current,\n        change: smallestChange\n    });\n    if (!overlap) {\n        return true;\n    }\n    if (smallestChange.x !== 0 && overlap.x === 0) {\n        return true;\n    }\n    if (smallestChange.y !== 0 && overlap.y === 0) {\n        return true;\n    }\n    return false;\n};\nvar canScrollWindow = function canScrollWindow(viewport, change) {\n    return canPartiallyScroll({\n        current: viewport.scroll.current,\n        max: viewport.scroll.max,\n        change: change\n    });\n};\nvar getWindowOverlap = function getWindowOverlap(viewport, change) {\n    if (!canScrollWindow(viewport, change)) {\n        return null;\n    }\n    var max = viewport.scroll.max;\n    var current = viewport.scroll.current;\n    return getOverlap({\n        current: current,\n        max: max,\n        change: change\n    });\n};\nvar canScrollDroppable = function canScrollDroppable(droppable, change) {\n    var frame = droppable.frame;\n    if (!frame) {\n        return false;\n    }\n    return canPartiallyScroll({\n        current: frame.scroll.current,\n        max: frame.scroll.max,\n        change: change\n    });\n};\nvar getDroppableOverlap = function getDroppableOverlap(droppable, change) {\n    var frame = droppable.frame;\n    if (!frame) {\n        return null;\n    }\n    if (!canScrollDroppable(droppable, change)) {\n        return null;\n    }\n    return getOverlap({\n        current: frame.scroll.current,\n        max: frame.scroll.max,\n        change: change\n    });\n};\nvar getWindowScrollChange = function(_ref) {\n    var viewport = _ref.viewport, subject = _ref.subject, center = _ref.center, dragStartTime = _ref.dragStartTime, shouldUseTimeDampening = _ref.shouldUseTimeDampening;\n    var scroll = getScroll({\n        dragStartTime: dragStartTime,\n        container: viewport.frame,\n        subject: subject,\n        center: center,\n        shouldUseTimeDampening: shouldUseTimeDampening\n    });\n    return scroll && canScrollWindow(viewport, scroll) ? scroll : null;\n};\nvar getDroppableScrollChange = function(_ref) {\n    var droppable = _ref.droppable, subject = _ref.subject, center = _ref.center, dragStartTime = _ref.dragStartTime, shouldUseTimeDampening = _ref.shouldUseTimeDampening;\n    var frame = droppable.frame;\n    if (!frame) {\n        return null;\n    }\n    var scroll = getScroll({\n        dragStartTime: dragStartTime,\n        container: frame.pageMarginBox,\n        subject: subject,\n        center: center,\n        shouldUseTimeDampening: shouldUseTimeDampening\n    });\n    return scroll && canScrollDroppable(droppable, scroll) ? scroll : null;\n};\nvar scroll$1 = function(_ref) {\n    var state = _ref.state, dragStartTime = _ref.dragStartTime, shouldUseTimeDampening = _ref.shouldUseTimeDampening, scrollWindow = _ref.scrollWindow, scrollDroppable = _ref.scrollDroppable;\n    var center = state.current.page.borderBoxCenter;\n    var draggable = state.dimensions.draggables[state.critical.draggable.id];\n    var subject = draggable.page.marginBox;\n    if (state.isWindowScrollAllowed) {\n        var viewport = state.viewport;\n        var _change = getWindowScrollChange({\n            dragStartTime: dragStartTime,\n            viewport: viewport,\n            subject: subject,\n            center: center,\n            shouldUseTimeDampening: shouldUseTimeDampening\n        });\n        if (_change) {\n            scrollWindow(_change);\n            return;\n        }\n    }\n    var droppable = getBestScrollableDroppable({\n        center: center,\n        destination: whatIsDraggedOver(state.impact),\n        droppables: state.dimensions.droppables\n    });\n    if (!droppable) {\n        return;\n    }\n    var change = getDroppableScrollChange({\n        dragStartTime: dragStartTime,\n        droppable: droppable,\n        subject: subject,\n        center: center,\n        shouldUseTimeDampening: shouldUseTimeDampening\n    });\n    if (change) {\n        scrollDroppable(droppable.descriptor.id, change);\n    }\n};\nvar createFluidScroller = function(_ref) {\n    var scrollWindow = _ref.scrollWindow, scrollDroppable = _ref.scrollDroppable;\n    var scheduleWindowScroll = (0,raf_schd__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(scrollWindow);\n    var scheduleDroppableScroll = (0,raf_schd__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(scrollDroppable);\n    var dragging = null;\n    var tryScroll = function tryScroll(state) {\n        !dragging ?  true ? invariant(false, \"Cannot fluid scroll if not dragging\") : 0 : void 0;\n        var _dragging = dragging, shouldUseTimeDampening = _dragging.shouldUseTimeDampening, dragStartTime = _dragging.dragStartTime;\n        scroll$1({\n            state: state,\n            scrollWindow: scheduleWindowScroll,\n            scrollDroppable: scheduleDroppableScroll,\n            dragStartTime: dragStartTime,\n            shouldUseTimeDampening: shouldUseTimeDampening\n        });\n    };\n    var start$1 = function start$1(state) {\n        start();\n        !!dragging ?  true ? invariant(false, \"Cannot start auto scrolling when already started\") : 0 : void 0;\n        var dragStartTime = Date.now();\n        var wasScrollNeeded = false;\n        var fakeScrollCallback = function fakeScrollCallback() {\n            wasScrollNeeded = true;\n        };\n        scroll$1({\n            state: state,\n            dragStartTime: 0,\n            shouldUseTimeDampening: false,\n            scrollWindow: fakeScrollCallback,\n            scrollDroppable: fakeScrollCallback\n        });\n        dragging = {\n            dragStartTime: dragStartTime,\n            shouldUseTimeDampening: wasScrollNeeded\n        };\n        finish();\n        if (wasScrollNeeded) {\n            tryScroll(state);\n        }\n    };\n    var stop = function stop() {\n        if (!dragging) {\n            return;\n        }\n        scheduleWindowScroll.cancel();\n        scheduleDroppableScroll.cancel();\n        dragging = null;\n    };\n    return {\n        start: start$1,\n        stop: stop,\n        scroll: tryScroll\n    };\n};\nvar createJumpScroller = function(_ref) {\n    var move = _ref.move, scrollDroppable = _ref.scrollDroppable, scrollWindow = _ref.scrollWindow;\n    var moveByOffset = function moveByOffset(state, offset) {\n        var client = add(state.current.client.selection, offset);\n        move({\n            client: client\n        });\n    };\n    var scrollDroppableAsMuchAsItCan = function scrollDroppableAsMuchAsItCan(droppable, change) {\n        if (!canScrollDroppable(droppable, change)) {\n            return change;\n        }\n        var overlap = getDroppableOverlap(droppable, change);\n        if (!overlap) {\n            scrollDroppable(droppable.descriptor.id, change);\n            return null;\n        }\n        var whatTheDroppableCanScroll = subtract(change, overlap);\n        scrollDroppable(droppable.descriptor.id, whatTheDroppableCanScroll);\n        var remainder = subtract(change, whatTheDroppableCanScroll);\n        return remainder;\n    };\n    var scrollWindowAsMuchAsItCan = function scrollWindowAsMuchAsItCan(isWindowScrollAllowed, viewport, change) {\n        if (!isWindowScrollAllowed) {\n            return change;\n        }\n        if (!canScrollWindow(viewport, change)) {\n            return change;\n        }\n        var overlap = getWindowOverlap(viewport, change);\n        if (!overlap) {\n            scrollWindow(change);\n            return null;\n        }\n        var whatTheWindowCanScroll = subtract(change, overlap);\n        scrollWindow(whatTheWindowCanScroll);\n        var remainder = subtract(change, whatTheWindowCanScroll);\n        return remainder;\n    };\n    var jumpScroller = function jumpScroller(state) {\n        var request = state.scrollJumpRequest;\n        if (!request) {\n            return;\n        }\n        var destination = whatIsDraggedOver(state.impact);\n        !destination ?  true ? invariant(false, \"Cannot perform a jump scroll when there is no destination\") : 0 : void 0;\n        var droppableRemainder = scrollDroppableAsMuchAsItCan(state.dimensions.droppables[destination], request);\n        if (!droppableRemainder) {\n            return;\n        }\n        var viewport = state.viewport;\n        var windowRemainder = scrollWindowAsMuchAsItCan(state.isWindowScrollAllowed, viewport, droppableRemainder);\n        if (!windowRemainder) {\n            return;\n        }\n        moveByOffset(state, windowRemainder);\n    };\n    return jumpScroller;\n};\nvar createAutoScroller = function(_ref) {\n    var scrollDroppable = _ref.scrollDroppable, scrollWindow = _ref.scrollWindow, move = _ref.move;\n    var fluidScroller = createFluidScroller({\n        scrollWindow: scrollWindow,\n        scrollDroppable: scrollDroppable\n    });\n    var jumpScroll = createJumpScroller({\n        move: move,\n        scrollWindow: scrollWindow,\n        scrollDroppable: scrollDroppable\n    });\n    var scroll = function scroll(state) {\n        if (state.phase !== \"DRAGGING\") {\n            return;\n        }\n        if (state.movementMode === \"FLUID\") {\n            fluidScroller.scroll(state);\n            return;\n        }\n        if (!state.scrollJumpRequest) {\n            return;\n        }\n        jumpScroll(state);\n    };\n    var scroller = {\n        scroll: scroll,\n        start: fluidScroller.start,\n        stop: fluidScroller.stop\n    };\n    return scroller;\n};\nvar prefix$1 = \"data-rbd\";\nvar dragHandle = function() {\n    var base = prefix$1 + \"-drag-handle\";\n    return {\n        base: base,\n        draggableId: base + \"-draggable-id\",\n        contextId: base + \"-context-id\"\n    };\n}();\nvar draggable = function() {\n    var base = prefix$1 + \"-draggable\";\n    return {\n        base: base,\n        contextId: base + \"-context-id\",\n        id: base + \"-id\"\n    };\n}();\nvar droppable = function() {\n    var base = prefix$1 + \"-droppable\";\n    return {\n        base: base,\n        contextId: base + \"-context-id\",\n        id: base + \"-id\"\n    };\n}();\nvar scrollContainer = {\n    contextId: prefix$1 + \"-scroll-container-context-id\"\n};\nvar makeGetSelector = function makeGetSelector(context) {\n    return function(attribute) {\n        return \"[\" + attribute + '=\"' + context + '\"]';\n    };\n};\nvar getStyles = function getStyles(rules, property) {\n    return rules.map(function(rule) {\n        var value = rule.styles[property];\n        if (!value) {\n            return \"\";\n        }\n        return rule.selector + \" { \" + value + \" }\";\n    }).join(\" \");\n};\nvar noPointerEvents = \"pointer-events: none;\";\nvar getStyles$1 = function(contextId) {\n    var getSelector = makeGetSelector(contextId);\n    var dragHandle$1 = function() {\n        var grabCursor = \"\\n      cursor: -webkit-grab;\\n      cursor: grab;\\n    \";\n        return {\n            selector: getSelector(dragHandle.contextId),\n            styles: {\n                always: \"\\n          -webkit-touch-callout: none;\\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\\n          touch-action: manipulation;\\n        \",\n                resting: grabCursor,\n                dragging: noPointerEvents,\n                dropAnimating: grabCursor\n            }\n        };\n    }();\n    var draggable$1 = function() {\n        var transition = \"\\n      transition: \" + transitions.outOfTheWay + \";\\n    \";\n        return {\n            selector: getSelector(draggable.contextId),\n            styles: {\n                dragging: transition,\n                dropAnimating: transition,\n                userCancel: transition\n            }\n        };\n    }();\n    var droppable$1 = {\n        selector: getSelector(droppable.contextId),\n        styles: {\n            always: \"overflow-anchor: none;\"\n        }\n    };\n    var body = {\n        selector: \"body\",\n        styles: {\n            dragging: \"\\n        cursor: grabbing;\\n        cursor: -webkit-grabbing;\\n        user-select: none;\\n        -webkit-user-select: none;\\n        -moz-user-select: none;\\n        -ms-user-select: none;\\n        overflow-anchor: none;\\n      \"\n        }\n    };\n    var rules = [\n        draggable$1,\n        dragHandle$1,\n        droppable$1,\n        body\n    ];\n    return {\n        always: getStyles(rules, \"always\"),\n        resting: getStyles(rules, \"resting\"),\n        dragging: getStyles(rules, \"dragging\"),\n        dropAnimating: getStyles(rules, \"dropAnimating\"),\n        userCancel: getStyles(rules, \"userCancel\")\n    };\n};\nvar useIsomorphicLayoutEffect =  true && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\" ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nvar getHead = function getHead() {\n    var head = document.querySelector(\"head\");\n    !head ?  true ? invariant(false, \"Cannot find the head to append a style to\") : 0 : void 0;\n    return head;\n};\nvar createStyleEl = function createStyleEl(nonce) {\n    var el = document.createElement(\"style\");\n    if (nonce) {\n        el.setAttribute(\"nonce\", nonce);\n    }\n    el.type = \"text/css\";\n    return el;\n};\nfunction useStyleMarshal(contextId, nonce) {\n    _s();\n    var styles = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return getStyles$1(contextId);\n    }, [\n        contextId\n    ]);\n    var alwaysRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var dynamicRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var setDynamicStyle = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)((0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(proposed) {\n        var el = dynamicRef.current;\n        !el ?  true ? invariant(false, \"Cannot set dynamic style element if it is not set\") : 0 : void 0;\n        el.textContent = proposed;\n    }), []);\n    var setAlwaysStyle = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(proposed) {\n        var el = alwaysRef.current;\n        !el ?  true ? invariant(false, \"Cannot set dynamic style element if it is not set\") : 0 : void 0;\n        el.textContent = proposed;\n    }, []);\n    useIsomorphicLayoutEffect(function() {\n        !(!alwaysRef.current && !dynamicRef.current) ?  true ? invariant(false, \"style elements already mounted\") : 0 : void 0;\n        var always = createStyleEl(nonce);\n        var dynamic = createStyleEl(nonce);\n        alwaysRef.current = always;\n        dynamicRef.current = dynamic;\n        always.setAttribute(prefix$1 + \"-always\", contextId);\n        dynamic.setAttribute(prefix$1 + \"-dynamic\", contextId);\n        getHead().appendChild(always);\n        getHead().appendChild(dynamic);\n        setAlwaysStyle(styles.always);\n        setDynamicStyle(styles.resting);\n        return function() {\n            var remove = function remove(ref) {\n                var current = ref.current;\n                !current ?  true ? invariant(false, \"Cannot unmount ref as it is not set\") : 0 : void 0;\n                getHead().removeChild(current);\n                ref.current = null;\n            };\n            remove(alwaysRef);\n            remove(dynamicRef);\n        };\n    }, [\n        nonce,\n        setAlwaysStyle,\n        setDynamicStyle,\n        styles.always,\n        styles.resting,\n        contextId\n    ]);\n    var dragging = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        return setDynamicStyle(styles.dragging);\n    }, [\n        setDynamicStyle,\n        styles.dragging\n    ]);\n    var dropping = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(reason) {\n        if (reason === \"DROP\") {\n            setDynamicStyle(styles.dropAnimating);\n            return;\n        }\n        setDynamicStyle(styles.userCancel);\n    }, [\n        setDynamicStyle,\n        styles.dropAnimating,\n        styles.userCancel\n    ]);\n    var resting = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        if (!dynamicRef.current) {\n            return;\n        }\n        setDynamicStyle(styles.resting);\n    }, [\n        setDynamicStyle,\n        styles.resting\n    ]);\n    var marshal = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            dragging: dragging,\n            dropping: dropping,\n            resting: resting\n        };\n    }, [\n        dragging,\n        dropping,\n        resting\n    ]);\n    return marshal;\n}\n_s(useStyleMarshal, \"LH0cBxJudnJnXP4MjCxLF7oZU/w=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\nvar getWindowFromEl = function(el) {\n    return el && el.ownerDocument ? el.ownerDocument.defaultView : window;\n};\nfunction isHtmlElement(el) {\n    return el instanceof getWindowFromEl(el).HTMLElement;\n}\nfunction findDragHandle(contextId, draggableId) {\n    var selector = \"[\" + dragHandle.contextId + '=\"' + contextId + '\"]';\n    var possible = toArray(document.querySelectorAll(selector));\n    if (!possible.length) {\n         true ? warning('Unable to find any drag handles in the context \"' + contextId + '\"') : 0;\n        return null;\n    }\n    var handle = find(possible, function(el) {\n        return el.getAttribute(dragHandle.draggableId) === draggableId;\n    });\n    if (!handle) {\n         true ? warning('Unable to find drag handle with id \"' + draggableId + '\" as no handle with a matching id was found') : 0;\n        return null;\n    }\n    if (!isHtmlElement(handle)) {\n         true ? warning(\"drag handle needs to be a HTMLElement\") : 0;\n        return null;\n    }\n    return handle;\n}\nfunction useFocusMarshal(contextId) {\n    _s1();\n    var entriesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n    var recordRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var restoreFocusFrameRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var isMountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    var register = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function register(id, focus) {\n        var entry = {\n            id: id,\n            focus: focus\n        };\n        entriesRef.current[id] = entry;\n        return function unregister() {\n            var entries = entriesRef.current;\n            var current = entries[id];\n            if (current !== entry) {\n                delete entries[id];\n            }\n        };\n    }, []);\n    var tryGiveFocus = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function tryGiveFocus(tryGiveFocusTo) {\n        var handle = findDragHandle(contextId, tryGiveFocusTo);\n        if (handle && handle !== document.activeElement) {\n            handle.focus();\n        }\n    }, [\n        contextId\n    ]);\n    var tryShiftRecord = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function tryShiftRecord(previous, redirectTo) {\n        if (recordRef.current === previous) {\n            recordRef.current = redirectTo;\n        }\n    }, []);\n    var tryRestoreFocusRecorded = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function tryRestoreFocusRecorded() {\n        if (restoreFocusFrameRef.current) {\n            return;\n        }\n        if (!isMountedRef.current) {\n            return;\n        }\n        restoreFocusFrameRef.current = requestAnimationFrame(function() {\n            restoreFocusFrameRef.current = null;\n            var record = recordRef.current;\n            if (record) {\n                tryGiveFocus(record);\n            }\n        });\n    }, [\n        tryGiveFocus\n    ]);\n    var tryRecordFocus = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function tryRecordFocus(id) {\n        recordRef.current = null;\n        var focused = document.activeElement;\n        if (!focused) {\n            return;\n        }\n        if (focused.getAttribute(dragHandle.draggableId) !== id) {\n            return;\n        }\n        recordRef.current = id;\n    }, []);\n    useIsomorphicLayoutEffect(function() {\n        isMountedRef.current = true;\n        return function clearFrameOnUnmount() {\n            isMountedRef.current = false;\n            var frameId = restoreFocusFrameRef.current;\n            if (frameId) {\n                cancelAnimationFrame(frameId);\n            }\n        };\n    }, []);\n    var marshal = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            register: register,\n            tryRecordFocus: tryRecordFocus,\n            tryRestoreFocusRecorded: tryRestoreFocusRecorded,\n            tryShiftRecord: tryShiftRecord\n        };\n    }, [\n        register,\n        tryRecordFocus,\n        tryRestoreFocusRecorded,\n        tryShiftRecord\n    ]);\n    return marshal;\n}\n_s1(useFocusMarshal, \"la0JvwRrmFHSEMQoPC/L04Rzang=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\nfunction createRegistry() {\n    var entries = {\n        draggables: {},\n        droppables: {}\n    };\n    var subscribers = [];\n    function subscribe(cb) {\n        subscribers.push(cb);\n        return function unsubscribe() {\n            var index = subscribers.indexOf(cb);\n            if (index === -1) {\n                return;\n            }\n            subscribers.splice(index, 1);\n        };\n    }\n    function notify(event) {\n        if (subscribers.length) {\n            subscribers.forEach(function(cb) {\n                return cb(event);\n            });\n        }\n    }\n    function findDraggableById(id) {\n        return entries.draggables[id] || null;\n    }\n    function getDraggableById(id) {\n        var entry = findDraggableById(id);\n        !entry ?  true ? invariant(false, \"Cannot find draggable entry with id [\" + id + \"]\") : 0 : void 0;\n        return entry;\n    }\n    var draggableAPI = {\n        register: function register(entry) {\n            entries.draggables[entry.descriptor.id] = entry;\n            notify({\n                type: \"ADDITION\",\n                value: entry\n            });\n        },\n        update: function update(entry, last) {\n            var current = entries.draggables[last.descriptor.id];\n            if (!current) {\n                return;\n            }\n            if (current.uniqueId !== entry.uniqueId) {\n                return;\n            }\n            delete entries.draggables[last.descriptor.id];\n            entries.draggables[entry.descriptor.id] = entry;\n        },\n        unregister: function unregister(entry) {\n            var draggableId = entry.descriptor.id;\n            var current = findDraggableById(draggableId);\n            if (!current) {\n                return;\n            }\n            if (entry.uniqueId !== current.uniqueId) {\n                return;\n            }\n            delete entries.draggables[draggableId];\n            notify({\n                type: \"REMOVAL\",\n                value: entry\n            });\n        },\n        getById: getDraggableById,\n        findById: findDraggableById,\n        exists: function exists(id) {\n            return Boolean(findDraggableById(id));\n        },\n        getAllByType: function getAllByType(type) {\n            return values(entries.draggables).filter(function(entry) {\n                return entry.descriptor.type === type;\n            });\n        }\n    };\n    function findDroppableById(id) {\n        return entries.droppables[id] || null;\n    }\n    function getDroppableById(id) {\n        var entry = findDroppableById(id);\n        !entry ?  true ? invariant(false, \"Cannot find droppable entry with id [\" + id + \"]\") : 0 : void 0;\n        return entry;\n    }\n    var droppableAPI = {\n        register: function register(entry) {\n            entries.droppables[entry.descriptor.id] = entry;\n        },\n        unregister: function unregister(entry) {\n            var current = findDroppableById(entry.descriptor.id);\n            if (!current) {\n                return;\n            }\n            if (entry.uniqueId !== current.uniqueId) {\n                return;\n            }\n            delete entries.droppables[entry.descriptor.id];\n        },\n        getById: getDroppableById,\n        findById: findDroppableById,\n        exists: function exists(id) {\n            return Boolean(findDroppableById(id));\n        },\n        getAllByType: function getAllByType(type) {\n            return values(entries.droppables).filter(function(entry) {\n                return entry.descriptor.type === type;\n            });\n        }\n    };\n    function clean() {\n        entries.draggables = {};\n        entries.droppables = {};\n        subscribers.length = 0;\n    }\n    return {\n        draggable: draggableAPI,\n        droppable: droppableAPI,\n        subscribe: subscribe,\n        clean: clean\n    };\n}\nfunction useRegistry() {\n    _s2();\n    var registry = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(createRegistry, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        return function unmount() {\n            requestAnimationFrame(registry.clean);\n        };\n    }, [\n        registry\n    ]);\n    return registry;\n}\n_s2(useRegistry, \"nglTjWscdodM3YNrZzAUNr5oUjo=\");\nvar StoreContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nvar getBodyElement = function() {\n    var body = document.body;\n    !body ?  true ? invariant(false, \"Cannot find document.body\") : 0 : void 0;\n    return body;\n};\nvar visuallyHidden = {\n    position: \"absolute\",\n    width: \"1px\",\n    height: \"1px\",\n    margin: \"-1px\",\n    border: \"0\",\n    padding: \"0\",\n    overflow: \"hidden\",\n    clip: \"rect(0 0 0 0)\",\n    \"clip-path\": \"inset(100%)\"\n};\nvar getId = function getId(contextId) {\n    return \"rbd-announcement-\" + contextId;\n};\nfunction useAnnouncer(contextId) {\n    _s3();\n    var id = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return getId(contextId);\n    }, [\n        contextId\n    ]);\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function setup() {\n        var el = document.createElement(\"div\");\n        ref.current = el;\n        el.id = id;\n        el.setAttribute(\"aria-live\", \"assertive\");\n        el.setAttribute(\"aria-atomic\", \"true\");\n        (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(el.style, visuallyHidden);\n        getBodyElement().appendChild(el);\n        return function cleanup() {\n            setTimeout(function remove() {\n                var body = getBodyElement();\n                if (body.contains(el)) {\n                    body.removeChild(el);\n                }\n                if (el === ref.current) {\n                    ref.current = null;\n                }\n            });\n        };\n    }, [\n        id\n    ]);\n    var announce = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(message) {\n        var el = ref.current;\n        if (el) {\n            el.textContent = message;\n            return;\n        }\n         true ? warning('\\n      A screen reader message was trying to be announced but it was unable to do so.\\n      This can occur if you unmount your <DragDropContext /> in your onDragEnd.\\n      Consider calling provided.announce() before the unmount so that the instruction will\\n      not be lost for users relying on a screen reader.\\n\\n      Message not passed to screen reader:\\n\\n      \"' + message + '\"\\n    ') : 0;\n    }, []);\n    return announce;\n}\n_s3(useAnnouncer, \"K0j4YuL4uDE3D5oQsk6LgqiGwRc=\");\nvar count = 0;\nvar defaults = {\n    separator: \"::\"\n};\nfunction reset() {\n    count = 0;\n}\nfunction useUniqueId(prefix, options) {\n    _s4();\n    if (options === void 0) {\n        options = defaults;\n    }\n    return (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return \"\" + prefix + options.separator + count++;\n    }, [\n        options.separator,\n        prefix\n    ]);\n}\n_s4(useUniqueId, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nfunction getElementId(_ref) {\n    var contextId = _ref.contextId, uniqueId = _ref.uniqueId;\n    return \"rbd-hidden-text-\" + contextId + \"-\" + uniqueId;\n}\nfunction useHiddenTextElement(_ref2) {\n    _s5();\n    var contextId = _ref2.contextId, text = _ref2.text;\n    var uniqueId = useUniqueId(\"hidden-text\", {\n        separator: \"-\"\n    });\n    var id = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return getElementId({\n            contextId: contextId,\n            uniqueId: uniqueId\n        });\n    }, [\n        uniqueId,\n        contextId\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function mount() {\n        var el = document.createElement(\"div\");\n        el.id = id;\n        el.textContent = text;\n        el.style.display = \"none\";\n        getBodyElement().appendChild(el);\n        return function unmount() {\n            var body = getBodyElement();\n            if (body.contains(el)) {\n                body.removeChild(el);\n            }\n        };\n    }, [\n        id,\n        text\n    ]);\n    return id;\n}\n_s5(useHiddenTextElement, \"+YNUwS4raMpENXkBMSfV8pu0Qlo=\", false, function() {\n    return [\n        useUniqueId\n    ];\n});\nvar AppContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nvar peerDependencies = {\n    react: \"^16.8.5 || ^17.0.0 || ^18.0.0\",\n    \"react-dom\": \"^16.8.5 || ^17.0.0 || ^18.0.0\"\n};\nvar semver = /(\\d+)\\.(\\d+)\\.(\\d+)/;\nvar getVersion = function getVersion(value) {\n    var result = semver.exec(value);\n    !(result != null) ?  true ? invariant(false, \"Unable to parse React version \" + value) : 0 : void 0;\n    var major = Number(result[1]);\n    var minor = Number(result[2]);\n    var patch = Number(result[3]);\n    return {\n        major: major,\n        minor: minor,\n        patch: patch,\n        raw: value\n    };\n};\nvar isSatisfied = function isSatisfied(expected, actual) {\n    if (actual.major > expected.major) {\n        return true;\n    }\n    if (actual.major < expected.major) {\n        return false;\n    }\n    if (actual.minor > expected.minor) {\n        return true;\n    }\n    if (actual.minor < expected.minor) {\n        return false;\n    }\n    return actual.patch >= expected.patch;\n};\nvar checkReactVersion = function(peerDepValue, actualValue) {\n    var peerDep = getVersion(peerDepValue);\n    var actual = getVersion(actualValue);\n    if (isSatisfied(peerDep, actual)) {\n        return;\n    }\n     true ? warning(\"\\n    React version: [\" + actual.raw + \"]\\n    does not satisfy expected peer dependency version: [\" + peerDep.raw + \"]\\n\\n    This can result in run time bugs, and even fatal crashes\\n  \") : 0;\n};\nvar suffix = \"\\n  We expect a html5 doctype: <!doctype html>\\n  This is to ensure consistent browser layout and measurement\\n\\n  More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/doctype.md\\n\";\nvar checkDoctype = function(doc) {\n    var doctype = doc.doctype;\n    if (!doctype) {\n         true ? warning(\"\\n      No <!doctype html> found.\\n\\n      \" + suffix + \"\\n    \") : 0;\n        return;\n    }\n    if (doctype.name.toLowerCase() !== \"html\") {\n         true ? warning(\"\\n      Unexpected <!doctype> found: (\" + doctype.name + \")\\n\\n      \" + suffix + \"\\n    \") : 0;\n    }\n    if (doctype.publicId !== \"\") {\n         true ? warning(\"\\n      Unexpected <!doctype> publicId found: (\" + doctype.publicId + \")\\n      A html5 doctype does not have a publicId\\n\\n      \" + suffix + \"\\n    \") : 0;\n    }\n};\nfunction useDev(useHook) {\n    if (true) {\n        useHook();\n    }\n}\nfunction useDevSetupWarning(fn, inputs) {\n    _s6();\n    var _s = $RefreshSig$();\n    useDev(_s(function() {\n        _s();\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n            try {\n                fn();\n            } catch (e) {\n                error(\"\\n          A setup problem was encountered.\\n\\n          > \" + e.message + \"\\n        \");\n            }\n        }, inputs);\n    }, \"OD7bBpZva5O2jO+Puf00hKivP7c=\"));\n}\n_s6(useDevSetupWarning, \"G1DoeZ4Cvc1i6X87o380ZXC8qZU=\", false, function() {\n    return [\n        useDev\n    ];\n});\nfunction useStartupValidation() {\n    _s7();\n    useDevSetupWarning(function() {\n        checkReactVersion(peerDependencies.react, (react__WEBPACK_IMPORTED_MODULE_0___default().version));\n        checkDoctype(document);\n    }, []);\n}\n_s7(useStartupValidation, \"Ozwf0oC895FtbHip1ADL8W5P3Sw=\", false, function() {\n    return [\n        useDevSetupWarning\n    ];\n});\nfunction usePrevious(current) {\n    _s8();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(current);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        ref.current = current;\n    });\n    return ref;\n}\n_s8(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nfunction create() {\n    var lock = null;\n    function isClaimed() {\n        return Boolean(lock);\n    }\n    function isActive(value) {\n        return value === lock;\n    }\n    function claim(abandon) {\n        !!lock ?  true ? invariant(false, \"Cannot claim lock as it is already claimed\") : 0 : void 0;\n        var newLock = {\n            abandon: abandon\n        };\n        lock = newLock;\n        return newLock;\n    }\n    function release() {\n        !lock ?  true ? invariant(false, \"Cannot release lock when there is no lock\") : 0 : void 0;\n        lock = null;\n    }\n    function tryAbandon() {\n        if (lock) {\n            lock.abandon();\n            release();\n        }\n    }\n    return {\n        isClaimed: isClaimed,\n        isActive: isActive,\n        claim: claim,\n        release: release,\n        tryAbandon: tryAbandon\n    };\n}\nvar tab = 9;\nvar enter = 13;\nvar escape = 27;\nvar space = 32;\nvar pageUp = 33;\nvar pageDown = 34;\nvar end = 35;\nvar home = 36;\nvar arrowLeft = 37;\nvar arrowUp = 38;\nvar arrowRight = 39;\nvar arrowDown = 40;\nvar _preventedKeys;\nvar preventedKeys = (_preventedKeys = {}, _preventedKeys[enter] = true, _preventedKeys[tab] = true, _preventedKeys);\nvar preventStandardKeyEvents = function(event) {\n    if (preventedKeys[event.keyCode]) {\n        event.preventDefault();\n    }\n};\nvar supportedEventName = function() {\n    var base = \"visibilitychange\";\n    if (typeof document === \"undefined\") {\n        return base;\n    }\n    var candidates = [\n        base,\n        \"ms\" + base,\n        \"webkit\" + base,\n        \"moz\" + base,\n        \"o\" + base\n    ];\n    var supported = find(candidates, function(eventName) {\n        return \"on\" + eventName in document;\n    });\n    return supported || base;\n}();\nvar primaryButton = 0;\nvar sloppyClickThreshold = 5;\nfunction isSloppyClickThresholdExceeded(original, current) {\n    return Math.abs(current.x - original.x) >= sloppyClickThreshold || Math.abs(current.y - original.y) >= sloppyClickThreshold;\n}\nvar idle$1 = {\n    type: \"IDLE\"\n};\nfunction getCaptureBindings(_ref) {\n    var cancel = _ref.cancel, completed = _ref.completed, getPhase = _ref.getPhase, setPhase = _ref.setPhase;\n    return [\n        {\n            eventName: \"mousemove\",\n            fn: function fn(event) {\n                var button = event.button, clientX = event.clientX, clientY = event.clientY;\n                if (button !== primaryButton) {\n                    return;\n                }\n                var point = {\n                    x: clientX,\n                    y: clientY\n                };\n                var phase = getPhase();\n                if (phase.type === \"DRAGGING\") {\n                    event.preventDefault();\n                    phase.actions.move(point);\n                    return;\n                }\n                !(phase.type === \"PENDING\") ?  true ? invariant(false, \"Cannot be IDLE\") : 0 : void 0;\n                var pending = phase.point;\n                if (!isSloppyClickThresholdExceeded(pending, point)) {\n                    return;\n                }\n                event.preventDefault();\n                var actions = phase.actions.fluidLift(point);\n                setPhase({\n                    type: \"DRAGGING\",\n                    actions: actions\n                });\n            }\n        },\n        {\n            eventName: \"mouseup\",\n            fn: function fn(event) {\n                var phase = getPhase();\n                if (phase.type !== \"DRAGGING\") {\n                    cancel();\n                    return;\n                }\n                event.preventDefault();\n                phase.actions.drop({\n                    shouldBlockNextClick: true\n                });\n                completed();\n            }\n        },\n        {\n            eventName: \"mousedown\",\n            fn: function fn(event) {\n                if (getPhase().type === \"DRAGGING\") {\n                    event.preventDefault();\n                }\n                cancel();\n            }\n        },\n        {\n            eventName: \"keydown\",\n            fn: function fn(event) {\n                var phase = getPhase();\n                if (phase.type === \"PENDING\") {\n                    cancel();\n                    return;\n                }\n                if (event.keyCode === escape) {\n                    event.preventDefault();\n                    cancel();\n                    return;\n                }\n                preventStandardKeyEvents(event);\n            }\n        },\n        {\n            eventName: \"resize\",\n            fn: cancel\n        },\n        {\n            eventName: \"scroll\",\n            options: {\n                passive: true,\n                capture: false\n            },\n            fn: function fn() {\n                if (getPhase().type === \"PENDING\") {\n                    cancel();\n                }\n            }\n        },\n        {\n            eventName: \"webkitmouseforcedown\",\n            fn: function fn(event) {\n                var phase = getPhase();\n                !(phase.type !== \"IDLE\") ?  true ? invariant(false, \"Unexpected phase\") : 0 : void 0;\n                if (phase.actions.shouldRespectForcePress()) {\n                    cancel();\n                    return;\n                }\n                event.preventDefault();\n            }\n        },\n        {\n            eventName: supportedEventName,\n            fn: cancel\n        }\n    ];\n}\nfunction useMouseSensor(api) {\n    _s9();\n    var phaseRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(idle$1);\n    var unbindEventsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(noop);\n    var startCaptureBinding = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            eventName: \"mousedown\",\n            fn: function onMouseDown(event) {\n                if (event.defaultPrevented) {\n                    return;\n                }\n                if (event.button !== primaryButton) {\n                    return;\n                }\n                if (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {\n                    return;\n                }\n                var draggableId = api.findClosestDraggableId(event);\n                if (!draggableId) {\n                    return;\n                }\n                var actions = api.tryGetLock(draggableId, stop, {\n                    sourceEvent: event\n                });\n                if (!actions) {\n                    return;\n                }\n                event.preventDefault();\n                var point = {\n                    x: event.clientX,\n                    y: event.clientY\n                };\n                unbindEventsRef.current();\n                startPendingDrag(actions, point);\n            }\n        };\n    }, [\n        api\n    ]);\n    var preventForcePressBinding = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            eventName: \"webkitmouseforcewillbegin\",\n            fn: function fn(event) {\n                if (event.defaultPrevented) {\n                    return;\n                }\n                var id = api.findClosestDraggableId(event);\n                if (!id) {\n                    return;\n                }\n                var options = api.findOptionsForDraggable(id);\n                if (!options) {\n                    return;\n                }\n                if (options.shouldRespectForcePress) {\n                    return;\n                }\n                if (!api.canGetLock(id)) {\n                    return;\n                }\n                event.preventDefault();\n            }\n        };\n    }, [\n        api\n    ]);\n    var listenForCapture = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function listenForCapture() {\n        var options = {\n            passive: false,\n            capture: true\n        };\n        unbindEventsRef.current = bindEvents(window, [\n            preventForcePressBinding,\n            startCaptureBinding\n        ], options);\n    }, [\n        preventForcePressBinding,\n        startCaptureBinding\n    ]);\n    var stop = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var current = phaseRef.current;\n        if (current.type === \"IDLE\") {\n            return;\n        }\n        phaseRef.current = idle$1;\n        unbindEventsRef.current();\n        listenForCapture();\n    }, [\n        listenForCapture\n    ]);\n    var cancel = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var phase = phaseRef.current;\n        stop();\n        if (phase.type === \"DRAGGING\") {\n            phase.actions.cancel({\n                shouldBlockNextClick: true\n            });\n        }\n        if (phase.type === \"PENDING\") {\n            phase.actions.abort();\n        }\n    }, [\n        stop\n    ]);\n    var bindCapturingEvents = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function bindCapturingEvents() {\n        var options = {\n            capture: true,\n            passive: false\n        };\n        var bindings = getCaptureBindings({\n            cancel: cancel,\n            completed: stop,\n            getPhase: function getPhase() {\n                return phaseRef.current;\n            },\n            setPhase: function setPhase(phase) {\n                phaseRef.current = phase;\n            }\n        });\n        unbindEventsRef.current = bindEvents(window, bindings, options);\n    }, [\n        cancel,\n        stop\n    ]);\n    var startPendingDrag = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function startPendingDrag(actions, point) {\n        !(phaseRef.current.type === \"IDLE\") ?  true ? invariant(false, \"Expected to move from IDLE to PENDING drag\") : 0 : void 0;\n        phaseRef.current = {\n            type: \"PENDING\",\n            point: point,\n            actions: actions\n        };\n        bindCapturingEvents();\n    }, [\n        bindCapturingEvents\n    ]);\n    useIsomorphicLayoutEffect(function mount() {\n        listenForCapture();\n        return function unmount() {\n            unbindEventsRef.current();\n        };\n    }, [\n        listenForCapture\n    ]);\n}\n_s9(useMouseSensor, \"uTC6pck0//XPrbGCL0XrAh1xwNE=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\nvar _scrollJumpKeys;\nfunction noop$1() {}\nvar scrollJumpKeys = (_scrollJumpKeys = {}, _scrollJumpKeys[pageDown] = true, _scrollJumpKeys[pageUp] = true, _scrollJumpKeys[home] = true, _scrollJumpKeys[end] = true, _scrollJumpKeys);\nfunction getDraggingBindings(actions, stop) {\n    function cancel() {\n        stop();\n        actions.cancel();\n    }\n    function drop() {\n        stop();\n        actions.drop();\n    }\n    return [\n        {\n            eventName: \"keydown\",\n            fn: function fn(event) {\n                if (event.keyCode === escape) {\n                    event.preventDefault();\n                    cancel();\n                    return;\n                }\n                if (event.keyCode === space) {\n                    event.preventDefault();\n                    drop();\n                    return;\n                }\n                if (event.keyCode === arrowDown) {\n                    event.preventDefault();\n                    actions.moveDown();\n                    return;\n                }\n                if (event.keyCode === arrowUp) {\n                    event.preventDefault();\n                    actions.moveUp();\n                    return;\n                }\n                if (event.keyCode === arrowRight) {\n                    event.preventDefault();\n                    actions.moveRight();\n                    return;\n                }\n                if (event.keyCode === arrowLeft) {\n                    event.preventDefault();\n                    actions.moveLeft();\n                    return;\n                }\n                if (scrollJumpKeys[event.keyCode]) {\n                    event.preventDefault();\n                    return;\n                }\n                preventStandardKeyEvents(event);\n            }\n        },\n        {\n            eventName: \"mousedown\",\n            fn: cancel\n        },\n        {\n            eventName: \"mouseup\",\n            fn: cancel\n        },\n        {\n            eventName: \"click\",\n            fn: cancel\n        },\n        {\n            eventName: \"touchstart\",\n            fn: cancel\n        },\n        {\n            eventName: \"resize\",\n            fn: cancel\n        },\n        {\n            eventName: \"wheel\",\n            fn: cancel,\n            options: {\n                passive: true\n            }\n        },\n        {\n            eventName: supportedEventName,\n            fn: cancel\n        }\n    ];\n}\nfunction useKeyboardSensor(api) {\n    _s10();\n    var unbindEventsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(noop$1);\n    var startCaptureBinding = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            eventName: \"keydown\",\n            fn: function onKeyDown(event) {\n                if (event.defaultPrevented) {\n                    return;\n                }\n                if (event.keyCode !== space) {\n                    return;\n                }\n                var draggableId = api.findClosestDraggableId(event);\n                if (!draggableId) {\n                    return;\n                }\n                var preDrag = api.tryGetLock(draggableId, stop, {\n                    sourceEvent: event\n                });\n                if (!preDrag) {\n                    return;\n                }\n                event.preventDefault();\n                var isCapturing = true;\n                var actions = preDrag.snapLift();\n                unbindEventsRef.current();\n                function stop() {\n                    !isCapturing ?  true ? invariant(false, \"Cannot stop capturing a keyboard drag when not capturing\") : 0 : void 0;\n                    isCapturing = false;\n                    unbindEventsRef.current();\n                    listenForCapture();\n                }\n                unbindEventsRef.current = bindEvents(window, getDraggingBindings(actions, stop), {\n                    capture: true,\n                    passive: false\n                });\n            }\n        };\n    }, [\n        api\n    ]);\n    var listenForCapture = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function tryStartCapture() {\n        var options = {\n            passive: false,\n            capture: true\n        };\n        unbindEventsRef.current = bindEvents(window, [\n            startCaptureBinding\n        ], options);\n    }, [\n        startCaptureBinding\n    ]);\n    useIsomorphicLayoutEffect(function mount() {\n        listenForCapture();\n        return function unmount() {\n            unbindEventsRef.current();\n        };\n    }, [\n        listenForCapture\n    ]);\n}\n_s10(useKeyboardSensor, \"DMrBrEtryKqEaCIVr35/ceQYo+Q=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect\n    ];\n});\nvar idle$2 = {\n    type: \"IDLE\"\n};\nvar timeForLongPress = 120;\nvar forcePressThreshold = 0.15;\nfunction getWindowBindings(_ref) {\n    var cancel = _ref.cancel, getPhase = _ref.getPhase;\n    return [\n        {\n            eventName: \"orientationchange\",\n            fn: cancel\n        },\n        {\n            eventName: \"resize\",\n            fn: cancel\n        },\n        {\n            eventName: \"contextmenu\",\n            fn: function fn(event) {\n                event.preventDefault();\n            }\n        },\n        {\n            eventName: \"keydown\",\n            fn: function fn(event) {\n                if (getPhase().type !== \"DRAGGING\") {\n                    cancel();\n                    return;\n                }\n                if (event.keyCode === escape) {\n                    event.preventDefault();\n                }\n                cancel();\n            }\n        },\n        {\n            eventName: supportedEventName,\n            fn: cancel\n        }\n    ];\n}\nfunction getHandleBindings(_ref2) {\n    var cancel = _ref2.cancel, completed = _ref2.completed, getPhase = _ref2.getPhase;\n    return [\n        {\n            eventName: \"touchmove\",\n            options: {\n                capture: false\n            },\n            fn: function fn(event) {\n                var phase = getPhase();\n                if (phase.type !== \"DRAGGING\") {\n                    cancel();\n                    return;\n                }\n                phase.hasMoved = true;\n                var _event$touches$ = event.touches[0], clientX = _event$touches$.clientX, clientY = _event$touches$.clientY;\n                var point = {\n                    x: clientX,\n                    y: clientY\n                };\n                event.preventDefault();\n                phase.actions.move(point);\n            }\n        },\n        {\n            eventName: \"touchend\",\n            fn: function fn(event) {\n                var phase = getPhase();\n                if (phase.type !== \"DRAGGING\") {\n                    cancel();\n                    return;\n                }\n                event.preventDefault();\n                phase.actions.drop({\n                    shouldBlockNextClick: true\n                });\n                completed();\n            }\n        },\n        {\n            eventName: \"touchcancel\",\n            fn: function fn(event) {\n                if (getPhase().type !== \"DRAGGING\") {\n                    cancel();\n                    return;\n                }\n                event.preventDefault();\n                cancel();\n            }\n        },\n        {\n            eventName: \"touchforcechange\",\n            fn: function fn(event) {\n                var phase = getPhase();\n                !(phase.type !== \"IDLE\") ?  true ? invariant(false) : 0 : void 0;\n                var touch = event.touches[0];\n                if (!touch) {\n                    return;\n                }\n                var isForcePress = touch.force >= forcePressThreshold;\n                if (!isForcePress) {\n                    return;\n                }\n                var shouldRespect = phase.actions.shouldRespectForcePress();\n                if (phase.type === \"PENDING\") {\n                    if (shouldRespect) {\n                        cancel();\n                    }\n                    return;\n                }\n                if (shouldRespect) {\n                    if (phase.hasMoved) {\n                        event.preventDefault();\n                        return;\n                    }\n                    cancel();\n                    return;\n                }\n                event.preventDefault();\n            }\n        },\n        {\n            eventName: supportedEventName,\n            fn: cancel\n        }\n    ];\n}\nfunction useTouchSensor(api) {\n    _s11();\n    var phaseRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(idle$2);\n    var unbindEventsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(noop);\n    var getPhase = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function getPhase() {\n        return phaseRef.current;\n    }, []);\n    var setPhase = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function setPhase(phase) {\n        phaseRef.current = phase;\n    }, []);\n    var startCaptureBinding = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            eventName: \"touchstart\",\n            fn: function onTouchStart(event) {\n                if (event.defaultPrevented) {\n                    return;\n                }\n                var draggableId = api.findClosestDraggableId(event);\n                if (!draggableId) {\n                    return;\n                }\n                var actions = api.tryGetLock(draggableId, stop, {\n                    sourceEvent: event\n                });\n                if (!actions) {\n                    return;\n                }\n                var touch = event.touches[0];\n                var clientX = touch.clientX, clientY = touch.clientY;\n                var point = {\n                    x: clientX,\n                    y: clientY\n                };\n                unbindEventsRef.current();\n                startPendingDrag(actions, point);\n            }\n        };\n    }, [\n        api\n    ]);\n    var listenForCapture = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function listenForCapture() {\n        var options = {\n            capture: true,\n            passive: false\n        };\n        unbindEventsRef.current = bindEvents(window, [\n            startCaptureBinding\n        ], options);\n    }, [\n        startCaptureBinding\n    ]);\n    var stop = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var current = phaseRef.current;\n        if (current.type === \"IDLE\") {\n            return;\n        }\n        if (current.type === \"PENDING\") {\n            clearTimeout(current.longPressTimerId);\n        }\n        setPhase(idle$2);\n        unbindEventsRef.current();\n        listenForCapture();\n    }, [\n        listenForCapture,\n        setPhase\n    ]);\n    var cancel = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var phase = phaseRef.current;\n        stop();\n        if (phase.type === \"DRAGGING\") {\n            phase.actions.cancel({\n                shouldBlockNextClick: true\n            });\n        }\n        if (phase.type === \"PENDING\") {\n            phase.actions.abort();\n        }\n    }, [\n        stop\n    ]);\n    var bindCapturingEvents = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function bindCapturingEvents() {\n        var options = {\n            capture: true,\n            passive: false\n        };\n        var args = {\n            cancel: cancel,\n            completed: stop,\n            getPhase: getPhase\n        };\n        var unbindTarget = bindEvents(window, getHandleBindings(args), options);\n        var unbindWindow = bindEvents(window, getWindowBindings(args), options);\n        unbindEventsRef.current = function unbindAll() {\n            unbindTarget();\n            unbindWindow();\n        };\n    }, [\n        cancel,\n        getPhase,\n        stop\n    ]);\n    var startDragging = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function startDragging() {\n        var phase = getPhase();\n        !(phase.type === \"PENDING\") ?  true ? invariant(false, \"Cannot start dragging from phase \" + phase.type) : 0 : void 0;\n        var actions = phase.actions.fluidLift(phase.point);\n        setPhase({\n            type: \"DRAGGING\",\n            actions: actions,\n            hasMoved: false\n        });\n    }, [\n        getPhase,\n        setPhase\n    ]);\n    var startPendingDrag = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function startPendingDrag(actions, point) {\n        !(getPhase().type === \"IDLE\") ?  true ? invariant(false, \"Expected to move from IDLE to PENDING drag\") : 0 : void 0;\n        var longPressTimerId = setTimeout(startDragging, timeForLongPress);\n        setPhase({\n            type: \"PENDING\",\n            point: point,\n            actions: actions,\n            longPressTimerId: longPressTimerId\n        });\n        bindCapturingEvents();\n    }, [\n        bindCapturingEvents,\n        getPhase,\n        setPhase,\n        startDragging\n    ]);\n    useIsomorphicLayoutEffect(function mount() {\n        listenForCapture();\n        return function unmount() {\n            unbindEventsRef.current();\n            var phase = getPhase();\n            if (phase.type === \"PENDING\") {\n                clearTimeout(phase.longPressTimerId);\n                setPhase(idle$2);\n            }\n        };\n    }, [\n        getPhase,\n        listenForCapture,\n        setPhase\n    ]);\n    useIsomorphicLayoutEffect(function webkitHack() {\n        var unbind = bindEvents(window, [\n            {\n                eventName: \"touchmove\",\n                fn: function fn() {},\n                options: {\n                    capture: false,\n                    passive: false\n                }\n            }\n        ]);\n        return unbind;\n    }, []);\n}\n_s11(useTouchSensor, \"eulpc6C4Cqjs1t4J6pAUTZzj0r0=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect,\n        useIsomorphicLayoutEffect\n    ];\n});\nfunction useValidateSensorHooks(sensorHooks) {\n    _s12();\n    var _s = $RefreshSig$();\n    useDev(_s(function() {\n        _s();\n        var previousRef = usePrevious(sensorHooks);\n        useDevSetupWarning(function() {\n            !(previousRef.current.length === sensorHooks.length) ?  true ? invariant(false, \"Cannot change the amount of sensor hooks after mounting\") : 0 : void 0;\n        });\n    }, \"OAaRlv/GEy0h3oTkg/DqglE0Sts=\", false, function() {\n        return [\n            usePrevious,\n            useDevSetupWarning\n        ];\n    }));\n}\n_s12(useValidateSensorHooks, \"G1DoeZ4Cvc1i6X87o380ZXC8qZU=\", false, function() {\n    return [\n        useDev\n    ];\n});\nvar interactiveTagNames = {\n    input: true,\n    button: true,\n    textarea: true,\n    select: true,\n    option: true,\n    optgroup: true,\n    video: true,\n    audio: true\n};\nfunction isAnInteractiveElement(parent, current) {\n    if (current == null) {\n        return false;\n    }\n    var hasAnInteractiveTag = Boolean(interactiveTagNames[current.tagName.toLowerCase()]);\n    if (hasAnInteractiveTag) {\n        return true;\n    }\n    var attribute = current.getAttribute(\"contenteditable\");\n    if (attribute === \"true\" || attribute === \"\") {\n        return true;\n    }\n    if (current === parent) {\n        return false;\n    }\n    return isAnInteractiveElement(parent, current.parentElement);\n}\nfunction isEventInInteractiveElement(draggable, event) {\n    var target = event.target;\n    if (!isHtmlElement(target)) {\n        return false;\n    }\n    return isAnInteractiveElement(draggable, target);\n}\nvar getBorderBoxCenterPosition = function(el) {\n    return (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getRect)(el.getBoundingClientRect()).center;\n};\nfunction isElement(el) {\n    return el instanceof getWindowFromEl(el).Element;\n}\nvar supportedMatchesName = function() {\n    var base = \"matches\";\n    if (typeof document === \"undefined\") {\n        return base;\n    }\n    var candidates = [\n        base,\n        \"msMatchesSelector\",\n        \"webkitMatchesSelector\"\n    ];\n    var value = find(candidates, function(name) {\n        return name in Element.prototype;\n    });\n    return value || base;\n}();\nfunction closestPonyfill(el, selector) {\n    if (el == null) {\n        return null;\n    }\n    if (el[supportedMatchesName](selector)) {\n        return el;\n    }\n    return closestPonyfill(el.parentElement, selector);\n}\nfunction closest$1(el, selector) {\n    if (el.closest) {\n        return el.closest(selector);\n    }\n    return closestPonyfill(el, selector);\n}\nfunction getSelector(contextId) {\n    return \"[\" + dragHandle.contextId + '=\"' + contextId + '\"]';\n}\nfunction findClosestDragHandleFromEvent(contextId, event) {\n    var target = event.target;\n    if (!isElement(target)) {\n         true ? warning(\"event.target must be a Element\") : 0;\n        return null;\n    }\n    var selector = getSelector(contextId);\n    var handle = closest$1(target, selector);\n    if (!handle) {\n        return null;\n    }\n    if (!isHtmlElement(handle)) {\n         true ? warning(\"drag handle must be a HTMLElement\") : 0;\n        return null;\n    }\n    return handle;\n}\nfunction tryGetClosestDraggableIdFromEvent(contextId, event) {\n    var handle = findClosestDragHandleFromEvent(contextId, event);\n    if (!handle) {\n        return null;\n    }\n    return handle.getAttribute(dragHandle.draggableId);\n}\nfunction findDraggable(contextId, draggableId) {\n    var selector = \"[\" + draggable.contextId + '=\"' + contextId + '\"]';\n    var possible = toArray(document.querySelectorAll(selector));\n    var draggable$1 = find(possible, function(el) {\n        return el.getAttribute(draggable.id) === draggableId;\n    });\n    if (!draggable$1) {\n        return null;\n    }\n    if (!isHtmlElement(draggable$1)) {\n         true ? warning(\"Draggable element is not a HTMLElement\") : 0;\n        return null;\n    }\n    return draggable$1;\n}\nfunction preventDefault(event) {\n    event.preventDefault();\n}\nfunction _isActive(_ref) {\n    var expected = _ref.expected, phase = _ref.phase, isLockActive = _ref.isLockActive, shouldWarn = _ref.shouldWarn;\n    if (!isLockActive()) {\n        if (shouldWarn) {\n             true ? warning(\"\\n        Cannot perform action.\\n        The sensor no longer has an action lock.\\n\\n        Tips:\\n\\n        - Throw away your action handlers when forceStop() is called\\n        - Check actions.isActive() if you really need to\\n      \") : 0;\n        }\n        return false;\n    }\n    if (expected !== phase) {\n        if (shouldWarn) {\n             true ? warning(\"\\n        Cannot perform action.\\n        The actions you used belong to an outdated phase\\n\\n        Current phase: \" + expected + \"\\n        You called an action from outdated phase: \" + phase + \"\\n\\n        Tips:\\n\\n        - Do not use preDragActions actions after calling preDragActions.lift()\\n      \") : 0;\n        }\n        return false;\n    }\n    return true;\n}\nfunction canStart(_ref2) {\n    var lockAPI = _ref2.lockAPI, store = _ref2.store, registry = _ref2.registry, draggableId = _ref2.draggableId;\n    if (lockAPI.isClaimed()) {\n        return false;\n    }\n    var entry = registry.draggable.findById(draggableId);\n    if (!entry) {\n         true ? warning(\"Unable to find draggable with id: \" + draggableId) : 0;\n        return false;\n    }\n    if (!entry.options.isEnabled) {\n        return false;\n    }\n    if (!canStartDrag(store.getState(), draggableId)) {\n        return false;\n    }\n    return true;\n}\nfunction tryStart(_ref3) {\n    var lockAPI = _ref3.lockAPI, contextId = _ref3.contextId, store = _ref3.store, registry = _ref3.registry, draggableId = _ref3.draggableId, forceSensorStop = _ref3.forceSensorStop, sourceEvent = _ref3.sourceEvent;\n    var shouldStart = canStart({\n        lockAPI: lockAPI,\n        store: store,\n        registry: registry,\n        draggableId: draggableId\n    });\n    if (!shouldStart) {\n        return null;\n    }\n    var entry = registry.draggable.getById(draggableId);\n    var el = findDraggable(contextId, entry.descriptor.id);\n    if (!el) {\n         true ? warning(\"Unable to find draggable element with id: \" + draggableId) : 0;\n        return null;\n    }\n    if (sourceEvent && !entry.options.canDragInteractiveElements && isEventInInteractiveElement(el, sourceEvent)) {\n        return null;\n    }\n    var lock = lockAPI.claim(forceSensorStop || noop);\n    var phase = \"PRE_DRAG\";\n    function getShouldRespectForcePress() {\n        return entry.options.shouldRespectForcePress;\n    }\n    function isLockActive() {\n        return lockAPI.isActive(lock);\n    }\n    function tryDispatch(expected, getAction) {\n        if (_isActive({\n            expected: expected,\n            phase: phase,\n            isLockActive: isLockActive,\n            shouldWarn: true\n        })) {\n            store.dispatch(getAction());\n        }\n    }\n    var tryDispatchWhenDragging = tryDispatch.bind(null, \"DRAGGING\");\n    function lift$1(args) {\n        function completed() {\n            lockAPI.release();\n            phase = \"COMPLETED\";\n        }\n        if (phase !== \"PRE_DRAG\") {\n            completed();\n            !(phase === \"PRE_DRAG\") ?  true ? invariant(false, \"Cannot lift in phase \" + phase) : 0 : void 0;\n        }\n        store.dispatch(lift(args.liftActionArgs));\n        phase = \"DRAGGING\";\n        function finish(reason, options) {\n            if (options === void 0) {\n                options = {\n                    shouldBlockNextClick: false\n                };\n            }\n            args.cleanup();\n            if (options.shouldBlockNextClick) {\n                var unbind = bindEvents(window, [\n                    {\n                        eventName: \"click\",\n                        fn: preventDefault,\n                        options: {\n                            once: true,\n                            passive: false,\n                            capture: true\n                        }\n                    }\n                ]);\n                setTimeout(unbind);\n            }\n            completed();\n            store.dispatch(drop({\n                reason: reason\n            }));\n        }\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            isActive: function isActive() {\n                return _isActive({\n                    expected: \"DRAGGING\",\n                    phase: phase,\n                    isLockActive: isLockActive,\n                    shouldWarn: false\n                });\n            },\n            shouldRespectForcePress: getShouldRespectForcePress,\n            drop: function drop(options) {\n                return finish(\"DROP\", options);\n            },\n            cancel: function cancel(options) {\n                return finish(\"CANCEL\", options);\n            }\n        }, args.actions);\n    }\n    function fluidLift(clientSelection) {\n        var move$1 = (0,raf_schd__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(function(client) {\n            tryDispatchWhenDragging(function() {\n                return move({\n                    client: client\n                });\n            });\n        });\n        var api = lift$1({\n            liftActionArgs: {\n                id: draggableId,\n                clientSelection: clientSelection,\n                movementMode: \"FLUID\"\n            },\n            cleanup: function cleanup() {\n                return move$1.cancel();\n            },\n            actions: {\n                move: move$1\n            }\n        });\n        return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, api, {\n            move: move$1\n        });\n    }\n    function snapLift() {\n        var actions = {\n            moveUp: function moveUp$1() {\n                return tryDispatchWhenDragging(moveUp);\n            },\n            moveRight: function moveRight$1() {\n                return tryDispatchWhenDragging(moveRight);\n            },\n            moveDown: function moveDown$1() {\n                return tryDispatchWhenDragging(moveDown);\n            },\n            moveLeft: function moveLeft$1() {\n                return tryDispatchWhenDragging(moveLeft);\n            }\n        };\n        return lift$1({\n            liftActionArgs: {\n                id: draggableId,\n                clientSelection: getBorderBoxCenterPosition(el),\n                movementMode: \"SNAP\"\n            },\n            cleanup: noop,\n            actions: actions\n        });\n    }\n    function abortPreDrag() {\n        var shouldRelease = _isActive({\n            expected: \"PRE_DRAG\",\n            phase: phase,\n            isLockActive: isLockActive,\n            shouldWarn: true\n        });\n        if (shouldRelease) {\n            lockAPI.release();\n        }\n    }\n    var preDrag = {\n        isActive: function isActive() {\n            return _isActive({\n                expected: \"PRE_DRAG\",\n                phase: phase,\n                isLockActive: isLockActive,\n                shouldWarn: false\n            });\n        },\n        shouldRespectForcePress: getShouldRespectForcePress,\n        fluidLift: fluidLift,\n        snapLift: snapLift,\n        abort: abortPreDrag\n    };\n    return preDrag;\n}\nvar defaultSensors = [\n    useMouseSensor,\n    useKeyboardSensor,\n    useTouchSensor\n];\nfunction useSensorMarshal(_ref4) {\n    _s13();\n    var contextId = _ref4.contextId, store = _ref4.store, registry = _ref4.registry, customSensors = _ref4.customSensors, enableDefaultSensors = _ref4.enableDefaultSensors;\n    var useSensors = [].concat(enableDefaultSensors ? defaultSensors : [], customSensors || []);\n    var lockAPI = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function() {\n        return create();\n    })[0];\n    var tryAbandonLock = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function tryAbandonLock(previous, current) {\n        if (previous.isDragging && !current.isDragging) {\n            lockAPI.tryAbandon();\n        }\n    }, [\n        lockAPI\n    ]);\n    useIsomorphicLayoutEffect(function listenToStore() {\n        var previous = store.getState();\n        var unsubscribe = store.subscribe(function() {\n            var current = store.getState();\n            tryAbandonLock(previous, current);\n            previous = current;\n        });\n        return unsubscribe;\n    }, [\n        lockAPI,\n        store,\n        tryAbandonLock\n    ]);\n    useIsomorphicLayoutEffect(function() {\n        return lockAPI.tryAbandon;\n    }, [\n        lockAPI.tryAbandon\n    ]);\n    var canGetLock = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(draggableId) {\n        return canStart({\n            lockAPI: lockAPI,\n            registry: registry,\n            store: store,\n            draggableId: draggableId\n        });\n    }, [\n        lockAPI,\n        registry,\n        store\n    ]);\n    var tryGetLock = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(draggableId, forceStop, options) {\n        return tryStart({\n            lockAPI: lockAPI,\n            registry: registry,\n            contextId: contextId,\n            store: store,\n            draggableId: draggableId,\n            forceSensorStop: forceStop,\n            sourceEvent: options && options.sourceEvent ? options.sourceEvent : null\n        });\n    }, [\n        contextId,\n        lockAPI,\n        registry,\n        store\n    ]);\n    var findClosestDraggableId = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(event) {\n        return tryGetClosestDraggableIdFromEvent(contextId, event);\n    }, [\n        contextId\n    ]);\n    var findOptionsForDraggable = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(id) {\n        var entry = registry.draggable.findById(id);\n        return entry ? entry.options : null;\n    }, [\n        registry.draggable\n    ]);\n    var tryReleaseLock = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function tryReleaseLock() {\n        if (!lockAPI.isClaimed()) {\n            return;\n        }\n        lockAPI.tryAbandon();\n        if (store.getState().phase !== \"IDLE\") {\n            store.dispatch(flush());\n        }\n    }, [\n        lockAPI,\n        store\n    ]);\n    var isLockClaimed = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(lockAPI.isClaimed, [\n        lockAPI\n    ]);\n    var api = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            canGetLock: canGetLock,\n            tryGetLock: tryGetLock,\n            findClosestDraggableId: findClosestDraggableId,\n            findOptionsForDraggable: findOptionsForDraggable,\n            tryReleaseLock: tryReleaseLock,\n            isLockClaimed: isLockClaimed\n        };\n    }, [\n        canGetLock,\n        tryGetLock,\n        findClosestDraggableId,\n        findOptionsForDraggable,\n        tryReleaseLock,\n        isLockClaimed\n    ]);\n    useValidateSensorHooks(useSensors);\n    for(var i = 0; i < useSensors.length; i++){\n        useSensors[i](api);\n    }\n}\n_s13(useSensorMarshal, \"hdH6WHAVJQeA0uXIfvwWNn+jPMI=\", false, function() {\n    return [\n        useIsomorphicLayoutEffect,\n        useIsomorphicLayoutEffect,\n        useValidateSensorHooks\n    ];\n});\nvar createResponders = function createResponders(props) {\n    return {\n        onBeforeCapture: props.onBeforeCapture,\n        onBeforeDragStart: props.onBeforeDragStart,\n        onDragStart: props.onDragStart,\n        onDragEnd: props.onDragEnd,\n        onDragUpdate: props.onDragUpdate\n    };\n};\nfunction getStore(lazyRef) {\n    !lazyRef.current ?  true ? invariant(false, \"Could not find store from lazy ref\") : 0 : void 0;\n    return lazyRef.current;\n}\nfunction App(props) {\n    _s14();\n    var contextId = props.contextId, setCallbacks = props.setCallbacks, sensors = props.sensors, nonce = props.nonce, dragHandleUsageInstructions = props.dragHandleUsageInstructions;\n    var lazyStoreRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    useStartupValidation();\n    var lastPropsRef = usePrevious(props);\n    var getResponders = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        return createResponders(lastPropsRef.current);\n    }, [\n        lastPropsRef\n    ]);\n    var announce = useAnnouncer(contextId);\n    var dragHandleUsageInstructionsId = useHiddenTextElement({\n        contextId: contextId,\n        text: dragHandleUsageInstructions\n    });\n    var styleMarshal = useStyleMarshal(contextId, nonce);\n    var lazyDispatch = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(action) {\n        getStore(lazyStoreRef).dispatch(action);\n    }, []);\n    var marshalCallbacks = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return (0,redux__WEBPACK_IMPORTED_MODULE_8__.bindActionCreators)({\n            publishWhileDragging: publishWhileDragging,\n            updateDroppableScroll: updateDroppableScroll,\n            updateDroppableIsEnabled: updateDroppableIsEnabled,\n            updateDroppableIsCombineEnabled: updateDroppableIsCombineEnabled,\n            collectionStarting: collectionStarting\n        }, lazyDispatch);\n    }, [\n        lazyDispatch\n    ]);\n    var registry = useRegistry();\n    var dimensionMarshal = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return createDimensionMarshal(registry, marshalCallbacks);\n    }, [\n        registry,\n        marshalCallbacks\n    ]);\n    var autoScroller = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return createAutoScroller((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            scrollWindow: scrollWindow,\n            scrollDroppable: dimensionMarshal.scrollDroppable\n        }, (0,redux__WEBPACK_IMPORTED_MODULE_8__.bindActionCreators)({\n            move: move\n        }, lazyDispatch)));\n    }, [\n        dimensionMarshal.scrollDroppable,\n        lazyDispatch\n    ]);\n    var focusMarshal = useFocusMarshal(contextId);\n    var store = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return createStore({\n            announce: announce,\n            autoScroller: autoScroller,\n            dimensionMarshal: dimensionMarshal,\n            focusMarshal: focusMarshal,\n            getResponders: getResponders,\n            styleMarshal: styleMarshal\n        });\n    }, [\n        announce,\n        autoScroller,\n        dimensionMarshal,\n        focusMarshal,\n        getResponders,\n        styleMarshal\n    ]);\n    if (true) {\n        if (lazyStoreRef.current && lazyStoreRef.current !== store) {\n             true ? warning(\"unexpected store change\") : 0;\n        }\n    }\n    lazyStoreRef.current = store;\n    var tryResetStore = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var current = getStore(lazyStoreRef);\n        var state = current.getState();\n        if (state.phase !== \"IDLE\") {\n            current.dispatch(flush());\n        }\n    }, []);\n    var isDragging = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var state = getStore(lazyStoreRef).getState();\n        return state.isDragging || state.phase === \"DROP_ANIMATING\";\n    }, []);\n    var appCallbacks = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            isDragging: isDragging,\n            tryAbort: tryResetStore\n        };\n    }, [\n        isDragging,\n        tryResetStore\n    ]);\n    setCallbacks(appCallbacks);\n    var getCanLift = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(id) {\n        return canStartDrag(getStore(lazyStoreRef).getState(), id);\n    }, []);\n    var getIsMovementAllowed = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        return isMovementAllowed(getStore(lazyStoreRef).getState());\n    }, []);\n    var appContext = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            marshal: dimensionMarshal,\n            focus: focusMarshal,\n            contextId: contextId,\n            canLift: getCanLift,\n            isMovementAllowed: getIsMovementAllowed,\n            dragHandleUsageInstructionsId: dragHandleUsageInstructionsId,\n            registry: registry\n        };\n    }, [\n        contextId,\n        dimensionMarshal,\n        dragHandleUsageInstructionsId,\n        focusMarshal,\n        getCanLift,\n        getIsMovementAllowed,\n        registry\n    ]);\n    useSensorMarshal({\n        contextId: contextId,\n        store: store,\n        registry: registry,\n        customSensors: sensors,\n        enableDefaultSensors: props.enableDefaultSensors !== false\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        return tryResetStore;\n    }, [\n        tryResetStore\n    ]);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AppContext.Provider, {\n        value: appContext\n    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_redux__WEBPACK_IMPORTED_MODULE_3__.Provider, {\n        context: StoreContext,\n        store: store\n    }, props.children));\n}\n_s14(App, \"+N1fD1siqLgQ2yvJqA4IT60xLXo=\", false, function() {\n    return [\n        useStartupValidation,\n        usePrevious,\n        useAnnouncer,\n        useHiddenTextElement,\n        useStyleMarshal,\n        useRegistry,\n        useFocusMarshal,\n        useSensorMarshal\n    ];\n});\n_c2 = App;\nvar count$1 = 0;\nfunction reset$1() {\n    count$1 = 0;\n}\nfunction useInstanceCount() {\n    _s15();\n    return (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return \"\" + count$1++;\n    }, []);\n}\n_s15(useInstanceCount, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nfunction resetServerContext() {\n    reset$1();\n    reset();\n}\nfunction DragDropContext(props) {\n    _s16();\n    var contextId = useInstanceCount();\n    var dragHandleUsageInstructions = props.dragHandleUsageInstructions || preset.dragHandleUsageInstructions;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ErrorBoundary, null, function(setCallbacks) {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(App, {\n            nonce: props.nonce,\n            contextId: contextId,\n            setCallbacks: setCallbacks,\n            dragHandleUsageInstructions: dragHandleUsageInstructions,\n            enableDefaultSensors: props.enableDefaultSensors,\n            sensors: props.sensors,\n            onBeforeCapture: props.onBeforeCapture,\n            onBeforeDragStart: props.onBeforeDragStart,\n            onDragStart: props.onDragStart,\n            onDragUpdate: props.onDragUpdate,\n            onDragEnd: props.onDragEnd\n        }, props.children);\n    });\n}\n_s16(DragDropContext, \"NjnW5p4SLvypmBCyIDkPXFAbC4U=\", false, function() {\n    return [\n        useInstanceCount\n    ];\n});\n_c3 = DragDropContext;\nvar isEqual$1 = function isEqual(base) {\n    return function(value) {\n        return base === value;\n    };\n};\nvar isScroll = isEqual$1(\"scroll\");\nvar isAuto = isEqual$1(\"auto\");\nvar isVisible$1 = isEqual$1(\"visible\");\nvar isEither = function isEither(overflow, fn) {\n    return fn(overflow.overflowX) || fn(overflow.overflowY);\n};\nvar isBoth = function isBoth(overflow, fn) {\n    return fn(overflow.overflowX) && fn(overflow.overflowY);\n};\nvar isElementScrollable = function isElementScrollable(el) {\n    var style = window.getComputedStyle(el);\n    var overflow = {\n        overflowX: style.overflowX,\n        overflowY: style.overflowY\n    };\n    return isEither(overflow, isScroll) || isEither(overflow, isAuto);\n};\nvar isBodyScrollable = function isBodyScrollable() {\n    if (false) {}\n    var body = getBodyElement();\n    var html = document.documentElement;\n    !html ?  true ? invariant(false) : 0 : void 0;\n    if (!isElementScrollable(body)) {\n        return false;\n    }\n    var htmlStyle = window.getComputedStyle(html);\n    var htmlOverflow = {\n        overflowX: htmlStyle.overflowX,\n        overflowY: htmlStyle.overflowY\n    };\n    if (isBoth(htmlOverflow, isVisible$1)) {\n        return false;\n    }\n     true ? warning(\"\\n    We have detected that your <body> element might be a scroll container.\\n    We have found no reliable way of detecting whether the <body> element is a scroll container.\\n    Under most circumstances a <body> scroll bar will be on the <html> element (document.documentElement)\\n\\n    Because we cannot determine if the <body> is a scroll container, and generally it is not one,\\n    we will be treating the <body> as *not* a scroll container\\n\\n    More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/how-we-detect-scroll-containers.md\\n  \") : 0;\n    return false;\n};\nvar getClosestScrollable = function getClosestScrollable(el) {\n    if (el == null) {\n        return null;\n    }\n    if (el === document.body) {\n        return isBodyScrollable() ? el : null;\n    }\n    if (el === document.documentElement) {\n        return null;\n    }\n    if (!isElementScrollable(el)) {\n        return getClosestScrollable(el.parentElement);\n    }\n    return el;\n};\nvar checkForNestedScrollContainers = function(scrollable) {\n    if (!scrollable) {\n        return;\n    }\n    var anotherScrollParent = getClosestScrollable(scrollable.parentElement);\n    if (!anotherScrollParent) {\n        return;\n    }\n     true ? warning(\"\\n    Droppable: unsupported nested scroll container detected.\\n    A Droppable can only have one scroll parent (which can be itself)\\n    Nested scroll containers are currently not supported.\\n\\n    We hope to support nested scroll containers soon: https://github.com/atlassian/react-beautiful-dnd/issues/131\\n  \") : 0;\n};\nvar getScroll$1 = function(el) {\n    return {\n        x: el.scrollLeft,\n        y: el.scrollTop\n    };\n};\nvar getIsFixed = function getIsFixed(el) {\n    if (!el) {\n        return false;\n    }\n    var style = window.getComputedStyle(el);\n    if (style.position === \"fixed\") {\n        return true;\n    }\n    return getIsFixed(el.parentElement);\n};\nvar getEnv = function(start) {\n    var closestScrollable = getClosestScrollable(start);\n    var isFixedOnPage = getIsFixed(start);\n    return {\n        closestScrollable: closestScrollable,\n        isFixedOnPage: isFixedOnPage\n    };\n};\nvar getDroppableDimension = function(_ref) {\n    var descriptor = _ref.descriptor, isEnabled = _ref.isEnabled, isCombineEnabled = _ref.isCombineEnabled, isFixedOnPage = _ref.isFixedOnPage, direction = _ref.direction, client = _ref.client, page = _ref.page, closest = _ref.closest;\n    var frame = function() {\n        if (!closest) {\n            return null;\n        }\n        var scrollSize = closest.scrollSize, frameClient = closest.client;\n        var maxScroll = getMaxScroll({\n            scrollHeight: scrollSize.scrollHeight,\n            scrollWidth: scrollSize.scrollWidth,\n            height: frameClient.paddingBox.height,\n            width: frameClient.paddingBox.width\n        });\n        return {\n            pageMarginBox: closest.page.marginBox,\n            frameClient: frameClient,\n            scrollSize: scrollSize,\n            shouldClipSubject: closest.shouldClipSubject,\n            scroll: {\n                initial: closest.scroll,\n                current: closest.scroll,\n                max: maxScroll,\n                diff: {\n                    value: origin,\n                    displacement: origin\n                }\n            }\n        };\n    }();\n    var axis = direction === \"vertical\" ? vertical : horizontal;\n    var subject = getSubject({\n        page: page,\n        withPlaceholder: null,\n        axis: axis,\n        frame: frame\n    });\n    var dimension = {\n        descriptor: descriptor,\n        isCombineEnabled: isCombineEnabled,\n        isFixedOnPage: isFixedOnPage,\n        axis: axis,\n        isEnabled: isEnabled,\n        client: client,\n        page: page,\n        frame: frame,\n        subject: subject\n    };\n    return dimension;\n};\nvar getClient = function getClient(targetRef, closestScrollable) {\n    var base = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getBox)(targetRef);\n    if (!closestScrollable) {\n        return base;\n    }\n    if (targetRef !== closestScrollable) {\n        return base;\n    }\n    var top = base.paddingBox.top - closestScrollable.scrollTop;\n    var left = base.paddingBox.left - closestScrollable.scrollLeft;\n    var bottom = top + closestScrollable.scrollHeight;\n    var right = left + closestScrollable.scrollWidth;\n    var paddingBox = {\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left\n    };\n    var borderBox = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.expand)(paddingBox, base.border);\n    var client = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.createBox)({\n        borderBox: borderBox,\n        margin: base.margin,\n        border: base.border,\n        padding: base.padding\n    });\n    return client;\n};\nvar getDimension = function(_ref) {\n    var ref = _ref.ref, descriptor = _ref.descriptor, env = _ref.env, windowScroll = _ref.windowScroll, direction = _ref.direction, isDropDisabled = _ref.isDropDisabled, isCombineEnabled = _ref.isCombineEnabled, shouldClipSubject = _ref.shouldClipSubject;\n    var closestScrollable = env.closestScrollable;\n    var client = getClient(ref, closestScrollable);\n    var page = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.withScroll)(client, windowScroll);\n    var closest = function() {\n        if (!closestScrollable) {\n            return null;\n        }\n        var frameClient = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.getBox)(closestScrollable);\n        var scrollSize = {\n            scrollHeight: closestScrollable.scrollHeight,\n            scrollWidth: closestScrollable.scrollWidth\n        };\n        return {\n            client: frameClient,\n            page: (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.withScroll)(frameClient, windowScroll),\n            scroll: getScroll$1(closestScrollable),\n            scrollSize: scrollSize,\n            shouldClipSubject: shouldClipSubject\n        };\n    }();\n    var dimension = getDroppableDimension({\n        descriptor: descriptor,\n        isEnabled: !isDropDisabled,\n        isCombineEnabled: isCombineEnabled,\n        isFixedOnPage: env.isFixedOnPage,\n        direction: direction,\n        client: client,\n        page: page,\n        closest: closest\n    });\n    return dimension;\n};\nvar immediate = {\n    passive: false\n};\nvar delayed = {\n    passive: true\n};\nvar getListenerOptions = function(options) {\n    return options.shouldPublishImmediately ? immediate : delayed;\n};\nfunction useRequiredContext(Context) {\n    _s17();\n    var result = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(Context);\n    !result ?  true ? invariant(false, \"Could not find required context\") : 0 : void 0;\n    return result;\n}\n_s17(useRequiredContext, \"HahYRy8f1zqsDZ6pn7T0ewWK+hE=\");\nvar getClosestScrollableFromDrag = function getClosestScrollableFromDrag(dragging) {\n    return dragging && dragging.env.closestScrollable || null;\n};\nfunction useDroppablePublisher(args) {\n    _s18();\n    var whileDraggingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var appContext = useRequiredContext(AppContext);\n    var uniqueId = useUniqueId(\"droppable\");\n    var registry = appContext.registry, marshal = appContext.marshal;\n    var previousRef = usePrevious(args);\n    var descriptor = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            id: args.droppableId,\n            type: args.type,\n            mode: args.mode\n        };\n    }, [\n        args.droppableId,\n        args.mode,\n        args.type\n    ]);\n    var publishedDescriptorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(descriptor);\n    var memoizedUpdateScroll = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(x, y) {\n            !whileDraggingRef.current ?  true ? invariant(false, \"Can only update scroll when dragging\") : 0 : void 0;\n            var scroll = {\n                x: x,\n                y: y\n            };\n            marshal.updateDroppableScroll(descriptor.id, scroll);\n        });\n    }, [\n        descriptor.id,\n        marshal\n    ]);\n    var getClosestScroll = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var dragging = whileDraggingRef.current;\n        if (!dragging || !dragging.env.closestScrollable) {\n            return origin;\n        }\n        return getScroll$1(dragging.env.closestScrollable);\n    }, []);\n    var updateScroll = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var scroll = getClosestScroll();\n        memoizedUpdateScroll(scroll.x, scroll.y);\n    }, [\n        getClosestScroll,\n        memoizedUpdateScroll\n    ]);\n    var scheduleScrollUpdate = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return (0,raf_schd__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(updateScroll);\n    }, [\n        updateScroll\n    ]);\n    var onClosestScroll = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var dragging = whileDraggingRef.current;\n        var closest = getClosestScrollableFromDrag(dragging);\n        !(dragging && closest) ?  true ? invariant(false, \"Could not find scroll options while scrolling\") : 0 : void 0;\n        var options = dragging.scrollOptions;\n        if (options.shouldPublishImmediately) {\n            updateScroll();\n            return;\n        }\n        scheduleScrollUpdate();\n    }, [\n        scheduleScrollUpdate,\n        updateScroll\n    ]);\n    var getDimensionAndWatchScroll = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(windowScroll, options) {\n        !!whileDraggingRef.current ?  true ? invariant(false, \"Cannot collect a droppable while a drag is occurring\") : 0 : void 0;\n        var previous = previousRef.current;\n        var ref = previous.getDroppableRef();\n        !ref ?  true ? invariant(false, \"Cannot collect without a droppable ref\") : 0 : void 0;\n        var env = getEnv(ref);\n        var dragging = {\n            ref: ref,\n            descriptor: descriptor,\n            env: env,\n            scrollOptions: options\n        };\n        whileDraggingRef.current = dragging;\n        var dimension = getDimension({\n            ref: ref,\n            descriptor: descriptor,\n            env: env,\n            windowScroll: windowScroll,\n            direction: previous.direction,\n            isDropDisabled: previous.isDropDisabled,\n            isCombineEnabled: previous.isCombineEnabled,\n            shouldClipSubject: !previous.ignoreContainerClipping\n        });\n        var scrollable = env.closestScrollable;\n        if (scrollable) {\n            scrollable.setAttribute(scrollContainer.contextId, appContext.contextId);\n            scrollable.addEventListener(\"scroll\", onClosestScroll, getListenerOptions(dragging.scrollOptions));\n            if (true) {\n                checkForNestedScrollContainers(scrollable);\n            }\n        }\n        return dimension;\n    }, [\n        appContext.contextId,\n        descriptor,\n        onClosestScroll,\n        previousRef\n    ]);\n    var getScrollWhileDragging = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var dragging = whileDraggingRef.current;\n        var closest = getClosestScrollableFromDrag(dragging);\n        !(dragging && closest) ?  true ? invariant(false, \"Can only recollect Droppable client for Droppables that have a scroll container\") : 0 : void 0;\n        return getScroll$1(closest);\n    }, []);\n    var dragStopped = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        var dragging = whileDraggingRef.current;\n        !dragging ?  true ? invariant(false, \"Cannot stop drag when no active drag\") : 0 : void 0;\n        var closest = getClosestScrollableFromDrag(dragging);\n        whileDraggingRef.current = null;\n        if (!closest) {\n            return;\n        }\n        scheduleScrollUpdate.cancel();\n        closest.removeAttribute(scrollContainer.contextId);\n        closest.removeEventListener(\"scroll\", onClosestScroll, getListenerOptions(dragging.scrollOptions));\n    }, [\n        onClosestScroll,\n        scheduleScrollUpdate\n    ]);\n    var scroll = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(change) {\n        var dragging = whileDraggingRef.current;\n        !dragging ?  true ? invariant(false, \"Cannot scroll when there is no drag\") : 0 : void 0;\n        var closest = getClosestScrollableFromDrag(dragging);\n        !closest ?  true ? invariant(false, \"Cannot scroll a droppable with no closest scrollable\") : 0 : void 0;\n        closest.scrollTop += change.y;\n        closest.scrollLeft += change.x;\n    }, []);\n    var callbacks = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            getDimensionAndWatchScroll: getDimensionAndWatchScroll,\n            getScrollWhileDragging: getScrollWhileDragging,\n            dragStopped: dragStopped,\n            scroll: scroll\n        };\n    }, [\n        dragStopped,\n        getDimensionAndWatchScroll,\n        getScrollWhileDragging,\n        scroll\n    ]);\n    var entry = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            uniqueId: uniqueId,\n            descriptor: descriptor,\n            callbacks: callbacks\n        };\n    }, [\n        callbacks,\n        descriptor,\n        uniqueId\n    ]);\n    useIsomorphicLayoutEffect(function() {\n        publishedDescriptorRef.current = entry.descriptor;\n        registry.droppable.register(entry);\n        return function() {\n            if (whileDraggingRef.current) {\n                 true ? warning(\"Unsupported: changing the droppableId or type of a Droppable during a drag\") : 0;\n                dragStopped();\n            }\n            registry.droppable.unregister(entry);\n        };\n    }, [\n        callbacks,\n        descriptor,\n        dragStopped,\n        entry,\n        marshal,\n        registry.droppable\n    ]);\n    useIsomorphicLayoutEffect(function() {\n        if (!whileDraggingRef.current) {\n            return;\n        }\n        marshal.updateDroppableIsEnabled(publishedDescriptorRef.current.id, !args.isDropDisabled);\n    }, [\n        args.isDropDisabled,\n        marshal\n    ]);\n    useIsomorphicLayoutEffect(function() {\n        if (!whileDraggingRef.current) {\n            return;\n        }\n        marshal.updateDroppableIsCombineEnabled(publishedDescriptorRef.current.id, args.isCombineEnabled);\n    }, [\n        args.isCombineEnabled,\n        marshal\n    ]);\n}\n_s18(useDroppablePublisher, \"jWZ8pz322g5ARfcHAedEf6a5vHM=\", false, function() {\n    return [\n        useRequiredContext,\n        useUniqueId,\n        usePrevious,\n        useIsomorphicLayoutEffect,\n        useIsomorphicLayoutEffect,\n        useIsomorphicLayoutEffect\n    ];\n});\nfunction noop$2() {}\nvar empty = {\n    width: 0,\n    height: 0,\n    margin: noSpacing\n};\nvar getSize = function getSize(_ref) {\n    var isAnimatingOpenOnMount = _ref.isAnimatingOpenOnMount, placeholder = _ref.placeholder, animate = _ref.animate;\n    if (isAnimatingOpenOnMount) {\n        return empty;\n    }\n    if (animate === \"close\") {\n        return empty;\n    }\n    return {\n        height: placeholder.client.borderBox.height,\n        width: placeholder.client.borderBox.width,\n        margin: placeholder.client.margin\n    };\n};\nvar getStyle = function getStyle(_ref2) {\n    var isAnimatingOpenOnMount = _ref2.isAnimatingOpenOnMount, placeholder = _ref2.placeholder, animate = _ref2.animate;\n    var size = getSize({\n        isAnimatingOpenOnMount: isAnimatingOpenOnMount,\n        placeholder: placeholder,\n        animate: animate\n    });\n    return {\n        display: placeholder.display,\n        boxSizing: \"border-box\",\n        width: size.width,\n        height: size.height,\n        marginTop: size.margin.top,\n        marginRight: size.margin.right,\n        marginBottom: size.margin.bottom,\n        marginLeft: size.margin.left,\n        flexShrink: \"0\",\n        flexGrow: \"0\",\n        pointerEvents: \"none\",\n        transition: animate !== \"none\" ? transitions.placeholder : null\n    };\n};\nfunction Placeholder(props) {\n    _s19();\n    var animateOpenTimerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var tryClearAnimateOpenTimer = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        if (!animateOpenTimerRef.current) {\n            return;\n        }\n        clearTimeout(animateOpenTimerRef.current);\n        animateOpenTimerRef.current = null;\n    }, []);\n    var animate = props.animate, onTransitionEnd = props.onTransitionEnd, onClose = props.onClose, contextId = props.contextId;\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.animate === \"open\"), isAnimatingOpenOnMount = _useState[0], setIsAnimatingOpenOnMount = _useState[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (!isAnimatingOpenOnMount) {\n            return noop$2;\n        }\n        if (animate !== \"open\") {\n            tryClearAnimateOpenTimer();\n            setIsAnimatingOpenOnMount(false);\n            return noop$2;\n        }\n        if (animateOpenTimerRef.current) {\n            return noop$2;\n        }\n        animateOpenTimerRef.current = setTimeout(function() {\n            animateOpenTimerRef.current = null;\n            setIsAnimatingOpenOnMount(false);\n        });\n        return tryClearAnimateOpenTimer;\n    }, [\n        animate,\n        isAnimatingOpenOnMount,\n        tryClearAnimateOpenTimer\n    ]);\n    var onSizeChangeEnd = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(event) {\n        if (event.propertyName !== \"height\") {\n            return;\n        }\n        onTransitionEnd();\n        if (animate === \"close\") {\n            onClose();\n        }\n    }, [\n        animate,\n        onClose,\n        onTransitionEnd\n    ]);\n    var style = getStyle({\n        isAnimatingOpenOnMount: isAnimatingOpenOnMount,\n        animate: props.animate,\n        placeholder: props.placeholder\n    });\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(props.placeholder.tagName, {\n        style: style,\n        \"data-rbd-placeholder-context-id\": contextId,\n        onTransitionEnd: onSizeChangeEnd,\n        ref: props.innerRef\n    });\n}\n_s19(Placeholder, \"asoh0abi8uGdifVWdEuQnDTdzmE=\");\n_c4 = Placeholder;\nvar Placeholder$1 = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().memo(Placeholder);\n_c5 = Placeholder$1;\nvar DroppableContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nfunction checkIsValidInnerRef(el) {\n    !(el && isHtmlElement(el)) ?  true ? invariant(false, \"\\n    provided.innerRef has not been provided with a HTMLElement.\\n\\n    You can find a guide on using the innerRef callback functions at:\\n    https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/guides/using-inner-ref.md\\n  \") : 0 : void 0;\n}\nfunction isBoolean(value) {\n    return typeof value === \"boolean\";\n}\nfunction runChecks(args, checks) {\n    checks.forEach(function(check) {\n        return check(args);\n    });\n}\nvar shared = [\n    function required(_ref) {\n        var props = _ref.props;\n        !props.droppableId ?  true ? invariant(false, \"A Droppable requires a droppableId prop\") : 0 : void 0;\n        !(typeof props.droppableId === \"string\") ?  true ? invariant(false, \"A Droppable requires a [string] droppableId. Provided: [\" + typeof props.droppableId + \"]\") : 0 : void 0;\n    },\n    function _boolean(_ref2) {\n        var props = _ref2.props;\n        !isBoolean(props.isDropDisabled) ?  true ? invariant(false, \"isDropDisabled must be a boolean\") : 0 : void 0;\n        !isBoolean(props.isCombineEnabled) ?  true ? invariant(false, \"isCombineEnabled must be a boolean\") : 0 : void 0;\n        !isBoolean(props.ignoreContainerClipping) ?  true ? invariant(false, \"ignoreContainerClipping must be a boolean\") : 0 : void 0;\n    },\n    function ref(_ref3) {\n        var getDroppableRef = _ref3.getDroppableRef;\n        checkIsValidInnerRef(getDroppableRef());\n    }\n];\nvar standard = [\n    function placeholder(_ref4) {\n        var props = _ref4.props, getPlaceholderRef = _ref4.getPlaceholderRef;\n        if (!props.placeholder) {\n            return;\n        }\n        var ref = getPlaceholderRef();\n        if (ref) {\n            return;\n        }\n         true ? warning('\\n      Droppable setup issue [droppableId: \"' + props.droppableId + '\"]:\\n      DroppableProvided > placeholder could not be found.\\n\\n      Please be sure to add the {provided.placeholder} React Node as a child of your Droppable.\\n      More information: https://github.com/atlassian/react-beautiful-dnd/blob/master/docs/api/droppable.md\\n    ') : 0;\n    }\n];\nvar virtual = [\n    function hasClone(_ref5) {\n        var props = _ref5.props;\n        !props.renderClone ?  true ? invariant(false, \"Must provide a clone render function (renderClone) for virtual lists\") : 0 : void 0;\n    },\n    function hasNoPlaceholder(_ref6) {\n        var getPlaceholderRef = _ref6.getPlaceholderRef;\n        !!getPlaceholderRef() ?  true ? invariant(false, \"Expected virtual list to not have a placeholder\") : 0 : void 0;\n    }\n];\nfunction useValidation(args) {\n    _s20();\n    useDevSetupWarning(function() {\n        runChecks(args, shared);\n        if (args.props.mode === \"standard\") {\n            runChecks(args, standard);\n        }\n        if (args.props.mode === \"virtual\") {\n            runChecks(args, virtual);\n        }\n    });\n}\n_s20(useValidation, \"Ozwf0oC895FtbHip1ADL8W5P3Sw=\", false, function() {\n    return [\n        useDevSetupWarning\n    ];\n});\nvar AnimateInOut = function(_React$PureComponent) {\n    (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(AnimateInOut, _React$PureComponent);\n    function AnimateInOut() {\n        var _this;\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this = _React$PureComponent.call.apply(_React$PureComponent, [\n            this\n        ].concat(args)) || this;\n        _this.state = {\n            isVisible: Boolean(_this.props.on),\n            data: _this.props.on,\n            animate: _this.props.shouldAnimate && _this.props.on ? \"open\" : \"none\"\n        };\n        _this.onClose = function() {\n            if (_this.state.animate !== \"close\") {\n                return;\n            }\n            _this.setState({\n                isVisible: false\n            });\n        };\n        return _this;\n    }\n    AnimateInOut.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n        if (!props.shouldAnimate) {\n            return {\n                isVisible: Boolean(props.on),\n                data: props.on,\n                animate: \"none\"\n            };\n        }\n        if (props.on) {\n            return {\n                isVisible: true,\n                data: props.on,\n                animate: \"open\"\n            };\n        }\n        if (state.isVisible) {\n            return {\n                isVisible: true,\n                data: state.data,\n                animate: \"close\"\n            };\n        }\n        return {\n            isVisible: false,\n            animate: \"close\",\n            data: null\n        };\n    };\n    var _proto = AnimateInOut.prototype;\n    _proto.render = function render() {\n        if (!this.state.isVisible) {\n            return null;\n        }\n        var provided = {\n            onClose: this.onClose,\n            data: this.state.data,\n            animate: this.state.animate\n        };\n        return this.props.children(provided);\n    };\n    return AnimateInOut;\n}((react__WEBPACK_IMPORTED_MODULE_0___default().PureComponent));\n_c6 = AnimateInOut;\nvar zIndexOptions = {\n    dragging: 5000,\n    dropAnimating: 4500\n};\nvar getDraggingTransition = function getDraggingTransition(shouldAnimateDragMovement, dropping) {\n    if (dropping) {\n        return transitions.drop(dropping.duration);\n    }\n    if (shouldAnimateDragMovement) {\n        return transitions.snap;\n    }\n    return transitions.fluid;\n};\nvar getDraggingOpacity = function getDraggingOpacity(isCombining, isDropAnimating) {\n    if (!isCombining) {\n        return null;\n    }\n    return isDropAnimating ? combine.opacity.drop : combine.opacity.combining;\n};\nvar getShouldDraggingAnimate = function getShouldDraggingAnimate(dragging) {\n    if (dragging.forceShouldAnimate != null) {\n        return dragging.forceShouldAnimate;\n    }\n    return dragging.mode === \"SNAP\";\n};\nfunction getDraggingStyle(dragging) {\n    var dimension = dragging.dimension;\n    var box = dimension.client;\n    var offset = dragging.offset, combineWith = dragging.combineWith, dropping = dragging.dropping;\n    var isCombining = Boolean(combineWith);\n    var shouldAnimate = getShouldDraggingAnimate(dragging);\n    var isDropAnimating = Boolean(dropping);\n    var transform = isDropAnimating ? transforms.drop(offset, isCombining) : transforms.moveTo(offset);\n    var style = {\n        position: \"fixed\",\n        top: box.marginBox.top,\n        left: box.marginBox.left,\n        boxSizing: \"border-box\",\n        width: box.borderBox.width,\n        height: box.borderBox.height,\n        transition: getDraggingTransition(shouldAnimate, dropping),\n        transform: transform,\n        opacity: getDraggingOpacity(isCombining, isDropAnimating),\n        zIndex: isDropAnimating ? zIndexOptions.dropAnimating : zIndexOptions.dragging,\n        pointerEvents: \"none\"\n    };\n    return style;\n}\nfunction getSecondaryStyle(secondary) {\n    return {\n        transform: transforms.moveTo(secondary.offset),\n        transition: secondary.shouldAnimateDisplacement ? null : \"none\"\n    };\n}\nfunction getStyle$1(mapped) {\n    return mapped.type === \"DRAGGING\" ? getDraggingStyle(mapped) : getSecondaryStyle(mapped);\n}\nfunction getDimension$1(descriptor, el, windowScroll) {\n    if (windowScroll === void 0) {\n        windowScroll = origin;\n    }\n    var computedStyles = window.getComputedStyle(el);\n    var borderBox = el.getBoundingClientRect();\n    var client = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.calculateBox)(borderBox, computedStyles);\n    var page = (0,css_box_model__WEBPACK_IMPORTED_MODULE_5__.withScroll)(client, windowScroll);\n    var placeholder = {\n        client: client,\n        tagName: el.tagName.toLowerCase(),\n        display: computedStyles.display\n    };\n    var displaceBy = {\n        x: client.marginBox.width,\n        y: client.marginBox.height\n    };\n    var dimension = {\n        descriptor: descriptor,\n        placeholder: placeholder,\n        displaceBy: displaceBy,\n        client: client,\n        page: page\n    };\n    return dimension;\n}\nfunction useDraggablePublisher(args) {\n    _s21();\n    var uniqueId = useUniqueId(\"draggable\");\n    var descriptor = args.descriptor, registry = args.registry, getDraggableRef = args.getDraggableRef, canDragInteractiveElements = args.canDragInteractiveElements, shouldRespectForcePress = args.shouldRespectForcePress, isEnabled = args.isEnabled;\n    var options = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            canDragInteractiveElements: canDragInteractiveElements,\n            shouldRespectForcePress: shouldRespectForcePress,\n            isEnabled: isEnabled\n        };\n    }, [\n        canDragInteractiveElements,\n        isEnabled,\n        shouldRespectForcePress\n    ]);\n    var getDimension = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(windowScroll) {\n        var el = getDraggableRef();\n        !el ?  true ? invariant(false, \"Cannot get dimension when no ref is set\") : 0 : void 0;\n        return getDimension$1(descriptor, el, windowScroll);\n    }, [\n        descriptor,\n        getDraggableRef\n    ]);\n    var entry = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            uniqueId: uniqueId,\n            descriptor: descriptor,\n            options: options,\n            getDimension: getDimension\n        };\n    }, [\n        descriptor,\n        getDimension,\n        options,\n        uniqueId\n    ]);\n    var publishedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(entry);\n    var isFirstPublishRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    useIsomorphicLayoutEffect(function() {\n        registry.draggable.register(publishedRef.current);\n        return function() {\n            return registry.draggable.unregister(publishedRef.current);\n        };\n    }, [\n        registry.draggable\n    ]);\n    useIsomorphicLayoutEffect(function() {\n        if (isFirstPublishRef.current) {\n            isFirstPublishRef.current = false;\n            return;\n        }\n        var last = publishedRef.current;\n        publishedRef.current = entry;\n        registry.draggable.update(entry, last);\n    }, [\n        entry,\n        registry.draggable\n    ]);\n}\n_s21(useDraggablePublisher, \"EkNzt/L1/eqBAKoelpbkR2dosb0=\", false, function() {\n    return [\n        useUniqueId,\n        useIsomorphicLayoutEffect,\n        useIsomorphicLayoutEffect\n    ];\n});\nfunction useValidation$1(props, contextId, getRef) {\n    _s22();\n    useDevSetupWarning(function() {\n        function prefix(id) {\n            return \"Draggable[id: \" + id + \"]: \";\n        }\n        var id = props.draggableId;\n        !id ?  true ? invariant(false, \"Draggable requires a draggableId\") : 0 : void 0;\n        !(typeof id === \"string\") ?  true ? invariant(false, \"Draggable requires a [string] draggableId.\\n      Provided: [type: \" + typeof id + \"] (value: \" + id + \")\") : 0 : void 0;\n        !isInteger(props.index) ?  true ? invariant(false, prefix(id) + \" requires an integer index prop\") : 0 : void 0;\n        if (props.mapped.type === \"DRAGGING\") {\n            return;\n        }\n        checkIsValidInnerRef(getRef());\n        if (props.isEnabled) {\n            !findDragHandle(contextId, id) ?  true ? invariant(false, prefix(id) + \" Unable to find drag handle\") : 0 : void 0;\n        }\n    });\n}\n_s22(useValidation$1, \"Ozwf0oC895FtbHip1ADL8W5P3Sw=\", false, function() {\n    return [\n        useDevSetupWarning\n    ];\n});\nfunction useClonePropValidation(isClone) {\n    _s23();\n    var _s = $RefreshSig$();\n    useDev(_s(function() {\n        _s();\n        var initialRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(isClone);\n        useDevSetupWarning(function() {\n            !(isClone === initialRef.current) ?  true ? invariant(false, \"Draggable isClone prop value changed during component life\") : 0 : void 0;\n        }, [\n            isClone\n        ]);\n    }, \"y4qXocgtRz1aluy1BN3ok8PWCWU=\", false, function() {\n        return [\n            useDevSetupWarning\n        ];\n    }));\n}\n_s23(useClonePropValidation, \"G1DoeZ4Cvc1i6X87o380ZXC8qZU=\", false, function() {\n    return [\n        useDev\n    ];\n});\nfunction preventHtml5Dnd(event) {\n    event.preventDefault();\n}\nfunction Draggable(props) {\n    _s24();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var setRef = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(el) {\n        ref.current = el;\n    }, []);\n    var getRef = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        return ref.current;\n    }, []);\n    var _useRequiredContext = useRequiredContext(AppContext), contextId = _useRequiredContext.contextId, dragHandleUsageInstructionsId = _useRequiredContext.dragHandleUsageInstructionsId, registry = _useRequiredContext.registry;\n    var _useRequiredContext2 = useRequiredContext(DroppableContext), type = _useRequiredContext2.type, droppableId = _useRequiredContext2.droppableId;\n    var descriptor = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            id: props.draggableId,\n            index: props.index,\n            type: type,\n            droppableId: droppableId\n        };\n    }, [\n        props.draggableId,\n        props.index,\n        type,\n        droppableId\n    ]);\n    var children = props.children, draggableId = props.draggableId, isEnabled = props.isEnabled, shouldRespectForcePress = props.shouldRespectForcePress, canDragInteractiveElements = props.canDragInteractiveElements, isClone = props.isClone, mapped = props.mapped, dropAnimationFinishedAction = props.dropAnimationFinished;\n    useValidation$1(props, contextId, getRef);\n    useClonePropValidation(isClone);\n    if (!isClone) {\n        var forPublisher = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n            return {\n                descriptor: descriptor,\n                registry: registry,\n                getDraggableRef: getRef,\n                canDragInteractiveElements: canDragInteractiveElements,\n                shouldRespectForcePress: shouldRespectForcePress,\n                isEnabled: isEnabled\n            };\n        }, [\n            descriptor,\n            registry,\n            getRef,\n            canDragInteractiveElements,\n            shouldRespectForcePress,\n            isEnabled\n        ]);\n        useDraggablePublisher(forPublisher);\n    }\n    var dragHandleProps = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return isEnabled ? {\n            tabIndex: 0,\n            role: \"button\",\n            \"aria-describedby\": dragHandleUsageInstructionsId,\n            \"data-rbd-drag-handle-draggable-id\": draggableId,\n            \"data-rbd-drag-handle-context-id\": contextId,\n            draggable: false,\n            onDragStart: preventHtml5Dnd\n        } : null;\n    }, [\n        contextId,\n        dragHandleUsageInstructionsId,\n        draggableId,\n        isEnabled\n    ]);\n    var onMoveEnd = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(event) {\n        if (mapped.type !== \"DRAGGING\") {\n            return;\n        }\n        if (!mapped.dropping) {\n            return;\n        }\n        if (event.propertyName !== \"transform\") {\n            return;\n        }\n        dropAnimationFinishedAction();\n    }, [\n        dropAnimationFinishedAction,\n        mapped\n    ]);\n    var provided = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        var style = getStyle$1(mapped);\n        var onTransitionEnd = mapped.type === \"DRAGGING\" && mapped.dropping ? onMoveEnd : null;\n        var result = {\n            innerRef: setRef,\n            draggableProps: {\n                \"data-rbd-draggable-context-id\": contextId,\n                \"data-rbd-draggable-id\": draggableId,\n                style: style,\n                onTransitionEnd: onTransitionEnd\n            },\n            dragHandleProps: dragHandleProps\n        };\n        return result;\n    }, [\n        contextId,\n        dragHandleProps,\n        draggableId,\n        mapped,\n        onMoveEnd,\n        setRef\n    ]);\n    var rubric = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            draggableId: descriptor.id,\n            type: descriptor.type,\n            source: {\n                index: descriptor.index,\n                droppableId: descriptor.droppableId\n            }\n        };\n    }, [\n        descriptor.droppableId,\n        descriptor.id,\n        descriptor.index,\n        descriptor.type\n    ]);\n    return children(provided, mapped.snapshot, rubric);\n}\n_s24(Draggable, \"iwro2VjkJalYdKdJ2cNb9jlbXnc=\", false, function() {\n    return [\n        useRequiredContext,\n        useRequiredContext,\n        useRequiredContext,\n        useRequiredContext,\n        useRequiredContext,\n        useRequiredContext,\n        useRequiredContext,\n        useValidation$1,\n        useClonePropValidation\n    ];\n});\n_c7 = Draggable;\nvar isStrictEqual = function(a, b) {\n    return a === b;\n};\nvar whatIsDraggedOverFromResult = function(result) {\n    var combine = result.combine, destination = result.destination;\n    if (destination) {\n        return destination.droppableId;\n    }\n    if (combine) {\n        return combine.droppableId;\n    }\n    return null;\n};\nvar getCombineWithFromResult = function getCombineWithFromResult(result) {\n    return result.combine ? result.combine.draggableId : null;\n};\nvar getCombineWithFromImpact = function getCombineWithFromImpact(impact) {\n    return impact.at && impact.at.type === \"COMBINE\" ? impact.at.combine.draggableId : null;\n};\nfunction getDraggableSelector() {\n    var memoizedOffset = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(x, y) {\n        return {\n            x: x,\n            y: y\n        };\n    });\n    var getMemoizedSnapshot = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(mode, isClone, draggingOver, combineWith, dropping) {\n        return {\n            isDragging: true,\n            isClone: isClone,\n            isDropAnimating: Boolean(dropping),\n            dropAnimation: dropping,\n            mode: mode,\n            draggingOver: draggingOver,\n            combineWith: combineWith,\n            combineTargetFor: null\n        };\n    });\n    var getMemoizedProps = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(offset, mode, dimension, isClone, draggingOver, combineWith, forceShouldAnimate) {\n        return {\n            mapped: {\n                type: \"DRAGGING\",\n                dropping: null,\n                draggingOver: draggingOver,\n                combineWith: combineWith,\n                mode: mode,\n                offset: offset,\n                dimension: dimension,\n                forceShouldAnimate: forceShouldAnimate,\n                snapshot: getMemoizedSnapshot(mode, isClone, draggingOver, combineWith, null)\n            }\n        };\n    });\n    var selector = function selector(state, ownProps) {\n        if (state.isDragging) {\n            if (state.critical.draggable.id !== ownProps.draggableId) {\n                return null;\n            }\n            var offset = state.current.client.offset;\n            var dimension = state.dimensions.draggables[ownProps.draggableId];\n            var draggingOver = whatIsDraggedOver(state.impact);\n            var combineWith = getCombineWithFromImpact(state.impact);\n            var forceShouldAnimate = state.forceShouldAnimate;\n            return getMemoizedProps(memoizedOffset(offset.x, offset.y), state.movementMode, dimension, ownProps.isClone, draggingOver, combineWith, forceShouldAnimate);\n        }\n        if (state.phase === \"DROP_ANIMATING\") {\n            var completed = state.completed;\n            if (completed.result.draggableId !== ownProps.draggableId) {\n                return null;\n            }\n            var isClone = ownProps.isClone;\n            var _dimension = state.dimensions.draggables[ownProps.draggableId];\n            var result = completed.result;\n            var mode = result.mode;\n            var _draggingOver = whatIsDraggedOverFromResult(result);\n            var _combineWith = getCombineWithFromResult(result);\n            var duration = state.dropDuration;\n            var dropping = {\n                duration: duration,\n                curve: curves.drop,\n                moveTo: state.newHomeClientOffset,\n                opacity: _combineWith ? combine.opacity.drop : null,\n                scale: _combineWith ? combine.scale.drop : null\n            };\n            return {\n                mapped: {\n                    type: \"DRAGGING\",\n                    offset: state.newHomeClientOffset,\n                    dimension: _dimension,\n                    dropping: dropping,\n                    draggingOver: _draggingOver,\n                    combineWith: _combineWith,\n                    mode: mode,\n                    forceShouldAnimate: null,\n                    snapshot: getMemoizedSnapshot(mode, isClone, _draggingOver, _combineWith, dropping)\n                }\n            };\n        }\n        return null;\n    };\n    return selector;\n}\nfunction getSecondarySnapshot(combineTargetFor) {\n    return {\n        isDragging: false,\n        isDropAnimating: false,\n        isClone: false,\n        dropAnimation: null,\n        mode: null,\n        draggingOver: null,\n        combineTargetFor: combineTargetFor,\n        combineWith: null\n    };\n}\nvar atRest = {\n    mapped: {\n        type: \"SECONDARY\",\n        offset: origin,\n        combineTargetFor: null,\n        shouldAnimateDisplacement: true,\n        snapshot: getSecondarySnapshot(null)\n    }\n};\nfunction getSecondarySelector() {\n    var memoizedOffset = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(x, y) {\n        return {\n            x: x,\n            y: y\n        };\n    });\n    var getMemoizedSnapshot = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(getSecondarySnapshot);\n    var getMemoizedProps = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(offset, combineTargetFor, shouldAnimateDisplacement) {\n        if (combineTargetFor === void 0) {\n            combineTargetFor = null;\n        }\n        return {\n            mapped: {\n                type: \"SECONDARY\",\n                offset: offset,\n                combineTargetFor: combineTargetFor,\n                shouldAnimateDisplacement: shouldAnimateDisplacement,\n                snapshot: getMemoizedSnapshot(combineTargetFor)\n            }\n        };\n    });\n    var getFallback = function getFallback(combineTargetFor) {\n        return combineTargetFor ? getMemoizedProps(origin, combineTargetFor, true) : null;\n    };\n    var getProps = function getProps(ownId, draggingId, impact, afterCritical) {\n        var visualDisplacement = impact.displaced.visible[ownId];\n        var isAfterCriticalInVirtualList = Boolean(afterCritical.inVirtualList && afterCritical.effected[ownId]);\n        var combine = tryGetCombine(impact);\n        var combineTargetFor = combine && combine.draggableId === ownId ? draggingId : null;\n        if (!visualDisplacement) {\n            if (!isAfterCriticalInVirtualList) {\n                return getFallback(combineTargetFor);\n            }\n            if (impact.displaced.invisible[ownId]) {\n                return null;\n            }\n            var change = negate(afterCritical.displacedBy.point);\n            var _offset = memoizedOffset(change.x, change.y);\n            return getMemoizedProps(_offset, combineTargetFor, true);\n        }\n        if (isAfterCriticalInVirtualList) {\n            return getFallback(combineTargetFor);\n        }\n        var displaceBy = impact.displacedBy.point;\n        var offset = memoizedOffset(displaceBy.x, displaceBy.y);\n        return getMemoizedProps(offset, combineTargetFor, visualDisplacement.shouldAnimate);\n    };\n    var selector = function selector(state, ownProps) {\n        if (state.isDragging) {\n            if (state.critical.draggable.id === ownProps.draggableId) {\n                return null;\n            }\n            return getProps(ownProps.draggableId, state.critical.draggable.id, state.impact, state.afterCritical);\n        }\n        if (state.phase === \"DROP_ANIMATING\") {\n            var completed = state.completed;\n            if (completed.result.draggableId === ownProps.draggableId) {\n                return null;\n            }\n            return getProps(ownProps.draggableId, completed.result.draggableId, completed.impact, completed.afterCritical);\n        }\n        return null;\n    };\n    return selector;\n}\nvar makeMapStateToProps = function makeMapStateToProps() {\n    var draggingSelector = getDraggableSelector();\n    var secondarySelector = getSecondarySelector();\n    var selector = function selector(state, ownProps) {\n        return draggingSelector(state, ownProps) || secondarySelector(state, ownProps) || atRest;\n    };\n    return selector;\n};\nvar mapDispatchToProps = {\n    dropAnimationFinished: dropAnimationFinished\n};\nvar ConnectedDraggable = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.connect)(makeMapStateToProps, mapDispatchToProps, null, {\n    context: StoreContext,\n    pure: true,\n    areStatePropsEqual: isStrictEqual\n})(Draggable);\n_c8 = ConnectedDraggable;\nfunction PrivateDraggable(props) {\n    _s25();\n    var droppableContext = useRequiredContext(DroppableContext);\n    var isUsingCloneFor = droppableContext.isUsingCloneFor;\n    if (isUsingCloneFor === props.draggableId && !props.isClone) {\n        return null;\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ConnectedDraggable, props);\n}\n_s25(PrivateDraggable, \"5FP5ycvupsnopeKpT82H9WHMon4=\", false, function() {\n    return [\n        useRequiredContext\n    ];\n});\n_c9 = PrivateDraggable;\nfunction PublicDraggable(props) {\n    var isEnabled = typeof props.isDragDisabled === \"boolean\" ? !props.isDragDisabled : true;\n    var canDragInteractiveElements = Boolean(props.disableInteractiveElementBlocking);\n    var shouldRespectForcePress = Boolean(props.shouldRespectForcePress);\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PrivateDraggable, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, props, {\n        isClone: false,\n        isEnabled: isEnabled,\n        canDragInteractiveElements: canDragInteractiveElements,\n        shouldRespectForcePress: shouldRespectForcePress\n    }));\n}\n_c10 = PublicDraggable;\nfunction Droppable(props) {\n    _s26();\n    var appContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AppContext);\n    !appContext ?  true ? invariant(false, \"Could not find app context\") : 0 : void 0;\n    var contextId = appContext.contextId, isMovementAllowed = appContext.isMovementAllowed;\n    var droppableRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var placeholderRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var children = props.children, droppableId = props.droppableId, type = props.type, mode = props.mode, direction = props.direction, ignoreContainerClipping = props.ignoreContainerClipping, isDropDisabled = props.isDropDisabled, isCombineEnabled = props.isCombineEnabled, snapshot = props.snapshot, useClone = props.useClone, updateViewportMaxScroll = props.updateViewportMaxScroll, getContainerForClone = props.getContainerForClone;\n    var getDroppableRef = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        return droppableRef.current;\n    }, []);\n    var setDroppableRef = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(value) {\n        droppableRef.current = value;\n    }, []);\n    var getPlaceholderRef = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        return placeholderRef.current;\n    }, []);\n    var setPlaceholderRef = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function(value) {\n        placeholderRef.current = value;\n    }, []);\n    useValidation({\n        props: props,\n        getDroppableRef: getDroppableRef,\n        getPlaceholderRef: getPlaceholderRef\n    });\n    var onPlaceholderTransitionEnd = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useCallback)(function() {\n        if (isMovementAllowed()) {\n            updateViewportMaxScroll({\n                maxScroll: getMaxWindowScroll()\n            });\n        }\n    }, [\n        isMovementAllowed,\n        updateViewportMaxScroll\n    ]);\n    useDroppablePublisher({\n        droppableId: droppableId,\n        type: type,\n        mode: mode,\n        direction: direction,\n        isDropDisabled: isDropDisabled,\n        isCombineEnabled: isCombineEnabled,\n        ignoreContainerClipping: ignoreContainerClipping,\n        getDroppableRef: getDroppableRef\n    });\n    var placeholder = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AnimateInOut, {\n        on: props.placeholder,\n        shouldAnimate: props.shouldAnimatePlaceholder\n    }, function(_ref) {\n        var onClose = _ref.onClose, data = _ref.data, animate = _ref.animate;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Placeholder$1, {\n            placeholder: data,\n            onClose: onClose,\n            innerRef: setPlaceholderRef,\n            animate: animate,\n            contextId: contextId,\n            onTransitionEnd: onPlaceholderTransitionEnd\n        });\n    });\n    var provided = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            innerRef: setDroppableRef,\n            placeholder: placeholder,\n            droppableProps: {\n                \"data-rbd-droppable-id\": droppableId,\n                \"data-rbd-droppable-context-id\": contextId\n            }\n        };\n    }, [\n        contextId,\n        droppableId,\n        placeholder,\n        setDroppableRef\n    ]);\n    var isUsingCloneFor = useClone ? useClone.dragging.draggableId : null;\n    var droppableContext = (0,use_memo_one__WEBPACK_IMPORTED_MODULE_9__.useMemo)(function() {\n        return {\n            droppableId: droppableId,\n            type: type,\n            isUsingCloneFor: isUsingCloneFor\n        };\n    }, [\n        droppableId,\n        isUsingCloneFor,\n        type\n    ]);\n    function getClone() {\n        if (!useClone) {\n            return null;\n        }\n        var dragging = useClone.dragging, render = useClone.render;\n        var node = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PrivateDraggable, {\n            draggableId: dragging.draggableId,\n            index: dragging.source.index,\n            isClone: true,\n            isEnabled: true,\n            shouldRespectForcePress: false,\n            canDragInteractiveElements: true\n        }, function(draggableProvided, draggableSnapshot) {\n            return render(draggableProvided, draggableSnapshot, dragging);\n        });\n        return /*#__PURE__*/ react_dom__WEBPACK_IMPORTED_MODULE_4__.createPortal(node, getContainerForClone());\n    }\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DroppableContext.Provider, {\n        value: droppableContext\n    }, children(provided, snapshot), getClone());\n}\n_s26(Droppable, \"Bu98tbSkd/iKDcvZC1F31uf3tYU=\", false, function() {\n    return [\n        useValidation,\n        useDroppablePublisher\n    ];\n});\n_c11 = Droppable;\nvar isMatchingType = function isMatchingType(type, critical) {\n    return type === critical.droppable.type;\n};\nvar getDraggable = function getDraggable(critical, dimensions) {\n    return dimensions.draggables[critical.draggable.id];\n};\nvar makeMapStateToProps$1 = function makeMapStateToProps() {\n    var idleWithAnimation = {\n        placeholder: null,\n        shouldAnimatePlaceholder: true,\n        snapshot: {\n            isDraggingOver: false,\n            draggingOverWith: null,\n            draggingFromThisWith: null,\n            isUsingPlaceholder: false\n        },\n        useClone: null\n    };\n    var idleWithoutAnimation = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, idleWithAnimation, {\n        shouldAnimatePlaceholder: false\n    });\n    var getDraggableRubric = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(descriptor) {\n        return {\n            draggableId: descriptor.id,\n            type: descriptor.type,\n            source: {\n                index: descriptor.index,\n                droppableId: descriptor.droppableId\n            }\n        };\n    });\n    var getMapProps = (0,memoize_one__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(function(id, isEnabled, isDraggingOverForConsumer, isDraggingOverForImpact, dragging, renderClone) {\n        var draggableId = dragging.descriptor.id;\n        var isHome = dragging.descriptor.droppableId === id;\n        if (isHome) {\n            var useClone = renderClone ? {\n                render: renderClone,\n                dragging: getDraggableRubric(dragging.descriptor)\n            } : null;\n            var _snapshot = {\n                isDraggingOver: isDraggingOverForConsumer,\n                draggingOverWith: isDraggingOverForConsumer ? draggableId : null,\n                draggingFromThisWith: draggableId,\n                isUsingPlaceholder: true\n            };\n            return {\n                placeholder: dragging.placeholder,\n                shouldAnimatePlaceholder: false,\n                snapshot: _snapshot,\n                useClone: useClone\n            };\n        }\n        if (!isEnabled) {\n            return idleWithoutAnimation;\n        }\n        if (!isDraggingOverForImpact) {\n            return idleWithAnimation;\n        }\n        var snapshot = {\n            isDraggingOver: isDraggingOverForConsumer,\n            draggingOverWith: draggableId,\n            draggingFromThisWith: null,\n            isUsingPlaceholder: true\n        };\n        return {\n            placeholder: dragging.placeholder,\n            shouldAnimatePlaceholder: true,\n            snapshot: snapshot,\n            useClone: null\n        };\n    });\n    var selector = function selector(state, ownProps) {\n        var id = ownProps.droppableId;\n        var type = ownProps.type;\n        var isEnabled = !ownProps.isDropDisabled;\n        var renderClone = ownProps.renderClone;\n        if (state.isDragging) {\n            var critical = state.critical;\n            if (!isMatchingType(type, critical)) {\n                return idleWithoutAnimation;\n            }\n            var dragging = getDraggable(critical, state.dimensions);\n            var isDraggingOver = whatIsDraggedOver(state.impact) === id;\n            return getMapProps(id, isEnabled, isDraggingOver, isDraggingOver, dragging, renderClone);\n        }\n        if (state.phase === \"DROP_ANIMATING\") {\n            var completed = state.completed;\n            if (!isMatchingType(type, completed.critical)) {\n                return idleWithoutAnimation;\n            }\n            var _dragging = getDraggable(completed.critical, state.dimensions);\n            return getMapProps(id, isEnabled, whatIsDraggedOverFromResult(completed.result) === id, whatIsDraggedOver(completed.impact) === id, _dragging, renderClone);\n        }\n        if (state.phase === \"IDLE\" && state.completed && !state.shouldFlush) {\n            var _completed = state.completed;\n            if (!isMatchingType(type, _completed.critical)) {\n                return idleWithoutAnimation;\n            }\n            var wasOver = whatIsDraggedOver(_completed.impact) === id;\n            var wasCombining = Boolean(_completed.impact.at && _completed.impact.at.type === \"COMBINE\");\n            var isHome = _completed.critical.droppable.id === id;\n            if (wasOver) {\n                return wasCombining ? idleWithAnimation : idleWithoutAnimation;\n            }\n            if (isHome) {\n                return idleWithAnimation;\n            }\n            return idleWithoutAnimation;\n        }\n        return idleWithoutAnimation;\n    };\n    return selector;\n};\nvar mapDispatchToProps$1 = {\n    updateViewportMaxScroll: updateViewportMaxScroll\n};\nfunction getBody() {\n    !document.body ?  true ? invariant(false, \"document.body is not ready\") : 0 : void 0;\n    return document.body;\n}\nvar defaultProps = {\n    mode: \"standard\",\n    type: \"DEFAULT\",\n    direction: \"vertical\",\n    isDropDisabled: false,\n    isCombineEnabled: false,\n    ignoreContainerClipping: false,\n    renderClone: null,\n    getContainerForClone: getBody\n};\nvar ConnectedDroppable = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.connect)(makeMapStateToProps$1, mapDispatchToProps$1, null, {\n    context: StoreContext,\n    pure: true,\n    areStatePropsEqual: isStrictEqual\n})(Droppable);\nConnectedDroppable.defaultProps = defaultProps;\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"RbdInvariant\");\n$RefreshReg$(_c1, \"ErrorBoundary\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"DragDropContext\");\n$RefreshReg$(_c4, \"Placeholder\");\n$RefreshReg$(_c5, \"Placeholder$1\");\n$RefreshReg$(_c6, \"AnimateInOut\");\n$RefreshReg$(_c7, \"Draggable\");\n$RefreshReg$(_c8, \"ConnectedDraggable\");\n$RefreshReg$(_c9, \"PrivateDraggable\");\n$RefreshReg$(_c10, \"PublicDraggable\");\n$RefreshReg$(_c11, \"Droppable\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n        // nor polyfill, then a plain number is used for performance.\n        var hasSymbol = typeof Symbol === \"function\" && Symbol.for;\n        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for(\"react.element\") : 0xeac7;\n        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for(\"react.portal\") : 0xeaca;\n        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for(\"react.fragment\") : 0xeacb;\n        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for(\"react.strict_mode\") : 0xeacc;\n        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for(\"react.profiler\") : 0xead2;\n        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for(\"react.provider\") : 0xeacd;\n        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for(\"react.context\") : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n        // (unstable) APIs that have been removed. Can we remove the symbols?\n        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for(\"react.async_mode\") : 0xeacf;\n        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for(\"react.concurrent_mode\") : 0xeacf;\n        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for(\"react.forward_ref\") : 0xead0;\n        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for(\"react.suspense\") : 0xead1;\n        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for(\"react.suspense_list\") : 0xead8;\n        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for(\"react.memo\") : 0xead3;\n        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for(\"react.lazy\") : 0xead4;\n        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for(\"react.block\") : 0xead9;\n        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for(\"react.fundamental\") : 0xead5;\n        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for(\"react.responder\") : 0xead6;\n        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for(\"react.scope\") : 0xead7;\n        function isValidElementType(type) {\n            return typeof type === \"string\" || typeof type === \"function\" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n            type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === \"object\" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n        }\n        function typeOf(object) {\n            if (typeof object === \"object\" && object !== null) {\n                var $$typeof = object.$$typeof;\n                switch($$typeof){\n                    case REACT_ELEMENT_TYPE:\n                        var type = object.type;\n                        switch(type){\n                            case REACT_ASYNC_MODE_TYPE:\n                            case REACT_CONCURRENT_MODE_TYPE:\n                            case REACT_FRAGMENT_TYPE:\n                            case REACT_PROFILER_TYPE:\n                            case REACT_STRICT_MODE_TYPE:\n                            case REACT_SUSPENSE_TYPE:\n                                return type;\n                            default:\n                                var $$typeofType = type && type.$$typeof;\n                                switch($$typeofType){\n                                    case REACT_CONTEXT_TYPE:\n                                    case REACT_FORWARD_REF_TYPE:\n                                    case REACT_LAZY_TYPE:\n                                    case REACT_MEMO_TYPE:\n                                    case REACT_PROVIDER_TYPE:\n                                        return $$typeofType;\n                                    default:\n                                        return $$typeof;\n                                }\n                        }\n                    case REACT_PORTAL_TYPE:\n                        return $$typeof;\n                }\n            }\n            return undefined;\n        } // AsyncMode is deprecated along with isAsyncMode\n        var AsyncMode = REACT_ASYNC_MODE_TYPE;\n        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n        var ContextConsumer = REACT_CONTEXT_TYPE;\n        var ContextProvider = REACT_PROVIDER_TYPE;\n        var Element = REACT_ELEMENT_TYPE;\n        var ForwardRef = REACT_FORWARD_REF_TYPE;\n        var Fragment = REACT_FRAGMENT_TYPE;\n        var Lazy = REACT_LAZY_TYPE;\n        var Memo = REACT_MEMO_TYPE;\n        var Portal = REACT_PORTAL_TYPE;\n        var Profiler = REACT_PROFILER_TYPE;\n        var StrictMode = REACT_STRICT_MODE_TYPE;\n        var Suspense = REACT_SUSPENSE_TYPE;\n        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n        function isAsyncMode(object) {\n            {\n                if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n                    hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n                    console[\"warn\"](\"The ReactIs.isAsyncMode() alias has been deprecated, \" + \"and will be removed in React 17+. Update your code to use \" + \"ReactIs.isConcurrentMode() instead. It has the exact same API.\");\n                }\n            }\n            return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n        }\n        function isConcurrentMode(object) {\n            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n        }\n        function isContextConsumer(object) {\n            return typeOf(object) === REACT_CONTEXT_TYPE;\n        }\n        function isContextProvider(object) {\n            return typeOf(object) === REACT_PROVIDER_TYPE;\n        }\n        function isElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        function isForwardRef(object) {\n            return typeOf(object) === REACT_FORWARD_REF_TYPE;\n        }\n        function isFragment(object) {\n            return typeOf(object) === REACT_FRAGMENT_TYPE;\n        }\n        function isLazy(object) {\n            return typeOf(object) === REACT_LAZY_TYPE;\n        }\n        function isMemo(object) {\n            return typeOf(object) === REACT_MEMO_TYPE;\n        }\n        function isPortal(object) {\n            return typeOf(object) === REACT_PORTAL_TYPE;\n        }\n        function isProfiler(object) {\n            return typeOf(object) === REACT_PROFILER_TYPE;\n        }\n        function isStrictMode(object) {\n            return typeOf(object) === REACT_STRICT_MODE_TYPE;\n        }\n        function isSuspense(object) {\n            return typeOf(object) === REACT_SUSPENSE_TYPE;\n        }\n        exports.AsyncMode = AsyncMode;\n        exports.ConcurrentMode = ConcurrentMode;\n        exports.ContextConsumer = ContextConsumer;\n        exports.ContextProvider = ContextProvider;\n        exports.Element = Element;\n        exports.ForwardRef = ForwardRef;\n        exports.Fragment = Fragment;\n        exports.Lazy = Lazy;\n        exports.Memo = Memo;\n        exports.Portal = Portal;\n        exports.Profiler = Profiler;\n        exports.StrictMode = StrictMode;\n        exports.Suspense = Suspense;\n        exports.isAsyncMode = isAsyncMode;\n        exports.isConcurrentMode = isConcurrentMode;\n        exports.isContextConsumer = isContextConsumer;\n        exports.isContextProvider = isContextProvider;\n        exports.isElement = isElement;\n        exports.isForwardRef = isForwardRef;\n        exports.isFragment = isFragment;\n        exports.isLazy = isLazy;\n        exports.isMemo = isMemo;\n        exports.isPortal = isPortal;\n        exports.isProfiler = isProfiler;\n        exports.isStrictMode = isStrictMode;\n        exports.isSuspense = isSuspense;\n        exports.isValidElementType = isValidElementType;\n        exports.typeOf = typeOf;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLElBQUlBLEtBQXlCLEVBQWMsRUFFMUMsTUFBTTtJQUNMQyxvSkFBeUI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzP2IzMTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-is/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/components/Context.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/components/Context.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReactReduxContext: function() { return /* binding */ ReactReduxContext; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nvar ReactReduxContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nif (true) {\n    ReactReduxContext.displayName = \"ReactRedux\";\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReactReduxContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL0NvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBQ25CLElBQUlDLG9CQUFvQixXQUFXLEdBQUVELDBEQUFtQixDQUFDLE1BQU07QUFFdEUsSUFBSUcsSUFBeUIsRUFBYztJQUN6Q0Ysa0JBQWtCRyxXQUFXLEdBQUc7QUFDbEM7QUFFQSwrREFBZUgsaUJBQWlCQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL0NvbnRleHQuanM/NGJlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IHZhciBSZWFjdFJlZHV4Q29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBSZWFjdFJlZHV4Q29udGV4dC5kaXNwbGF5TmFtZSA9ICdSZWFjdFJlZHV4Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3RSZWR1eENvbnRleHQ7Il0sIm5hbWVzIjpbIlJlYWN0IiwiUmVhY3RSZWR1eENvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwicHJvY2VzcyIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/components/Provider.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/components/Provider.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ \"(app-pages-browser)/./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Subscription */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js\");\n/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js\");\nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction Provider(_ref) {\n    _s();\n    var store = _ref.store, context = _ref.context, children = _ref.children;\n    var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        var subscription = (0,_utils_Subscription__WEBPACK_IMPORTED_MODULE_2__.createSubscription)(store);\n        return {\n            store: store,\n            subscription: subscription\n        };\n    }, [\n        store\n    ]);\n    var previousState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        return store.getState();\n    }, [\n        store\n    ]);\n    (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(function() {\n        var subscription = contextValue.subscription;\n        subscription.onStateChange = subscription.notifyNestedSubs;\n        subscription.trySubscribe();\n        if (previousState !== store.getState()) {\n            subscription.notifyNestedSubs();\n        }\n        return function() {\n            subscription.tryUnsubscribe();\n            subscription.onStateChange = null;\n        };\n    }, [\n        contextValue,\n        previousState\n    ]);\n    var Context = context || _Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext;\n    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Context.Provider, {\n        value: contextValue\n    }, children);\n}\n_s(Provider, \"UYZUOdaFWZnoeXRb2Yd5sJGEKkk=\", false, function() {\n    return [\n        _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect\n    ];\n});\n_c = Provider;\nif (true) {\n    Provider.propTypes = {\n        store: prop_types__WEBPACK_IMPORTED_MODULE_4___default().shape({\n            subscribe: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,\n            dispatch: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired,\n            getState: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func).isRequired\n        }),\n        context: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),\n        children: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().any)\n    };\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Provider);\nvar _c;\n$RefreshReg$(_c, \"Provider\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF1QztBQUNKO0FBQ1c7QUFDYTtBQUNvQjtBQUUvRSxTQUFTTSxTQUFTQyxJQUFJOztJQUNwQixJQUFJQyxRQUFRRCxLQUFLQyxLQUFLLEVBQ2xCQyxVQUFVRixLQUFLRSxPQUFPLEVBQ3RCQyxXQUFXSCxLQUFLRyxRQUFRO0lBQzVCLElBQUlDLGVBQWVWLDhDQUFPQSxDQUFDO1FBQ3pCLElBQUlXLGVBQWVSLHVFQUFrQkEsQ0FBQ0k7UUFDdEMsT0FBTztZQUNMQSxPQUFPQTtZQUNQSSxjQUFjQTtRQUNoQjtJQUNGLEdBQUc7UUFBQ0o7S0FBTTtJQUNWLElBQUlLLGdCQUFnQlosOENBQU9BLENBQUM7UUFDMUIsT0FBT08sTUFBTU0sUUFBUTtJQUN2QixHQUFHO1FBQUNOO0tBQU07SUFDVkgsMkZBQXlCQSxDQUFDO1FBQ3hCLElBQUlPLGVBQWVELGFBQWFDLFlBQVk7UUFDNUNBLGFBQWFHLGFBQWEsR0FBR0gsYUFBYUksZ0JBQWdCO1FBQzFESixhQUFhSyxZQUFZO1FBRXpCLElBQUlKLGtCQUFrQkwsTUFBTU0sUUFBUSxJQUFJO1lBQ3RDRixhQUFhSSxnQkFBZ0I7UUFDL0I7UUFFQSxPQUFPO1lBQ0xKLGFBQWFNLGNBQWM7WUFDM0JOLGFBQWFHLGFBQWEsR0FBRztRQUMvQjtJQUNGLEdBQUc7UUFBQ0o7UUFBY0U7S0FBYztJQUNoQyxJQUFJTSxVQUFVVixXQUFXTix1REFBaUJBO0lBQzFDLE9BQU8sV0FBVyxHQUFFSCwwREFBbUIsQ0FBQ21CLFFBQVFiLFFBQVEsRUFBRTtRQUN4RGUsT0FBT1Y7SUFDVCxHQUFHRDtBQUNMO0dBaENTSjs7UUFjUEQsdUZBQXlCQTs7O0tBZGxCQztBQWtDVCxJQUFJZ0IsSUFBeUIsRUFBYztJQUN6Q2hCLFNBQVNpQixTQUFTLEdBQUc7UUFDbkJmLE9BQU9OLHVEQUFlLENBQUM7WUFDckJ1QixXQUFXdkIsd0RBQWMsQ0FBQ3lCLFVBQVU7WUFDcENDLFVBQVUxQix3REFBYyxDQUFDeUIsVUFBVTtZQUNuQ2IsVUFBVVosd0RBQWMsQ0FBQ3lCLFVBQVU7UUFDckM7UUFDQWxCLFNBQVNQLDBEQUFnQjtRQUN6QlEsVUFBVVIsdURBQWE7SUFDekI7QUFDRjtBQUVBLCtEQUFlSSxRQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzP2RiYjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL0NvbnRleHQnO1xuaW1wb3J0IHsgY3JlYXRlU3Vic2NyaXB0aW9uIH0gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcblxuZnVuY3Rpb24gUHJvdmlkZXIoX3JlZikge1xuICB2YXIgc3RvcmUgPSBfcmVmLnN0b3JlLFxuICAgICAgY29udGV4dCA9IF9yZWYuY29udGV4dCxcbiAgICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbjtcbiAgdmFyIGNvbnRleHRWYWx1ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdWJzY3JpcHRpb24gPSBjcmVhdGVTdWJzY3JpcHRpb24oc3RvcmUpO1xuICAgIHJldHVybiB7XG4gICAgICBzdG9yZTogc3RvcmUsXG4gICAgICBzdWJzY3JpcHRpb246IHN1YnNjcmlwdGlvblxuICAgIH07XG4gIH0sIFtzdG9yZV0pO1xuICB2YXIgcHJldmlvdXNTdGF0ZSA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBzdG9yZS5nZXRTdGF0ZSgpO1xuICB9LCBbc3RvcmVdKTtcbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IGNvbnRleHRWYWx1ZS5zdWJzY3JpcHRpb247XG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3VicztcbiAgICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7XG5cbiAgICBpZiAocHJldmlvdXNTdGF0ZSAhPT0gc3RvcmUuZ2V0U3RhdGUoKSkge1xuICAgICAgc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSA9IG51bGw7XG4gICAgfTtcbiAgfSwgW2NvbnRleHRWYWx1ZSwgcHJldmlvdXNTdGF0ZV0pO1xuICB2YXIgQ29udGV4dCA9IGNvbnRleHQgfHwgUmVhY3RSZWR1eENvbnRleHQ7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHRWYWx1ZVxuICB9LCBjaGlsZHJlbik7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIFByb3ZpZGVyLnByb3BUeXBlcyA9IHtcbiAgICBzdG9yZTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgIHN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIGRpc3BhdGNoOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgICAgZ2V0U3RhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgICB9KSxcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMub2JqZWN0LFxuICAgIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb3ZpZGVyOyJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZU1lbW8iLCJQcm9wVHlwZXMiLCJSZWFjdFJlZHV4Q29udGV4dCIsImNyZWF0ZVN1YnNjcmlwdGlvbiIsInVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QiLCJQcm92aWRlciIsIl9yZWYiLCJzdG9yZSIsImNvbnRleHQiLCJjaGlsZHJlbiIsImNvbnRleHRWYWx1ZSIsInN1YnNjcmlwdGlvbiIsInByZXZpb3VzU3RhdGUiLCJnZXRTdGF0ZSIsIm9uU3RhdGVDaGFuZ2UiLCJub3RpZnlOZXN0ZWRTdWJzIiwidHJ5U3Vic2NyaWJlIiwidHJ5VW5zdWJzY3JpYmUiLCJDb250ZXh0IiwiY3JlYXRlRWxlbWVudCIsInZhbHVlIiwicHJvY2VzcyIsInByb3BUeXBlcyIsInNoYXBlIiwic3Vic2NyaWJlIiwiZnVuYyIsImlzUmVxdWlyZWQiLCJkaXNwYXRjaCIsIm9iamVjdCIsImFueSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/components/Provider.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/components/connectAdvanced.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/components/connectAdvanced.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ connectAdvanced; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! hoist-non-react-statics */ \"(app-pages-browser)/./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/index.js\");\n/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Subscription */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js\");\n/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js\");\n/* harmony import */ var _Context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\nvar _s = $RefreshSig$();\n\n\nvar _excluded = [\n    \"getDisplayName\",\n    \"methodName\",\n    \"renderCountProp\",\n    \"shouldHandleStateChanges\",\n    \"storeKey\",\n    \"withRef\",\n    \"forwardRef\",\n    \"context\"\n], _excluded2 = [\n    \"reactReduxForwardedRef\"\n];\n\n\n\n\n\n // Define some constant arrays just to avoid re-creating these\nvar EMPTY_ARRAY = [];\nvar NO_SUBSCRIPTION_ARRAY = [\n    null,\n    null\n];\nvar stringifyComponent = function stringifyComponent(Comp) {\n    try {\n        return JSON.stringify(Comp);\n    } catch (err) {\n        return String(Comp);\n    }\n};\nfunction storeStateUpdatesReducer(state, action) {\n    var updateCount = state[1];\n    return [\n        action.payload,\n        updateCount + 1\n    ];\n}\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n    _s();\n    (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__.useIsomorphicLayoutEffect)(function() {\n        return effectFunc.apply(void 0, effectArgs);\n    }, dependencies);\n}\n_s(useIsomorphicLayoutEffectWithArgs, \"Vd+jpwighRca2oU8HoLqd+zm4Bo=\", false, function() {\n    return [\n        _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_6__.useIsomorphicLayoutEffect\n    ];\n});\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, actualChildProps, childPropsFromStoreUpdate, notifyNestedSubs) {\n    // We want to capture the wrapper props and child props we used for later comparisons\n    lastWrapperProps.current = wrapperProps;\n    lastChildProps.current = actualChildProps;\n    renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n    if (childPropsFromStoreUpdate.current) {\n        childPropsFromStoreUpdate.current = null;\n        notifyNestedSubs();\n    }\n}\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, childPropsFromStoreUpdate, notifyNestedSubs, forceComponentUpdateDispatch) {\n    // If we're not subscribed to the store, nothing to do here\n    if (!shouldHandleStateChanges) return; // Capture values for checking if and when this component unmounts\n    var didUnsubscribe = false;\n    var lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n    var checkForUpdates = function checkForUpdates() {\n        if (didUnsubscribe) {\n            // Don't run stale listeners.\n            // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n            return;\n        }\n        var latestStoreState = store.getState();\n        var newChildProps, error;\n        try {\n            // Actually run the selector with the most recent store state and wrapper props\n            // to determine what the child props should be\n            newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n        } catch (e) {\n            error = e;\n            lastThrownError = e;\n        }\n        if (!error) {\n            lastThrownError = null;\n        } // If the child props haven't changed, nothing to do here - cascade the subscription update\n        if (newChildProps === lastChildProps.current) {\n            if (!renderIsScheduled.current) {\n                notifyNestedSubs();\n            }\n        } else {\n            // Save references to the new child props.  Note that we track the \"child props from store update\"\n            // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n            // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n            // forcing another re-render, which we don't want.\n            lastChildProps.current = newChildProps;\n            childPropsFromStoreUpdate.current = newChildProps;\n            renderIsScheduled.current = true; // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render\n            forceComponentUpdateDispatch({\n                type: \"STORE_UPDATED\",\n                payload: {\n                    error: error\n                }\n            });\n        }\n    }; // Actually subscribe to the nearest connected ancestor (or store)\n    subscription.onStateChange = checkForUpdates;\n    subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n    // changed since we began.\n    checkForUpdates();\n    var unsubscribeWrapper = function unsubscribeWrapper() {\n        didUnsubscribe = true;\n        subscription.tryUnsubscribe();\n        subscription.onStateChange = null;\n        if (lastThrownError) {\n            // It's possible that we caught an error due to a bad mapState function, but the\n            // parent re-rendered without this component and we're about to unmount.\n            // This shouldn't happen as long as we do top-down subscriptions correctly, but\n            // if we ever do those wrong, this throw will surface the error in our tests.\n            // In that case, throw the error from here so it doesn't get lost.\n            throw lastThrownError;\n        }\n    };\n    return unsubscribeWrapper;\n}\nvar initStateUpdates = function initStateUpdates() {\n    return [\n        null,\n        0\n    ];\n};\nfunction connectAdvanced(/*\r\n  selectorFactory is a func that is responsible for returning the selector function used to\r\n  compute new props from state, props, and dispatch. For example:\r\n      export default connectAdvanced((dispatch, options) => (state, props) => ({\r\n      thing: state.things[props.thingId],\r\n      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\r\n    }))(YourComponent)\r\n    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\r\n  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\r\n  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\r\n    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\r\n  props. Do not use connectAdvanced directly without memoizing results between calls to your\r\n  selector, otherwise the Connect component will re-render on every state or props change.\r\n*/ selectorFactory, _ref) {\n    if (_ref === void 0) {\n        _ref = {};\n    }\n    var _ref2 = _ref, _ref2$getDisplayName = _ref2.getDisplayName, getDisplayName = _ref2$getDisplayName === void 0 ? function(name) {\n        return \"ConnectAdvanced(\" + name + \")\";\n    } : _ref2$getDisplayName, _ref2$methodName = _ref2.methodName, methodName = _ref2$methodName === void 0 ? \"connectAdvanced\" : _ref2$methodName, _ref2$renderCountProp = _ref2.renderCountProp, renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp, _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges, shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta, _ref2$storeKey = _ref2.storeKey, storeKey = _ref2$storeKey === void 0 ? \"store\" : _ref2$storeKey, _ref2$withRef = _ref2.withRef, withRef = _ref2$withRef === void 0 ? false : _ref2$withRef, _ref2$forwardRef = _ref2.forwardRef, forwardRef = _ref2$forwardRef === void 0 ? false : _ref2$forwardRef, _ref2$context = _ref2.context, context = _ref2$context === void 0 ? _Context__WEBPACK_IMPORTED_MODULE_7__.ReactReduxContext : _ref2$context, connectOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref2, _excluded);\n    if (true) {\n        if (renderCountProp !== undefined) {\n            throw new Error(\"renderCountProp is removed. render counting is built into the latest React Dev Tools profiling extension\");\n        }\n        if (withRef) {\n            throw new Error(\"withRef is removed. To access the wrapped instance, use a ref on the connected component\");\n        }\n        var customStoreWarningMessage = \"To use a custom Redux store for specific components, create a custom React context with \" + \"React.createContext(), and pass the context object to React Redux's Provider and specific components\" + \" like: <Provider context={MyContext}><ConnectedComponent context={MyContext} /></Provider>. \" + \"You may also pass a {context : MyContext} option to connect\";\n        if (storeKey !== \"store\") {\n            throw new Error(\"storeKey has been removed and does not do anything. \" + customStoreWarningMessage);\n        }\n    }\n    var Context = context;\n    return function wrapWithConnect(WrappedComponent) {\n        var _s = $RefreshSig$();\n        if ( true && !(0,react_is__WEBPACK_IMPORTED_MODULE_4__.isValidElementType)(WrappedComponent)) {\n            throw new Error(\"You must pass a component to the function returned by \" + (methodName + \". Instead received \" + stringifyComponent(WrappedComponent)));\n        }\n        var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n        var displayName = getDisplayName(wrappedComponentName);\n        var selectorFactoryOptions = (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, connectOptions, {\n            getDisplayName: getDisplayName,\n            methodName: methodName,\n            renderCountProp: renderCountProp,\n            shouldHandleStateChanges: shouldHandleStateChanges,\n            storeKey: storeKey,\n            displayName: displayName,\n            wrappedComponentName: wrappedComponentName,\n            WrappedComponent: WrappedComponent\n        });\n        var pure = connectOptions.pure;\n        function createChildSelector(store) {\n            return selectorFactory(store.dispatch, selectorFactoryOptions);\n        } // If we aren't running in \"pure\" mode, we don't want to memoize values.\n        // To avoid conditionally calling hooks, we fall back to a tiny wrapper\n        // that just executes the given callback immediately.\n        var usePureOnlyMemo = pure ? react__WEBPACK_IMPORTED_MODULE_3__.useMemo : function(callback) {\n            return callback();\n        };\n        function ConnectFunction(props) {\n            _s();\n            var _useMemo = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function() {\n                // Distinguish between actual \"data\" props that were passed to the wrapper component,\n                // and values needed to control behavior (forwarded refs, alternate context instances).\n                // To maintain the wrapperProps object reference, memoize this destructuring.\n                var reactReduxForwardedRef = props.reactReduxForwardedRef, wrapperProps = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(props, _excluded2);\n                return [\n                    props.context,\n                    reactReduxForwardedRef,\n                    wrapperProps\n                ];\n            }, [\n                props\n            ]), propsContext = _useMemo[0], reactReduxForwardedRef = _useMemo[1], wrapperProps = _useMemo[2];\n            var ContextToUse = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function() {\n                // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n                // Memoize the check that determines which context instance we should use.\n                return propsContext && propsContext.Consumer && (0,react_is__WEBPACK_IMPORTED_MODULE_4__.isContextConsumer)(/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3___default().createElement(propsContext.Consumer, null)) ? propsContext : Context;\n            }, [\n                propsContext,\n                Context\n            ]); // Retrieve the store and ancestor subscription via context, if available\n            var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useContext)(ContextToUse); // The store _must_ exist as either a prop or in context.\n            // We'll check to see if it _looks_ like a Redux store first.\n            // This allows us to pass through a `store` prop that is just a plain value.\n            var didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n            var didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n            if ( true && !didStoreComeFromProps && !didStoreComeFromContext) {\n                throw new Error('Could not find \"store\" in the context of ' + ('\"' + displayName + '\". Either wrap the root component in a <Provider>, ') + \"or pass a custom React context provider to <Provider> and the corresponding \" + (\"React context consumer to \" + displayName + \" in connect options.\"));\n            } // Based on the previous check, one of these must be true\n            var store = didStoreComeFromProps ? props.store : contextValue.store;\n            var childPropsSelector = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function() {\n                // The child props selector needs the store reference as an input.\n                // Re-create this selector whenever the store changes.\n                return createChildSelector(store);\n            }, [\n                store\n            ]);\n            var _useMemo2 = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function() {\n                if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n                // connected to the store via props shouldn't use subscription from context, or vice versa.\n                // This Subscription's source should match where store came from: props vs. context. A component\n                // connected to the store via props shouldn't use subscription from context, or vice versa.\n                var subscription = (0,_utils_Subscription__WEBPACK_IMPORTED_MODULE_5__.createSubscription)(store, didStoreComeFromProps ? null : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n                // the middle of the notification loop, where `subscription` will then be null. This can\n                // probably be avoided if Subscription's listeners logic is changed to not call listeners\n                // that have been unsubscribed in the  middle of the notification loop.\n                // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n                // the middle of the notification loop, where `subscription` will then be null. This can\n                // probably be avoided if Subscription's listeners logic is changed to not call listeners\n                // that have been unsubscribed in the  middle of the notification loop.\n                var notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n                return [\n                    subscription,\n                    notifyNestedSubs\n                ];\n            }, [\n                store,\n                didStoreComeFromProps,\n                contextValue\n            ]), subscription = _useMemo2[0], notifyNestedSubs = _useMemo2[1]; // Determine what {store, subscription} value should be put into nested context, if necessary,\n            // and memoize that value to avoid unnecessary context updates.\n            var overriddenContextValue = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function() {\n                if (didStoreComeFromProps) {\n                    // This component is directly subscribed to a store from props.\n                    // We don't want descendants reading from this store - pass down whatever\n                    // the existing context value is from the nearest connected ancestor.\n                    return contextValue;\n                } // Otherwise, put this component's subscription instance into context, so that\n                // connected descendants won't update until after this component is done\n                return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, contextValue, {\n                    subscription: subscription\n                });\n            }, [\n                didStoreComeFromProps,\n                contextValue,\n                subscription\n            ]); // We need to force this wrapper component to re-render whenever a Redux store update\n            // causes a change to the calculated child component props (or we caught an error in mapState)\n            var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_3__.useReducer)(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates), _useReducer$ = _useReducer[0], previousStateUpdateResult = _useReducer$[0], forceComponentUpdateDispatch = _useReducer[1]; // Propagate any mapState/mapDispatch errors upwards\n            if (previousStateUpdateResult && previousStateUpdateResult.error) {\n                throw previousStateUpdateResult.error;\n            } // Set up refs to coordinate values between the subscription effect and the render logic\n            var lastChildProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();\n            var lastWrapperProps = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(wrapperProps);\n            var childPropsFromStoreUpdate = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)();\n            var renderIsScheduled = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(false);\n            var actualChildProps = usePureOnlyMemo(function() {\n                // Tricky logic here:\n                // - This render may have been triggered by a Redux store update that produced new child props\n                // - However, we may have gotten new wrapper props after that\n                // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n                // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n                // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n                if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n                    return childPropsFromStoreUpdate.current;\n                } // TODO We're reading the store directly in render() here. Bad idea?\n                // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n                // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n                // to determine what the child props should be.\n                return childPropsSelector(store.getState(), wrapperProps);\n            }, [\n                store,\n                previousStateUpdateResult,\n                wrapperProps\n            ]); // We need this to execute synchronously every time we re-render. However, React warns\n            // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n            // just useEffect instead to avoid the warning, since neither will run anyway.\n            useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [\n                lastWrapperProps,\n                lastChildProps,\n                renderIsScheduled,\n                wrapperProps,\n                actualChildProps,\n                childPropsFromStoreUpdate,\n                notifyNestedSubs\n            ]); // Our re-subscribe logic only runs when the store/subscription setup changes\n            useIsomorphicLayoutEffectWithArgs(subscribeUpdates, [\n                shouldHandleStateChanges,\n                store,\n                subscription,\n                childPropsSelector,\n                lastWrapperProps,\n                lastChildProps,\n                renderIsScheduled,\n                childPropsFromStoreUpdate,\n                notifyNestedSubs,\n                forceComponentUpdateDispatch\n            ], [\n                store,\n                subscription,\n                childPropsSelector\n            ]); // Now that all that's done, we can finally try to actually render the child component.\n            // We memoize the elements for the rendered child component as an optimization.\n            var renderedWrappedComponent = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function() {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3___default().createElement(WrappedComponent, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, actualChildProps, {\n                    ref: reactReduxForwardedRef\n                }));\n            }, [\n                reactReduxForwardedRef,\n                WrappedComponent,\n                actualChildProps\n            ]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n            // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n            var renderedChild = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(function() {\n                if (shouldHandleStateChanges) {\n                    // If this component is subscribed to store updates, we need to pass its own\n                    // subscription instance down to our descendants. That means rendering the same\n                    // Context instance, and putting a different value into the context.\n                    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3___default().createElement(ContextToUse.Provider, {\n                        value: overriddenContextValue\n                    }, renderedWrappedComponent);\n                }\n                return renderedWrappedComponent;\n            }, [\n                ContextToUse,\n                renderedWrappedComponent,\n                overriddenContextValue\n            ]);\n            return renderedChild;\n        } // If we're in \"pure\" mode, ensure our wrapper component only re-renders when incoming props have changed.\n        _s(ConnectFunction, \"CFEUimWOm/LCdkO/345rHA/rYng=\", false, function() {\n            return [\n                usePureOnlyMemo,\n                useIsomorphicLayoutEffectWithArgs,\n                useIsomorphicLayoutEffectWithArgs\n            ];\n        });\n        var Connect = pure ? /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3___default().memo(ConnectFunction) : ConnectFunction;\n        Connect.WrappedComponent = WrappedComponent;\n        Connect.displayName = ConnectFunction.displayName = displayName;\n        if (forwardRef) {\n            var forwarded = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3___default().forwardRef(function forwardConnectRef(props, ref) {\n                return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_3___default().createElement(Connect, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, props, {\n                    reactReduxForwardedRef: ref\n                }));\n            });\n            forwarded.displayName = displayName;\n            forwarded.WrappedComponent = WrappedComponent;\n            return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(forwarded, WrappedComponent);\n        }\n        return hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default()(Connect, WrappedComponent);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/components/connectAdvanced.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/connect.js":
/*!********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/connect.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createConnect: function() { return /* binding */ createConnect; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/connectAdvanced */ \"(app-pages-browser)/./node_modules/react-redux/es/components/connectAdvanced.js\");\n/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/shallowEqual */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/shallowEqual.js\");\n/* harmony import */ var _mapDispatchToProps__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapDispatchToProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/mapDispatchToProps.js\");\n/* harmony import */ var _mapStateToProps__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mapStateToProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/mapStateToProps.js\");\n/* harmony import */ var _mergeProps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mergeProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/mergeProps.js\");\n/* harmony import */ var _selectorFactory__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./selectorFactory */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/selectorFactory.js\");\n\n\nvar _excluded = [\n    \"pure\",\n    \"areStatesEqual\",\n    \"areOwnPropsEqual\",\n    \"areStatePropsEqual\",\n    \"areMergedPropsEqual\"\n];\n\n\n\n\n\n\n/*\r\n  connect is a facade over connectAdvanced. It turns its args into a compatible\r\n  selectorFactory, which has the signature:\r\n\r\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\r\n  \r\n  connect passes its args to connectAdvanced as options, which will in turn pass them to\r\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\r\n\r\n  selectorFactory returns a final props selector from its mapStateToProps,\r\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\r\n  mergePropsFactories, and pure args.\r\n\r\n  The resulting final props selector is called by the Connect component instance whenever\r\n  it receives new props or store state.\r\n */ function match(arg, factories, name) {\n    for(var i = factories.length - 1; i >= 0; i--){\n        var result = factories[i](arg);\n        if (result) return result;\n    }\n    return function(dispatch, options) {\n        throw new Error(\"Invalid value of type \" + typeof arg + \" for \" + name + \" argument when connecting component \" + options.wrappedComponentName + \".\");\n    };\n}\nfunction strictEqual(a, b) {\n    return a === b;\n} // createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\nfunction createConnect(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp, _ref$connectHOC = _ref.connectHOC, connectHOC = _ref$connectHOC === void 0 ? _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_2__[\"default\"] : _ref$connectHOC, _ref$mapStateToPropsF = _ref.mapStateToPropsFactories, mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? _mapStateToProps__WEBPACK_IMPORTED_MODULE_5__[\"default\"] : _ref$mapStateToPropsF, _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories, mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? _mapDispatchToProps__WEBPACK_IMPORTED_MODULE_4__[\"default\"] : _ref$mapDispatchToPro, _ref$mergePropsFactor = _ref.mergePropsFactories, mergePropsFactories = _ref$mergePropsFactor === void 0 ? _mergeProps__WEBPACK_IMPORTED_MODULE_6__[\"default\"] : _ref$mergePropsFactor, _ref$selectorFactory = _ref.selectorFactory, selectorFactory = _ref$selectorFactory === void 0 ? _selectorFactory__WEBPACK_IMPORTED_MODULE_7__[\"default\"] : _ref$selectorFactory;\n    return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n        if (_ref2 === void 0) {\n            _ref2 = {};\n        }\n        var _ref3 = _ref2, _ref3$pure = _ref3.pure, pure = _ref3$pure === void 0 ? true : _ref3$pure, _ref3$areStatesEqual = _ref3.areStatesEqual, areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual, _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual, areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__[\"default\"] : _ref3$areOwnPropsEqua, _ref3$areStatePropsEq = _ref3.areStatePropsEqual, areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__[\"default\"] : _ref3$areStatePropsEq, _ref3$areMergedPropsE = _ref3.areMergedPropsEqual, areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_3__[\"default\"] : _ref3$areMergedPropsE, extraOptions = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref3, _excluded);\n        var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, \"mapStateToProps\");\n        var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, \"mapDispatchToProps\");\n        var initMergeProps = match(mergeProps, mergePropsFactories, \"mergeProps\");\n        return connectHOC(selectorFactory, (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            // used in error messages\n            methodName: \"connect\",\n            // used to compute Connect's displayName from the wrapped component's displayName.\n            getDisplayName: function getDisplayName(name) {\n                return \"Connect(\" + name + \")\";\n            },\n            // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n            shouldHandleStateChanges: Boolean(mapStateToProps),\n            // passed through to selectorFactory\n            initMapStateToProps: initMapStateToProps,\n            initMapDispatchToProps: initMapDispatchToProps,\n            initMergeProps: initMergeProps,\n            pure: pure,\n            areStatesEqual: areStatesEqual,\n            areOwnPropsEqual: areOwnPropsEqual,\n            areStatePropsEqual: areStatePropsEqual,\n            areMergedPropsEqual: areMergedPropsEqual\n        }, extraOptions));\n    };\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (/*#__PURE__*/createConnect());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/connect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/mapDispatchToProps.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapDispatchToProps.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   whenMapDispatchToPropsIsFunction: function() { return /* binding */ whenMapDispatchToPropsIsFunction; },\n/* harmony export */   whenMapDispatchToPropsIsMissing: function() { return /* binding */ whenMapDispatchToPropsIsMissing; },\n/* harmony export */   whenMapDispatchToPropsIsObject: function() { return /* binding */ whenMapDispatchToPropsIsObject; }\n/* harmony export */ });\n/* harmony import */ var _utils_bindActionCreators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/bindActionCreators */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/bindActionCreators.js\");\n/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapMapToProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/wrapMapToProps.js\");\n\n\nfunction whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n    return typeof mapDispatchToProps === \"function\" ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsFunc)(mapDispatchToProps, \"mapDispatchToProps\") : undefined;\n}\nfunction whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n    return !mapDispatchToProps ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsConstant)(function(dispatch) {\n        return {\n            dispatch: dispatch\n        };\n    }) : undefined;\n}\nfunction whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n    return mapDispatchToProps && typeof mapDispatchToProps === \"object\" ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_1__.wrapMapToPropsConstant)(function(dispatch) {\n        return (0,_utils_bindActionCreators__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(mapDispatchToProps, dispatch);\n    }) : undefined;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\n    whenMapDispatchToPropsIsFunction,\n    whenMapDispatchToPropsIsMissing,\n    whenMapDispatchToPropsIsObject\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcERpc3BhdGNoVG9Qcm9wcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RDtBQUNpQjtBQUN2RSxTQUFTRyxpQ0FBaUNDLGtCQUFrQjtJQUNqRSxPQUFPLE9BQU9BLHVCQUF1QixhQUFhRixtRUFBa0JBLENBQUNFLG9CQUFvQix3QkFBd0JDO0FBQ25IO0FBQ08sU0FBU0MsZ0NBQWdDRixrQkFBa0I7SUFDaEUsT0FBTyxDQUFDQSxxQkFBcUJILHVFQUFzQkEsQ0FBQyxTQUFVTSxRQUFRO1FBQ3BFLE9BQU87WUFDTEEsVUFBVUE7UUFDWjtJQUNGLEtBQUtGO0FBQ1A7QUFDTyxTQUFTRywrQkFBK0JKLGtCQUFrQjtJQUMvRCxPQUFPQSxzQkFBc0IsT0FBT0EsdUJBQXVCLFdBQVdILHVFQUFzQkEsQ0FBQyxTQUFVTSxRQUFRO1FBQzdHLE9BQU9QLHFFQUFrQkEsQ0FBQ0ksb0JBQW9CRztJQUNoRCxLQUFLRjtBQUNQO0FBQ0EsK0RBQWU7SUFBQ0Y7SUFBa0NHO0lBQWlDRTtDQUErQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcERpc3BhdGNoVG9Qcm9wcy5qcz8yYjJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiaW5kQWN0aW9uQ3JlYXRvcnMgZnJvbSAnLi4vdXRpbHMvYmluZEFjdGlvbkNyZWF0b3JzJztcbmltcG9ydCB7IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQsIHdyYXBNYXBUb1Byb3BzRnVuYyB9IGZyb20gJy4vd3JhcE1hcFRvUHJvcHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNYXBUb1Byb3BzRnVuYyhtYXBEaXNwYXRjaFRvUHJvcHMsICdtYXBEaXNwYXRjaFRvUHJvcHMnKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNNaXNzaW5nKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcERpc3BhdGNoVG9Qcm9wcyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKGRpc3BhdGNoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc3BhdGNoOiBkaXNwYXRjaFxuICAgIH07XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdChtYXBEaXNwYXRjaFRvUHJvcHMpIHtcbiAgcmV0dXJuIG1hcERpc3BhdGNoVG9Qcm9wcyAmJiB0eXBlb2YgbWFwRGlzcGF0Y2hUb1Byb3BzID09PSAnb2JqZWN0JyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKGRpc3BhdGNoKSB7XG4gICAgcmV0dXJuIGJpbmRBY3Rpb25DcmVhdG9ycyhtYXBEaXNwYXRjaFRvUHJvcHMsIGRpc3BhdGNoKTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZGVmYXVsdCBbd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcsIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdF07Il0sIm5hbWVzIjpbImJpbmRBY3Rpb25DcmVhdG9ycyIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJ3cmFwTWFwVG9Qcm9wc0Z1bmMiLCJ3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbiIsIm1hcERpc3BhdGNoVG9Qcm9wcyIsInVuZGVmaW5lZCIsIndoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmciLCJkaXNwYXRjaCIsIndoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/mapDispatchToProps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/mapStateToProps.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mapStateToProps.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   whenMapStateToPropsIsFunction: function() { return /* binding */ whenMapStateToPropsIsFunction; },\n/* harmony export */   whenMapStateToPropsIsMissing: function() { return /* binding */ whenMapStateToPropsIsMissing; }\n/* harmony export */ });\n/* harmony import */ var _wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrapMapToProps */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/wrapMapToProps.js\");\n\nfunction whenMapStateToPropsIsFunction(mapStateToProps) {\n    return typeof mapStateToProps === \"function\" ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__.wrapMapToPropsFunc)(mapStateToProps, \"mapStateToProps\") : undefined;\n}\nfunction whenMapStateToPropsIsMissing(mapStateToProps) {\n    return !mapStateToProps ? (0,_wrapMapToProps__WEBPACK_IMPORTED_MODULE_0__.wrapMapToPropsConstant)(function() {\n        return {};\n    }) : undefined;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\n    whenMapStateToPropsIsFunction,\n    whenMapStateToPropsIsMissing\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcFN0YXRlVG9Qcm9wcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEU7QUFDdkUsU0FBU0UsOEJBQThCQyxlQUFlO0lBQzNELE9BQU8sT0FBT0Esb0JBQW9CLGFBQWFGLG1FQUFrQkEsQ0FBQ0UsaUJBQWlCLHFCQUFxQkM7QUFDMUc7QUFDTyxTQUFTQyw2QkFBNkJGLGVBQWU7SUFDMUQsT0FBTyxDQUFDQSxrQkFBa0JILHVFQUFzQkEsQ0FBQztRQUMvQyxPQUFPLENBQUM7SUFDVixLQUFLSTtBQUNQO0FBQ0EsK0RBQWU7SUFBQ0Y7SUFBK0JHO0NBQTZCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwU3RhdGVUb1Byb3BzLmpzP2JlZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcFN0YXRlVG9Qcm9wc0lzRnVuY3Rpb24obWFwU3RhdGVUb1Byb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWFwU3RhdGVUb1Byb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFN0YXRlVG9Qcm9wcywgJ21hcFN0YXRlVG9Qcm9wcycpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBTdGF0ZVRvUHJvcHNJc01pc3NpbmcobWFwU3RhdGVUb1Byb3BzKSB7XG4gIHJldHVybiAhbWFwU3RhdGVUb1Byb3BzID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiwgd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZ107Il0sIm5hbWVzIjpbIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJ3cmFwTWFwVG9Qcm9wc0Z1bmMiLCJ3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiIsIm1hcFN0YXRlVG9Qcm9wcyIsInVuZGVmaW5lZCIsIndoZW5NYXBTdGF0ZVRvUHJvcHNJc01pc3NpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/mapStateToProps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/mergeProps.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/connect/mergeProps.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultMergeProps: function() { return /* binding */ defaultMergeProps; },\n/* harmony export */   whenMergePropsIsFunction: function() { return /* binding */ whenMergePropsIsFunction; },\n/* harmony export */   whenMergePropsIsOmitted: function() { return /* binding */ whenMergePropsIsOmitted; },\n/* harmony export */   wrapMergePropsFunc: function() { return /* binding */ wrapMergePropsFunc; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\");\n/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/verifyPlainObject */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/verifyPlainObject.js\");\n\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n    return (0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, ownProps, stateProps, dispatchProps);\n}\nfunction wrapMergePropsFunc(mergeProps) {\n    return function initMergePropsProxy(dispatch, _ref) {\n        var displayName = _ref.displayName, pure = _ref.pure, areMergedPropsEqual = _ref.areMergedPropsEqual;\n        var hasRunOnce = false;\n        var mergedProps;\n        return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n            var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n            if (hasRunOnce) {\n                if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n            } else {\n                hasRunOnce = true;\n                mergedProps = nextMergedProps;\n                if (true) (0,_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(mergedProps, displayName, \"mergeProps\");\n            }\n            return mergedProps;\n        };\n    };\n}\nfunction whenMergePropsIsFunction(mergeProps) {\n    return typeof mergeProps === \"function\" ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nfunction whenMergePropsIsOmitted(mergeProps) {\n    return !mergeProps ? function() {\n        return defaultMergeProps;\n    } : undefined;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ([\n    whenMergePropsIsFunction,\n    whenMergePropsIsOmitted\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21lcmdlUHJvcHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBEO0FBQ0M7QUFDcEQsU0FBU0Usa0JBQWtCQyxVQUFVLEVBQUVDLGFBQWEsRUFBRUMsUUFBUTtJQUNuRSxPQUFPTCw4RUFBUUEsQ0FBQyxDQUFDLEdBQUdLLFVBQVVGLFlBQVlDO0FBQzVDO0FBQ08sU0FBU0UsbUJBQW1CQyxVQUFVO0lBQzNDLE9BQU8sU0FBU0Msb0JBQW9CQyxRQUFRLEVBQUVDLElBQUk7UUFDaEQsSUFBSUMsY0FBY0QsS0FBS0MsV0FBVyxFQUM5QkMsT0FBT0YsS0FBS0UsSUFBSSxFQUNoQkMsc0JBQXNCSCxLQUFLRyxtQkFBbUI7UUFDbEQsSUFBSUMsYUFBYTtRQUNqQixJQUFJQztRQUNKLE9BQU8sU0FBU0MsZ0JBQWdCYixVQUFVLEVBQUVDLGFBQWEsRUFBRUMsUUFBUTtZQUNqRSxJQUFJWSxrQkFBa0JWLFdBQVdKLFlBQVlDLGVBQWVDO1lBRTVELElBQUlTLFlBQVk7Z0JBQ2QsSUFBSSxDQUFDRixRQUFRLENBQUNDLG9CQUFvQkksaUJBQWlCRixjQUFjQSxjQUFjRTtZQUNqRixPQUFPO2dCQUNMSCxhQUFhO2dCQUNiQyxjQUFjRTtnQkFDZCxJQUFJQyxJQUF5QixFQUFjakIsb0VBQWlCQSxDQUFDYyxhQUFhSixhQUFhO1lBQ3pGO1lBRUEsT0FBT0k7UUFDVDtJQUNGO0FBQ0Y7QUFDTyxTQUFTSSx5QkFBeUJaLFVBQVU7SUFDakQsT0FBTyxPQUFPQSxlQUFlLGFBQWFELG1CQUFtQkMsY0FBY2E7QUFDN0U7QUFDTyxTQUFTQyx3QkFBd0JkLFVBQVU7SUFDaEQsT0FBTyxDQUFDQSxhQUFhO1FBQ25CLE9BQU9MO0lBQ1QsSUFBSWtCO0FBQ047QUFDQSwrREFBZTtJQUFDRDtJQUEwQkU7Q0FBd0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tZXJnZVByb3BzLmpzP2E3MWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgdmVyaWZ5UGxhaW5PYmplY3QgZnJvbSAnLi4vdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRNZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgb3duUHJvcHMsIHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdyYXBNZXJnZVByb3BzRnVuYyhtZXJnZVByb3BzKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbml0TWVyZ2VQcm9wc1Byb3h5KGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZSxcbiAgICAgICAgcHVyZSA9IF9yZWYucHVyZSxcbiAgICAgICAgYXJlTWVyZ2VkUHJvcHNFcXVhbCA9IF9yZWYuYXJlTWVyZ2VkUHJvcHNFcXVhbDtcbiAgICB2YXIgaGFzUnVuT25jZSA9IGZhbHNlO1xuICAgIHZhciBtZXJnZWRQcm9wcztcbiAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VQcm9wc1Byb3h5KHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gICAgICB2YXIgbmV4dE1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG5cbiAgICAgIGlmIChoYXNSdW5PbmNlKSB7XG4gICAgICAgIGlmICghcHVyZSB8fCAhYXJlTWVyZ2VkUHJvcHNFcXVhbChuZXh0TWVyZ2VkUHJvcHMsIG1lcmdlZFByb3BzKSkgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBoYXNSdW5PbmNlID0gdHJ1ZTtcbiAgICAgICAgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChtZXJnZWRQcm9wcywgZGlzcGxheU5hbWUsICdtZXJnZVByb3BzJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgICB9O1xuICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NZXJnZVByb3BzSXNGdW5jdGlvbihtZXJnZVByb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWVyZ2VQcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNZXJnZVByb3BzRnVuYyhtZXJnZVByb3BzKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWVyZ2VQcm9wc0lzT21pdHRlZChtZXJnZVByb3BzKSB7XG4gIHJldHVybiAhbWVyZ2VQcm9wcyA/IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGVmYXVsdE1lcmdlUHJvcHM7XG4gIH0gOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZGVmYXVsdCBbd2hlbk1lcmdlUHJvcHNJc0Z1bmN0aW9uLCB3aGVuTWVyZ2VQcm9wc0lzT21pdHRlZF07Il0sIm5hbWVzIjpbIl9leHRlbmRzIiwidmVyaWZ5UGxhaW5PYmplY3QiLCJkZWZhdWx0TWVyZ2VQcm9wcyIsInN0YXRlUHJvcHMiLCJkaXNwYXRjaFByb3BzIiwib3duUHJvcHMiLCJ3cmFwTWVyZ2VQcm9wc0Z1bmMiLCJtZXJnZVByb3BzIiwiaW5pdE1lcmdlUHJvcHNQcm94eSIsImRpc3BhdGNoIiwiX3JlZiIsImRpc3BsYXlOYW1lIiwicHVyZSIsImFyZU1lcmdlZFByb3BzRXF1YWwiLCJoYXNSdW5PbmNlIiwibWVyZ2VkUHJvcHMiLCJtZXJnZVByb3BzUHJveHkiLCJuZXh0TWVyZ2VkUHJvcHMiLCJwcm9jZXNzIiwid2hlbk1lcmdlUHJvcHNJc0Z1bmN0aW9uIiwidW5kZWZpbmVkIiwid2hlbk1lcmdlUHJvcHNJc09taXR0ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/mergeProps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/selectorFactory.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/selectorFactory.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ finalPropsSelectorFactory; },\n/* harmony export */   impureFinalPropsSelectorFactory: function() { return /* binding */ impureFinalPropsSelectorFactory; },\n/* harmony export */   pureFinalPropsSelectorFactory: function() { return /* binding */ pureFinalPropsSelectorFactory; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var _verifySubselectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifySubselectors */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/verifySubselectors.js\");\n\nvar _excluded = [\n    \"initMapStateToProps\",\n    \"initMapDispatchToProps\",\n    \"initMergeProps\"\n];\n\nfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n    return function impureFinalPropsSelector(state, ownProps) {\n        return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n    };\n}\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n    var areStatesEqual = _ref.areStatesEqual, areOwnPropsEqual = _ref.areOwnPropsEqual, areStatePropsEqual = _ref.areStatePropsEqual;\n    var hasRunAtLeastOnce = false;\n    var state;\n    var ownProps;\n    var stateProps;\n    var dispatchProps;\n    var mergedProps;\n    function handleFirstCall(firstState, firstOwnProps) {\n        state = firstState;\n        ownProps = firstOwnProps;\n        stateProps = mapStateToProps(state, ownProps);\n        dispatchProps = mapDispatchToProps(dispatch, ownProps);\n        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n        hasRunAtLeastOnce = true;\n        return mergedProps;\n    }\n    function handleNewPropsAndNewState() {\n        stateProps = mapStateToProps(state, ownProps);\n        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n        return mergedProps;\n    }\n    function handleNewProps() {\n        if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n        return mergedProps;\n    }\n    function handleNewState() {\n        var nextStateProps = mapStateToProps(state, ownProps);\n        var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n        stateProps = nextStateProps;\n        if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n        return mergedProps;\n    }\n    function handleSubsequentCalls(nextState, nextOwnProps) {\n        var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n        var stateChanged = !areStatesEqual(nextState, state, nextOwnProps, ownProps);\n        state = nextState;\n        ownProps = nextOwnProps;\n        if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n        if (propsChanged) return handleNewProps();\n        if (stateChanged) return handleNewState();\n        return mergedProps;\n    }\n    return function pureFinalPropsSelector(nextState, nextOwnProps) {\n        return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n    };\n} // TODO: Add more comments\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\nfunction finalPropsSelectorFactory(dispatch, _ref2) {\n    var initMapStateToProps = _ref2.initMapStateToProps, initMapDispatchToProps = _ref2.initMapDispatchToProps, initMergeProps = _ref2.initMergeProps, options = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_ref2, _excluded);\n    var mapStateToProps = initMapStateToProps(dispatch, options);\n    var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n    var mergeProps = initMergeProps(dispatch, options);\n    if (true) {\n        (0,_verifySubselectors__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\n    }\n    var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n    return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/selectorFactory.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/verifySubselectors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/verifySubselectors.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ verifySubselectors; }\n/* harmony export */ });\n/* harmony import */ var _utils_warning__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/warning */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js\");\n\nfunction verify(selector, methodName, displayName) {\n    if (!selector) {\n        throw new Error(\"Unexpected value for \" + methodName + \" in \" + displayName + \".\");\n    } else if (methodName === \"mapStateToProps\" || methodName === \"mapDispatchToProps\") {\n        if (!Object.prototype.hasOwnProperty.call(selector, \"dependsOnOwnProps\")) {\n            (0,_utils_warning__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"The selector for \" + methodName + \" of \" + displayName + \" did not specify a value for dependsOnOwnProps.\");\n        }\n    }\n}\nfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {\n    verify(mapStateToProps, \"mapStateToProps\", displayName);\n    verify(mapDispatchToProps, \"mapDispatchToProps\", displayName);\n    verify(mergeProps, \"mergeProps\", displayName);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3ZlcmlmeVN1YnNlbGVjdG9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUV2QyxTQUFTQyxPQUFPQyxRQUFRLEVBQUVDLFVBQVUsRUFBRUMsV0FBVztJQUMvQyxJQUFJLENBQUNGLFVBQVU7UUFDYixNQUFNLElBQUlHLE1BQU0sMEJBQTBCRixhQUFhLFNBQVNDLGNBQWM7SUFDaEYsT0FBTyxJQUFJRCxlQUFlLHFCQUFxQkEsZUFBZSxzQkFBc0I7UUFDbEYsSUFBSSxDQUFDRyxPQUFPQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUCxVQUFVLHNCQUFzQjtZQUN4RUYsMERBQU9BLENBQUMsc0JBQXNCRyxhQUFhLFNBQVNDLGNBQWM7UUFDcEU7SUFDRjtBQUNGO0FBRWUsU0FBU00sbUJBQW1CQyxlQUFlLEVBQUVDLGtCQUFrQixFQUFFQyxVQUFVLEVBQUVULFdBQVc7SUFDckdILE9BQU9VLGlCQUFpQixtQkFBbUJQO0lBQzNDSCxPQUFPVyxvQkFBb0Isc0JBQXNCUjtJQUNqREgsT0FBT1ksWUFBWSxjQUFjVDtBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC92ZXJpZnlTdWJzZWxlY3RvcnMuanM/MTYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgd2FybmluZyBmcm9tICcuLi91dGlscy93YXJuaW5nJztcblxuZnVuY3Rpb24gdmVyaWZ5KHNlbGVjdG9yLCBtZXRob2ROYW1lLCBkaXNwbGF5TmFtZSkge1xuICBpZiAoIXNlbGVjdG9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCB2YWx1ZSBmb3IgXCIgKyBtZXRob2ROYW1lICsgXCIgaW4gXCIgKyBkaXNwbGF5TmFtZSArIFwiLlwiKTtcbiAgfSBlbHNlIGlmIChtZXRob2ROYW1lID09PSAnbWFwU3RhdGVUb1Byb3BzJyB8fCBtZXRob2ROYW1lID09PSAnbWFwRGlzcGF0Y2hUb1Byb3BzJykge1xuICAgIGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNlbGVjdG9yLCAnZGVwZW5kc09uT3duUHJvcHMnKSkge1xuICAgICAgd2FybmluZyhcIlRoZSBzZWxlY3RvciBmb3IgXCIgKyBtZXRob2ROYW1lICsgXCIgb2YgXCIgKyBkaXNwbGF5TmFtZSArIFwiIGRpZCBub3Qgc3BlY2lmeSBhIHZhbHVlIGZvciBkZXBlbmRzT25Pd25Qcm9wcy5cIik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHZlcmlmeVN1YnNlbGVjdG9ycyhtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgZGlzcGxheU5hbWUpIHtcbiAgdmVyaWZ5KG1hcFN0YXRlVG9Qcm9wcywgJ21hcFN0YXRlVG9Qcm9wcycsIGRpc3BsYXlOYW1lKTtcbiAgdmVyaWZ5KG1hcERpc3BhdGNoVG9Qcm9wcywgJ21hcERpc3BhdGNoVG9Qcm9wcycsIGRpc3BsYXlOYW1lKTtcbiAgdmVyaWZ5KG1lcmdlUHJvcHMsICdtZXJnZVByb3BzJywgZGlzcGxheU5hbWUpO1xufSJdLCJuYW1lcyI6WyJ3YXJuaW5nIiwidmVyaWZ5Iiwic2VsZWN0b3IiLCJtZXRob2ROYW1lIiwiZGlzcGxheU5hbWUiLCJFcnJvciIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInZlcmlmeVN1YnNlbGVjdG9ycyIsIm1hcFN0YXRlVG9Qcm9wcyIsIm1hcERpc3BhdGNoVG9Qcm9wcyIsIm1lcmdlUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/verifySubselectors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/connect/wrapMapToProps.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-redux/es/connect/wrapMapToProps.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDependsOnOwnProps: function() { return /* binding */ getDependsOnOwnProps; },\n/* harmony export */   wrapMapToPropsConstant: function() { return /* binding */ wrapMapToPropsConstant; },\n/* harmony export */   wrapMapToPropsFunc: function() { return /* binding */ wrapMapToPropsFunc; }\n/* harmony export */ });\n/* harmony import */ var _utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/verifyPlainObject */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/verifyPlainObject.js\");\n\nfunction wrapMapToPropsConstant(getConstant) {\n    return function initConstantSelector(dispatch, options) {\n        var constant = getConstant(dispatch, options);\n        function constantSelector() {\n            return constant;\n        }\n        constantSelector.dependsOnOwnProps = false;\n        return constantSelector;\n    };\n} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n//\n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\nfunction getDependsOnOwnProps(mapToProps) {\n    return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n//\n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//\n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//\n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//\nfunction wrapMapToPropsFunc(mapToProps, methodName) {\n    return function initProxySelector(dispatch, _ref) {\n        var displayName = _ref.displayName;\n        var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n            return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n        }; // allow detectFactoryAndVerify to get ownProps\n        proxy.dependsOnOwnProps = true;\n        proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n            proxy.mapToProps = mapToProps;\n            proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n            var props = proxy(stateOrDispatch, ownProps);\n            if (typeof props === \"function\") {\n                proxy.mapToProps = props;\n                proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n                props = proxy(stateOrDispatch, ownProps);\n            }\n            if (true) (0,_utils_verifyPlainObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(props, displayName, methodName);\n            return props;\n        };\n        return proxy;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3dyYXBNYXBUb1Byb3BzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDcEQsU0FBU0MsdUJBQXVCQyxXQUFXO0lBQ2hELE9BQU8sU0FBU0MscUJBQXFCQyxRQUFRLEVBQUVDLE9BQU87UUFDcEQsSUFBSUMsV0FBV0osWUFBWUUsVUFBVUM7UUFFckMsU0FBU0U7WUFDUCxPQUFPRDtRQUNUO1FBRUFDLGlCQUFpQkMsaUJBQWlCLEdBQUc7UUFDckMsT0FBT0Q7SUFDVDtBQUNGLEVBQUUsZ0dBQWdHO0FBQ2xHLGtHQUFrRztBQUNsRyxrRUFBa0U7QUFDbEUsRUFBRTtBQUNGLDhGQUE4RjtBQUM5Riw4RkFBOEY7QUFDOUYsa0RBQWtEO0FBRTNDLFNBQVNFLHFCQUFxQkMsVUFBVTtJQUM3QyxPQUFPQSxXQUFXRixpQkFBaUIsS0FBSyxRQUFRRSxXQUFXRixpQkFBaUIsS0FBS0csWUFBWUMsUUFBUUYsV0FBV0YsaUJBQWlCLElBQUlFLFdBQVdHLE1BQU0sS0FBSztBQUM3SixFQUFFLDhFQUE4RTtBQUNoRixnRkFBZ0Y7QUFDaEYsRUFBRTtBQUNGLGtGQUFrRjtBQUNsRixrRkFBa0Y7QUFDbEYsRUFBRTtBQUNGLG9GQUFvRjtBQUNwRiwrREFBK0Q7QUFDL0QsRUFBRTtBQUNGLGtGQUFrRjtBQUNsRixtRkFBbUY7QUFDbkYsRUFBRTtBQUVLLFNBQVNDLG1CQUFtQkosVUFBVSxFQUFFSyxVQUFVO0lBQ3ZELE9BQU8sU0FBU0Msa0JBQWtCWixRQUFRLEVBQUVhLElBQUk7UUFDOUMsSUFBSUMsY0FBY0QsS0FBS0MsV0FBVztRQUVsQyxJQUFJQyxRQUFRLFNBQVNDLGdCQUFnQkMsZUFBZSxFQUFFQyxRQUFRO1lBQzVELE9BQU9ILE1BQU1YLGlCQUFpQixHQUFHVyxNQUFNVCxVQUFVLENBQUNXLGlCQUFpQkMsWUFBWUgsTUFBTVQsVUFBVSxDQUFDVztRQUNsRyxHQUFHLCtDQUErQztRQUdsREYsTUFBTVgsaUJBQWlCLEdBQUc7UUFFMUJXLE1BQU1ULFVBQVUsR0FBRyxTQUFTYSx1QkFBdUJGLGVBQWUsRUFBRUMsUUFBUTtZQUMxRUgsTUFBTVQsVUFBVSxHQUFHQTtZQUNuQlMsTUFBTVgsaUJBQWlCLEdBQUdDLHFCQUFxQkM7WUFDL0MsSUFBSWMsUUFBUUwsTUFBTUUsaUJBQWlCQztZQUVuQyxJQUFJLE9BQU9FLFVBQVUsWUFBWTtnQkFDL0JMLE1BQU1ULFVBQVUsR0FBR2M7Z0JBQ25CTCxNQUFNWCxpQkFBaUIsR0FBR0MscUJBQXFCZTtnQkFDL0NBLFFBQVFMLE1BQU1FLGlCQUFpQkM7WUFDakM7WUFFQSxJQUFJRyxJQUF5QixFQUFjekIsb0VBQWlCQSxDQUFDd0IsT0FBT04sYUFBYUg7WUFDakYsT0FBT1M7UUFDVDtRQUVBLE9BQU9MO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC93cmFwTWFwVG9Qcm9wcy5qcz9iY2RhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2ZXJpZnlQbGFpbk9iamVjdCBmcm9tICcuLi91dGlscy92ZXJpZnlQbGFpbk9iamVjdCc7XG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNDb25zdGFudChnZXRDb25zdGFudCkge1xuICByZXR1cm4gZnVuY3Rpb24gaW5pdENvbnN0YW50U2VsZWN0b3IoZGlzcGF0Y2gsIG9wdGlvbnMpIHtcbiAgICB2YXIgY29uc3RhbnQgPSBnZXRDb25zdGFudChkaXNwYXRjaCwgb3B0aW9ucyk7XG5cbiAgICBmdW5jdGlvbiBjb25zdGFudFNlbGVjdG9yKCkge1xuICAgICAgcmV0dXJuIGNvbnN0YW50O1xuICAgIH1cblxuICAgIGNvbnN0YW50U2VsZWN0b3IuZGVwZW5kc09uT3duUHJvcHMgPSBmYWxzZTtcbiAgICByZXR1cm4gY29uc3RhbnRTZWxlY3RvcjtcbiAgfTtcbn0gLy8gZGVwZW5kc09uT3duUHJvcHMgaXMgdXNlZCBieSBjcmVhdGVNYXBUb1Byb3BzUHJveHkgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gcGFzcyBwcm9wcyBhcyBhcmdzXG4vLyB0byB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyB3cmFwcGVkLiBJdCBpcyBhbHNvIHVzZWQgYnkgbWFrZVB1cmVQcm9wc1NlbGVjdG9yIHRvIGRldGVybWluZVxuLy8gd2hldGhlciBtYXBUb1Byb3BzIG5lZWRzIHRvIGJlIGludm9rZWQgd2hlbiBwcm9wcyBoYXZlIGNoYW5nZWQuXG4vL1xuLy8gQSBsZW5ndGggb2Ygb25lIHNpZ25hbHMgdGhhdCBtYXBUb1Byb3BzIGRvZXMgbm90IGRlcGVuZCBvbiBwcm9wcyBmcm9tIHRoZSBwYXJlbnQgY29tcG9uZW50LlxuLy8gQSBsZW5ndGggb2YgemVybyBpcyBhc3N1bWVkIHRvIG1lYW4gbWFwVG9Qcm9wcyBpcyBnZXR0aW5nIGFyZ3MgdmlhIGFyZ3VtZW50cyBvciAuLi5hcmdzIGFuZFxuLy8gdGhlcmVmb3JlIG5vdCByZXBvcnRpbmcgaXRzIGxlbmd0aCBhY2N1cmF0ZWx5Li5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldERlcGVuZHNPbk93blByb3BzKG1hcFRvUHJvcHMpIHtcbiAgcmV0dXJuIG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMgIT09IG51bGwgJiYgbWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcyAhPT0gdW5kZWZpbmVkID8gQm9vbGVhbihtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSA6IG1hcFRvUHJvcHMubGVuZ3RoICE9PSAxO1xufSAvLyBVc2VkIGJ5IHdoZW5NYXBTdGF0ZVRvUHJvcHNJc0Z1bmN0aW9uIGFuZCB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNGdW5jdGlvbixcbi8vIHRoaXMgZnVuY3Rpb24gd3JhcHMgbWFwVG9Qcm9wcyBpbiBhIHByb3h5IGZ1bmN0aW9uIHdoaWNoIGRvZXMgc2V2ZXJhbCB0aGluZ3M6XG4vL1xuLy8gICogRGV0ZWN0cyB3aGV0aGVyIHRoZSBtYXBUb1Byb3BzIGZ1bmN0aW9uIGJlaW5nIGNhbGxlZCBkZXBlbmRzIG9uIHByb3BzLCB3aGljaFxuLy8gICAgaXMgdXNlZCBieSBzZWxlY3RvckZhY3RvcnkgdG8gZGVjaWRlIGlmIGl0IHNob3VsZCByZWludm9rZSBvbiBwcm9wcyBjaGFuZ2VzLlxuLy9cbi8vICAqIE9uIGZpcnN0IGNhbGwsIGhhbmRsZXMgbWFwVG9Qcm9wcyBpZiByZXR1cm5zIGFub3RoZXIgZnVuY3Rpb24sIGFuZCB0cmVhdHMgdGhhdFxuLy8gICAgbmV3IGZ1bmN0aW9uIGFzIHRoZSB0cnVlIG1hcFRvUHJvcHMgZm9yIHN1YnNlcXVlbnQgY2FsbHMuXG4vL1xuLy8gICogT24gZmlyc3QgY2FsbCwgdmVyaWZpZXMgdGhlIGZpcnN0IHJlc3VsdCBpcyBhIHBsYWluIG9iamVjdCwgaW4gb3JkZXIgdG8gd2FyblxuLy8gICAgdGhlIGRldmVsb3BlciB0aGF0IHRoZWlyIG1hcFRvUHJvcHMgZnVuY3Rpb24gaXMgbm90IHJldHVybmluZyBhIHZhbGlkIHJlc3VsdC5cbi8vXG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwVG9Qcm9wcywgbWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24gaW5pdFByb3h5U2VsZWN0b3IoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lO1xuXG4gICAgdmFyIHByb3h5ID0gZnVuY3Rpb24gbWFwVG9Qcm9wc1Byb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHJldHVybiBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA/IHByb3h5Lm1hcFRvUHJvcHMoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcykgOiBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCk7XG4gICAgfTsgLy8gYWxsb3cgZGV0ZWN0RmFjdG9yeUFuZFZlcmlmeSB0byBnZXQgb3duUHJvcHNcblxuXG4gICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSB0cnVlO1xuXG4gICAgcHJveHkubWFwVG9Qcm9wcyA9IGZ1bmN0aW9uIGRldGVjdEZhY3RvcnlBbmRWZXJpZnkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcykge1xuICAgICAgcHJveHkubWFwVG9Qcm9wcyA9IG1hcFRvUHJvcHM7XG4gICAgICBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA9IGdldERlcGVuZHNPbk93blByb3BzKG1hcFRvUHJvcHMpO1xuICAgICAgdmFyIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG5cbiAgICAgIGlmICh0eXBlb2YgcHJvcHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcHJveHkubWFwVG9Qcm9wcyA9IHByb3BzO1xuICAgICAgICBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA9IGdldERlcGVuZHNPbk93blByb3BzKHByb3BzKTtcbiAgICAgICAgcHJvcHMgPSBwcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KHByb3BzLCBkaXNwbGF5TmFtZSwgbWV0aG9kTmFtZSk7XG4gICAgICByZXR1cm4gcHJvcHM7XG4gICAgfTtcblxuICAgIHJldHVybiBwcm94eTtcbiAgfTtcbn0iXSwibmFtZXMiOlsidmVyaWZ5UGxhaW5PYmplY3QiLCJ3cmFwTWFwVG9Qcm9wc0NvbnN0YW50IiwiZ2V0Q29uc3RhbnQiLCJpbml0Q29uc3RhbnRTZWxlY3RvciIsImRpc3BhdGNoIiwib3B0aW9ucyIsImNvbnN0YW50IiwiY29uc3RhbnRTZWxlY3RvciIsImRlcGVuZHNPbk93blByb3BzIiwiZ2V0RGVwZW5kc09uT3duUHJvcHMiLCJtYXBUb1Byb3BzIiwidW5kZWZpbmVkIiwiQm9vbGVhbiIsImxlbmd0aCIsIndyYXBNYXBUb1Byb3BzRnVuYyIsIm1ldGhvZE5hbWUiLCJpbml0UHJveHlTZWxlY3RvciIsIl9yZWYiLCJkaXNwbGF5TmFtZSIsInByb3h5IiwibWFwVG9Qcm9wc1Byb3h5Iiwic3RhdGVPckRpc3BhdGNoIiwib3duUHJvcHMiLCJkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5IiwicHJvcHMiLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/connect/wrapMapToProps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/exports.js":
/*!************************************************!*\
  !*** ./node_modules/react-redux/es/exports.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Provider: function() { return /* reexport safe */ _components_Provider__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   ReactReduxContext: function() { return /* reexport safe */ _components_Context__WEBPACK_IMPORTED_MODULE_2__.ReactReduxContext; },\n/* harmony export */   connect: function() { return /* reexport safe */ _connect_connect__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   connectAdvanced: function() { return /* reexport safe */ _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   createDispatchHook: function() { return /* reexport safe */ _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__.createDispatchHook; },\n/* harmony export */   createSelectorHook: function() { return /* reexport safe */ _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__.createSelectorHook; },\n/* harmony export */   createStoreHook: function() { return /* reexport safe */ _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__.createStoreHook; },\n/* harmony export */   shallowEqual: function() { return /* reexport safe */ _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; },\n/* harmony export */   useDispatch: function() { return /* reexport safe */ _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__.useDispatch; },\n/* harmony export */   useSelector: function() { return /* reexport safe */ _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__.useSelector; },\n/* harmony export */   useStore: function() { return /* reexport safe */ _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__.useStore; }\n/* harmony export */ });\n/* harmony import */ var _components_Provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Provider */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Provider.js\");\n/* harmony import */ var _components_connectAdvanced__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/connectAdvanced */ \"(app-pages-browser)/./node_modules/react-redux/es/components/connectAdvanced.js\");\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _connect_connect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./connect/connect */ \"(app-pages-browser)/./node_modules/react-redux/es/connect/connect.js\");\n/* harmony import */ var _hooks_useDispatch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useDispatch */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useDispatch.js\");\n/* harmony import */ var _hooks_useSelector__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hooks/useSelector */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useSelector.js\");\n/* harmony import */ var _hooks_useStore__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hooks/useStore */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useStore.js\");\n/* harmony import */ var _utils_shallowEqual__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/shallowEqual */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/shallowEqual.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9leHBvcnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNkM7QUFDYztBQUNGO0FBQ2pCO0FBQzhCO0FBQ0E7QUFDVDtBQUNiO0FBQzRIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9leHBvcnRzLmpzPzFiYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3ZpZGVyIGZyb20gJy4vY29tcG9uZW50cy9Qcm92aWRlcic7XG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4vY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgY29ubmVjdCBmcm9tICcuL2Nvbm5lY3QvY29ubmVjdCc7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCwgY3JlYXRlRGlzcGF0Y2hIb29rIH0gZnJvbSAnLi9ob29rcy91c2VEaXNwYXRjaCc7XG5pbXBvcnQgeyB1c2VTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3JIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTZWxlY3Rvcic7XG5pbXBvcnQgeyB1c2VTdG9yZSwgY3JlYXRlU3RvcmVIb29rIH0gZnJvbSAnLi9ob29rcy91c2VTdG9yZSc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4vdXRpbHMvc2hhbGxvd0VxdWFsJztcbmV4cG9ydCB7IFByb3ZpZGVyLCBjb25uZWN0QWR2YW5jZWQsIFJlYWN0UmVkdXhDb250ZXh0LCBjb25uZWN0LCB1c2VEaXNwYXRjaCwgY3JlYXRlRGlzcGF0Y2hIb29rLCB1c2VTZWxlY3RvciwgY3JlYXRlU2VsZWN0b3JIb29rLCB1c2VTdG9yZSwgY3JlYXRlU3RvcmVIb29rLCBzaGFsbG93RXF1YWwgfTsiXSwibmFtZXMiOlsiUHJvdmlkZXIiLCJjb25uZWN0QWR2YW5jZWQiLCJSZWFjdFJlZHV4Q29udGV4dCIsImNvbm5lY3QiLCJ1c2VEaXNwYXRjaCIsImNyZWF0ZURpc3BhdGNoSG9vayIsInVzZVNlbGVjdG9yIiwiY3JlYXRlU2VsZWN0b3JIb29rIiwidXNlU3RvcmUiLCJjcmVhdGVTdG9yZUhvb2siLCJzaGFsbG93RXF1YWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/exports.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/hooks/useDispatch.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useDispatch.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDispatchHook: function() { return /* binding */ createDispatchHook; },\n/* harmony export */   useDispatch: function() { return /* binding */ useDispatch; }\n/* harmony export */ });\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _useStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useStore */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useStore.js\");\n\n\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */ function createDispatchHook(context) {\n    var _s = $RefreshSig$();\n    if (context === void 0) {\n        context = _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext;\n    }\n    var useStore = context === _components_Context__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext ? _useStore__WEBPACK_IMPORTED_MODULE_1__.useStore : (0,_useStore__WEBPACK_IMPORTED_MODULE_1__.createStoreHook)(context);\n    return _s(function useDispatch() {\n        _s();\n        var store = useStore();\n        return store.dispatch;\n    }, \"lacCqcEtsbxX3PAG/fPlTuRiPg0=\", false, function() {\n        return [\n            useStore\n        ];\n    });\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */ var useDispatch = /*#__PURE__*/ createDispatchHook();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VEaXNwYXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBEO0FBQ2dCO0FBQzFFOzs7OztDQUtDLEdBRU0sU0FBU0ksbUJBQW1CQyxPQUFPOztJQUN4QyxJQUFJQSxZQUFZLEtBQUssR0FBRztRQUN0QkEsVUFBVUwsa0VBQWlCQTtJQUM3QjtJQUVBLElBQUlDLFdBQVdJLFlBQVlMLGtFQUFpQkEsR0FBR0UsK0NBQWVBLEdBQUdDLDBEQUFlQSxDQUFDRTtJQUNqRixVQUFPLFNBQVNDOztRQUNkLElBQUlDLFFBQVFOO1FBQ1osT0FBT00sTUFBTUMsUUFBUTtJQUN2Qjs7WUFGY1A7OztBQUdoQjtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQW9CQyxHQUVNLElBQUlLLGNBQWMsV0FBVyxHQUFFRixxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZURpc3BhdGNoLmpzPzY0MjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NvbnRleHQnO1xuaW1wb3J0IHsgdXNlU3RvcmUgYXMgdXNlRGVmYXVsdFN0b3JlLCBjcmVhdGVTdG9yZUhvb2sgfSBmcm9tICcuL3VzZVN0b3JlJztcbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlRGlzcGF0Y2hgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VEaXNwYXRjaGAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGlzcGF0Y2hIb29rKGNvbnRleHQpIHtcbiAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkge1xuICAgIGNvbnRleHQgPSBSZWFjdFJlZHV4Q29udGV4dDtcbiAgfVxuXG4gIHZhciB1c2VTdG9yZSA9IGNvbnRleHQgPT09IFJlYWN0UmVkdXhDb250ZXh0ID8gdXNlRGVmYXVsdFN0b3JlIDogY3JlYXRlU3RvcmVIb29rKGNvbnRleHQpO1xuICByZXR1cm4gZnVuY3Rpb24gdXNlRGlzcGF0Y2goKSB7XG4gICAgdmFyIHN0b3JlID0gdXNlU3RvcmUoKTtcbiAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2g7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggYGRpc3BhdGNoYCBmdW5jdGlvbi5cclxuICpcclxuICogQHJldHVybnMge2FueXxmdW5jdGlvbn0gcmVkdXggc3RvcmUncyBgZGlzcGF0Y2hgIGZ1bmN0aW9uXHJcbiAqXHJcbiAqIEBleGFtcGxlXHJcbiAqXHJcbiAqIGltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICh7IHZhbHVlIH0pID0+IHtcclxuICogICBjb25zdCBkaXNwYXRjaCA9IHVzZURpc3BhdGNoKClcclxuICogICBjb25zdCBpbmNyZWFzZUNvdW50ZXIgPSB1c2VDYWxsYmFjaygoKSA9PiBkaXNwYXRjaCh7IHR5cGU6ICdpbmNyZWFzZS1jb3VudGVyJyB9KSwgW10pXHJcbiAqICAgcmV0dXJuIChcclxuICogICAgIDxkaXY+XHJcbiAqICAgICAgIDxzcGFuPnt2YWx1ZX08L3NwYW4+XHJcbiAqICAgICAgIDxidXR0b24gb25DbGljaz17aW5jcmVhc2VDb3VudGVyfT5JbmNyZWFzZSBjb3VudGVyPC9idXR0b24+XHJcbiAqICAgICA8L2Rpdj5cclxuICogICApXHJcbiAqIH1cclxuICovXG5cbmV4cG9ydCB2YXIgdXNlRGlzcGF0Y2ggPSAvKiNfX1BVUkVfXyovY3JlYXRlRGlzcGF0Y2hIb29rKCk7Il0sIm5hbWVzIjpbIlJlYWN0UmVkdXhDb250ZXh0IiwidXNlU3RvcmUiLCJ1c2VEZWZhdWx0U3RvcmUiLCJjcmVhdGVTdG9yZUhvb2siLCJjcmVhdGVEaXNwYXRjaEhvb2siLCJjb250ZXh0IiwidXNlRGlzcGF0Y2giLCJzdG9yZSIsImRpc3BhdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/hooks/useDispatch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/hooks/useReduxContext.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useReduxContext.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useReduxContext: function() { return /* binding */ useReduxContext; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\nvar _s = $RefreshSig$();\n\n\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */ function useReduxContext() {\n    _s();\n    var contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext);\n    if ( true && !contextValue) {\n        throw new Error(\"could not find react-redux context value; please ensure the component is wrapped in a <Provider>\");\n    }\n    return contextValue;\n}\n_s(useReduxContext, \"LIxFXvZbUdXE/TWxKLLXMjM3Mig=\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VSZWR1eENvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBbUM7QUFDdUI7QUFDMUQ7Ozs7Ozs7Ozs7Ozs7OztDQWVDLEdBRU0sU0FBU0U7O0lBQ2QsSUFBSUMsZUFBZUgsaURBQVVBLENBQUNDLGtFQUFpQkE7SUFFL0MsSUFBSUcsS0FBeUIsSUFBZ0IsQ0FBQ0QsY0FBYztRQUMxRCxNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFFQSxPQUFPRjtBQUNUO0dBUmdCRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvaG9va3MvdXNlUmVkdXhDb250ZXh0LmpzPzkwNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Db250ZXh0Jztcbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSB2YWx1ZSBvZiB0aGUgYFJlYWN0UmVkdXhDb250ZXh0YC4gVGhpcyBpcyBhIGxvdy1sZXZlbFxyXG4gKiBob29rIHRoYXQgeW91IHNob3VsZCB1c3VhbGx5IG5vdCBuZWVkIHRvIGNhbGwgZGlyZWN0bHkuXHJcbiAqXHJcbiAqIEByZXR1cm5zIHthbnl9IHRoZSB2YWx1ZSBvZiB0aGUgYFJlYWN0UmVkdXhDb250ZXh0YFxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICh7IHZhbHVlIH0pID0+IHtcclxuICogICBjb25zdCB7IHN0b3JlIH0gPSB1c2VSZWR1eENvbnRleHQoKVxyXG4gKiAgIHJldHVybiA8ZGl2PntzdG9yZS5nZXRTdGF0ZSgpfTwvZGl2PlxyXG4gKiB9XHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlUmVkdXhDb250ZXh0KCkge1xuICB2YXIgY29udGV4dFZhbHVlID0gdXNlQ29udGV4dChSZWFjdFJlZHV4Q29udGV4dCk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWNvbnRleHRWYWx1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcignY291bGQgbm90IGZpbmQgcmVhY3QtcmVkdXggY29udGV4dCB2YWx1ZTsgcGxlYXNlIGVuc3VyZSB0aGUgY29tcG9uZW50IGlzIHdyYXBwZWQgaW4gYSA8UHJvdmlkZXI+Jyk7XG4gIH1cblxuICByZXR1cm4gY29udGV4dFZhbHVlO1xufSJdLCJuYW1lcyI6WyJ1c2VDb250ZXh0IiwiUmVhY3RSZWR1eENvbnRleHQiLCJ1c2VSZWR1eENvbnRleHQiLCJjb250ZXh0VmFsdWUiLCJwcm9jZXNzIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/hooks/useReduxContext.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/hooks/useSelector.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useSelector.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSelectorHook: function() { return /* binding */ createSelectorHook; },\n/* harmony export */   useSelector: function() { return /* binding */ useSelector; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useReduxContext */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useReduxContext.js\");\n/* harmony import */ var _utils_Subscription__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Subscription */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js\");\n/* harmony import */ var _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/useIsomorphicLayoutEffect */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js\");\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\nvar _s = $RefreshSig$();\n\n\n\n\n\nvar refEquality = function refEquality(a, b) {\n    return a === b;\n};\nfunction useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub) {\n    _s();\n    var _useReducer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(function(s) {\n        return s + 1;\n    }, 0), forceRender = _useReducer[1];\n    var subscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n        return (0,_utils_Subscription__WEBPACK_IMPORTED_MODULE_2__.createSubscription)(store, contextSub);\n    }, [\n        store,\n        contextSub\n    ]);\n    var latestSubscriptionCallbackError = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var latestSelector = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var latestStoreState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var latestSelectedState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var storeState = store.getState();\n    var selectedState;\n    try {\n        if (selector !== latestSelector.current || storeState !== latestStoreState.current || latestSubscriptionCallbackError.current) {\n            var newSelectedState = selector(storeState); // ensure latest selected state is reused so that a custom equality function can result in identical references\n            if (latestSelectedState.current === undefined || !equalityFn(newSelectedState, latestSelectedState.current)) {\n                selectedState = newSelectedState;\n            } else {\n                selectedState = latestSelectedState.current;\n            }\n        } else {\n            selectedState = latestSelectedState.current;\n        }\n    } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n            err.message += \"\\nThe error may be correlated with this previous error:\\n\" + latestSubscriptionCallbackError.current.stack + \"\\n\\n\";\n        }\n        throw err;\n    }\n    (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(function() {\n        latestSelector.current = selector;\n        latestStoreState.current = storeState;\n        latestSelectedState.current = selectedState;\n        latestSubscriptionCallbackError.current = undefined;\n    });\n    (0,_utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect)(function() {\n        function checkForUpdates() {\n            try {\n                var newStoreState = store.getState(); // Avoid calling selector multiple times if the store's state has not changed\n                if (newStoreState === latestStoreState.current) {\n                    return;\n                }\n                var _newSelectedState = latestSelector.current(newStoreState);\n                if (equalityFn(_newSelectedState, latestSelectedState.current)) {\n                    return;\n                }\n                latestSelectedState.current = _newSelectedState;\n                latestStoreState.current = newStoreState;\n            } catch (err) {\n                // we ignore all errors here, since when the component\n                // is re-rendered, the selectors are called again, and\n                // will throw again, if neither props nor store state\n                // changed\n                latestSubscriptionCallbackError.current = err;\n            }\n            forceRender();\n        }\n        subscription.onStateChange = checkForUpdates;\n        subscription.trySubscribe();\n        checkForUpdates();\n        return function() {\n            return subscription.tryUnsubscribe();\n        };\n    }, [\n        store,\n        subscription\n    ]);\n    return selectedState;\n}\n_s(useSelectorWithStoreAndSubscription, \"5euKTfuwyRwivWs3WCVUSSMgLsM=\", false, function() {\n    return [\n        _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect,\n        _utils_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_3__.useIsomorphicLayoutEffect\n    ];\n});\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */ function createSelectorHook(context) {\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n    if (context === void 0) {\n        context = _components_Context__WEBPACK_IMPORTED_MODULE_4__.ReactReduxContext;\n    }\n    var useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_4__.ReactReduxContext ? _useReduxContext__WEBPACK_IMPORTED_MODULE_1__.useReduxContext : _s(function() {\n        _s();\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);\n    }, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n    return _s1(function useSelector(selector, equalityFn) {\n        _s1();\n        if (equalityFn === void 0) {\n            equalityFn = refEquality;\n        }\n        if (true) {\n            if (!selector) {\n                throw new Error(\"You must pass a selector to useSelector\");\n            }\n            if (typeof selector !== \"function\") {\n                throw new Error(\"You must pass a function as a selector to useSelector\");\n            }\n            if (typeof equalityFn !== \"function\") {\n                throw new Error(\"You must pass a function as an equality function to useSelector\");\n            }\n        }\n        var _useReduxContext = useReduxContext(), store = _useReduxContext.store, contextSub = _useReduxContext.subscription;\n        var selectedState = useSelectorWithStoreAndSubscription(selector, equalityFn, store, contextSub);\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useDebugValue)(selectedState);\n        return selectedState;\n    }, \"H1xQ5QjDlRhEtRCg1LZv6h2qAQ4=\", false, function() {\n        return [\n            useReduxContext,\n            useReduxContext,\n            useReduxContext,\n            useSelectorWithStoreAndSubscription\n        ];\n    });\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */ var useSelector = /*#__PURE__*/ createSelectorHook();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/hooks/useSelector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/hooks/useStore.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-redux/es/hooks/useStore.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStoreHook: function() { return /* binding */ createStoreHook; },\n/* harmony export */   useStore: function() { return /* binding */ useStore; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/Context */ \"(app-pages-browser)/./node_modules/react-redux/es/components/Context.js\");\n/* harmony import */ var _useReduxContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useReduxContext */ \"(app-pages-browser)/./node_modules/react-redux/es/hooks/useReduxContext.js\");\n\n\n\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */ function createStoreHook(context) {\n    var _s = $RefreshSig$(), _s1 = $RefreshSig$();\n    if (context === void 0) {\n        context = _components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext;\n    }\n    var useReduxContext = context === _components_Context__WEBPACK_IMPORTED_MODULE_1__.ReactReduxContext ? _useReduxContext__WEBPACK_IMPORTED_MODULE_2__.useReduxContext : _s(function() {\n        _s();\n        return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(context);\n    }, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n    return _s1(function useStore() {\n        _s1();\n        var _useReduxContext = useReduxContext(), store = _useReduxContext.store;\n        return store;\n    }, \"jlqbpvFzUCZURbueP+eR2Fq2be8=\", false, function() {\n        return [\n            useReduxContext,\n            useReduxContext\n        ];\n    });\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */ var useStore = /*#__PURE__*/ createStoreHook();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VTdG9yZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBbUM7QUFDdUI7QUFDb0I7QUFDOUU7Ozs7O0NBS0MsR0FFTSxTQUFTSSxnQkFBZ0JDLE9BQU87O0lBQ3JDLElBQUlBLFlBQVksS0FBSyxHQUFHO1FBQ3RCQSxVQUFVSixrRUFBaUJBO0lBQzdCO0lBRUEsSUFBSUMsa0JBQWtCRyxZQUFZSixrRUFBaUJBLEdBQUdFLDZEQUFzQkEsTUFBRzs7UUFDN0UsT0FBT0gsaURBQVVBLENBQUNLO0lBQ3BCO0lBQ0EsV0FBTyxTQUFTQzs7UUFDZCxJQUFJQyxtQkFBbUJMLG1CQUNuQk0sUUFBUUQsaUJBQWlCQyxLQUFLO1FBRWxDLE9BQU9BO0lBQ1Q7O1lBSnlCTjtZQUFBQTs7O0FBSzNCO0FBQ0E7Ozs7Ozs7Ozs7Ozs7O0NBY0MsR0FFTSxJQUFJSSxXQUFXLFdBQVcsR0FBRUYsa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9ob29rcy91c2VTdG9yZS5qcz8zYmQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4uL2NvbXBvbmVudHMvQ29udGV4dCc7XG5pbXBvcnQgeyB1c2VSZWR1eENvbnRleHQgYXMgdXNlRGVmYXVsdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vdXNlUmVkdXhDb250ZXh0Jztcbi8qKlxyXG4gKiBIb29rIGZhY3RvcnksIHdoaWNoIGNyZWF0ZXMgYSBgdXNlU3RvcmVgIGhvb2sgYm91bmQgdG8gYSBnaXZlbiBjb250ZXh0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge1JlYWN0LkNvbnRleHR9IFtjb250ZXh0PVJlYWN0UmVkdXhDb250ZXh0XSBDb250ZXh0IHBhc3NlZCB0byB5b3VyIGA8UHJvdmlkZXI+YC5cclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIGB1c2VTdG9yZWAgaG9vayBib3VuZCB0byB0aGUgc3BlY2lmaWVkIGNvbnRleHQuXHJcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RvcmVIb29rKGNvbnRleHQpIHtcbiAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkge1xuICAgIGNvbnRleHQgPSBSZWFjdFJlZHV4Q29udGV4dDtcbiAgfVxuXG4gIHZhciB1c2VSZWR1eENvbnRleHQgPSBjb250ZXh0ID09PSBSZWFjdFJlZHV4Q29udGV4dCA/IHVzZURlZmF1bHRSZWR1eENvbnRleHQgOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHVzZUNvbnRleHQoY29udGV4dCk7XG4gIH07XG4gIHJldHVybiBmdW5jdGlvbiB1c2VTdG9yZSgpIHtcbiAgICB2YXIgX3VzZVJlZHV4Q29udGV4dCA9IHVzZVJlZHV4Q29udGV4dCgpLFxuICAgICAgICBzdG9yZSA9IF91c2VSZWR1eENvbnRleHQuc3RvcmU7XG5cbiAgICByZXR1cm4gc3RvcmU7XG4gIH07XG59XG4vKipcclxuICogQSBob29rIHRvIGFjY2VzcyB0aGUgcmVkdXggc3RvcmUuXHJcbiAqXHJcbiAqIEByZXR1cm5zIHthbnl9IHRoZSByZWR1eCBzdG9yZVxyXG4gKlxyXG4gKiBAZXhhbXBsZVxyXG4gKlxyXG4gKiBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbiAqIGltcG9ydCB7IHVzZVN0b3JlIH0gZnJvbSAncmVhY3QtcmVkdXgnXHJcbiAqXHJcbiAqIGV4cG9ydCBjb25zdCBFeGFtcGxlQ29tcG9uZW50ID0gKCkgPT4ge1xyXG4gKiAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoKVxyXG4gKiAgIHJldHVybiA8ZGl2PntzdG9yZS5nZXRTdGF0ZSgpfTwvZGl2PlxyXG4gKiB9XHJcbiAqL1xuXG5leHBvcnQgdmFyIHVzZVN0b3JlID0gLyojX19QVVJFX18qL2NyZWF0ZVN0b3JlSG9vaygpOyJdLCJuYW1lcyI6WyJ1c2VDb250ZXh0IiwiUmVhY3RSZWR1eENvbnRleHQiLCJ1c2VSZWR1eENvbnRleHQiLCJ1c2VEZWZhdWx0UmVkdXhDb250ZXh0IiwiY3JlYXRlU3RvcmVIb29rIiwiY29udGV4dCIsInVzZVN0b3JlIiwiX3VzZVJlZHV4Q29udGV4dCIsInN0b3JlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/hooks/useStore.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-redux/es/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Provider: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.Provider; },\n/* harmony export */   ReactReduxContext: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.ReactReduxContext; },\n/* harmony export */   batch: function() { return /* reexport safe */ _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_1__.unstable_batchedUpdates; },\n/* harmony export */   connect: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.connect; },\n/* harmony export */   connectAdvanced: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.connectAdvanced; },\n/* harmony export */   createDispatchHook: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.createDispatchHook; },\n/* harmony export */   createSelectorHook: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.createSelectorHook; },\n/* harmony export */   createStoreHook: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.createStoreHook; },\n/* harmony export */   shallowEqual: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.shallowEqual; },\n/* harmony export */   useDispatch: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.useDispatch; },\n/* harmony export */   useSelector: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.useSelector; },\n/* harmony export */   useStore: function() { return /* reexport safe */ _exports__WEBPACK_IMPORTED_MODULE_0__.useStore; }\n/* harmony export */ });\n/* harmony import */ var _exports__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exports */ \"(app-pages-browser)/./node_modules/react-redux/es/exports.js\");\n/* harmony import */ var _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/reactBatchedUpdates */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/reactBatchedUpdates.js\");\n/* harmony import */ var _utils_batch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/batch */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/batch.js\");\n\n\n // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n(0,_utils_batch__WEBPACK_IMPORTED_MODULE_2__.setBatch)(_utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_1__.unstable_batchedUpdates);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMEI7QUFDcUQ7QUFDdEMsQ0FBQyxzREFBc0Q7QUFDaEcseURBQXlEO0FBRXpERSxzREFBUUEsQ0FBQ0QsK0VBQUtBO0FBQ0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2luZGV4LmpzPzUzMjUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9leHBvcnRzJztcbmltcG9ydCB7IHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIGFzIGJhdGNoIH0gZnJvbSAnLi91dGlscy9yZWFjdEJhdGNoZWRVcGRhdGVzJztcbmltcG9ydCB7IHNldEJhdGNoIH0gZnJvbSAnLi91dGlscy9iYXRjaCc7IC8vIEVuYWJsZSBiYXRjaGVkIHVwZGF0ZXMgaW4gb3VyIHN1YnNjcmlwdGlvbnMgZm9yIHVzZVxuLy8gd2l0aCBzdGFuZGFyZCBSZWFjdCByZW5kZXJlcnMgKFJlYWN0RE9NLCBSZWFjdCBOYXRpdmUpXG5cbnNldEJhdGNoKGJhdGNoKTtcbmV4cG9ydCB7IGJhdGNoIH07Il0sIm5hbWVzIjpbInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwiYmF0Y2giLCJzZXRCYXRjaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/Subscription.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSubscription: function() { return /* binding */ createSubscription; }\n/* harmony export */ });\n/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batch */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/batch.js\");\n // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\nfunction createListenerCollection() {\n    var batch = (0,_batch__WEBPACK_IMPORTED_MODULE_0__.getBatch)();\n    var first = null;\n    var last = null;\n    return {\n        clear: function clear() {\n            first = null;\n            last = null;\n        },\n        notify: function notify() {\n            batch(function() {\n                var listener = first;\n                while(listener){\n                    listener.callback();\n                    listener = listener.next;\n                }\n            });\n        },\n        get: function get() {\n            var listeners = [];\n            var listener = first;\n            while(listener){\n                listeners.push(listener);\n                listener = listener.next;\n            }\n            return listeners;\n        },\n        subscribe: function subscribe(callback) {\n            var isSubscribed = true;\n            var listener = last = {\n                callback: callback,\n                next: null,\n                prev: last\n            };\n            if (listener.prev) {\n                listener.prev.next = listener;\n            } else {\n                first = listener;\n            }\n            return function unsubscribe() {\n                if (!isSubscribed || first === null) return;\n                isSubscribed = false;\n                if (listener.next) {\n                    listener.next.prev = listener.prev;\n                } else {\n                    last = listener.prev;\n                }\n                if (listener.prev) {\n                    listener.prev.next = listener.next;\n                } else {\n                    first = listener.next;\n                }\n            };\n        }\n    };\n}\nvar nullListeners = {\n    notify: function notify() {},\n    get: function get() {\n        return [];\n    }\n};\nfunction createSubscription(store, parentSub) {\n    var unsubscribe;\n    var listeners = nullListeners;\n    function addNestedSub(listener) {\n        trySubscribe();\n        return listeners.subscribe(listener);\n    }\n    function notifyNestedSubs() {\n        listeners.notify();\n    }\n    function handleChangeWrapper() {\n        if (subscription.onStateChange) {\n            subscription.onStateChange();\n        }\n    }\n    function isSubscribed() {\n        return Boolean(unsubscribe);\n    }\n    function trySubscribe() {\n        if (!unsubscribe) {\n            unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n            listeners = createListenerCollection();\n        }\n    }\n    function tryUnsubscribe() {\n        if (unsubscribe) {\n            unsubscribe();\n            unsubscribe = undefined;\n            listeners.clear();\n            listeners = nullListeners;\n        }\n    }\n    var subscription = {\n        addNestedSub: addNestedSub,\n        notifyNestedSubs: notifyNestedSubs,\n        handleChangeWrapper: handleChangeWrapper,\n        isSubscribed: isSubscribed,\n        trySubscribe: trySubscribe,\n        tryUnsubscribe: tryUnsubscribe,\n        getListeners: function getListeners() {\n            return listeners;\n        }\n    };\n    return subscription;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9TdWJzY3JpcHRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUMsQ0FBQyx3RkFBd0Y7QUFDNUgsb0ZBQW9GO0FBQ3BGLG1EQUFtRDtBQUVuRCxTQUFTQztJQUNQLElBQUlDLFFBQVFGLGdEQUFRQTtJQUNwQixJQUFJRyxRQUFRO0lBQ1osSUFBSUMsT0FBTztJQUNYLE9BQU87UUFDTEMsT0FBTyxTQUFTQTtZQUNkRixRQUFRO1lBQ1JDLE9BQU87UUFDVDtRQUNBRSxRQUFRLFNBQVNBO1lBQ2ZKLE1BQU07Z0JBQ0osSUFBSUssV0FBV0o7Z0JBRWYsTUFBT0ksU0FBVTtvQkFDZkEsU0FBU0MsUUFBUTtvQkFDakJELFdBQVdBLFNBQVNFLElBQUk7Z0JBQzFCO1lBQ0Y7UUFDRjtRQUNBQyxLQUFLLFNBQVNBO1lBQ1osSUFBSUMsWUFBWSxFQUFFO1lBQ2xCLElBQUlKLFdBQVdKO1lBRWYsTUFBT0ksU0FBVTtnQkFDZkksVUFBVUMsSUFBSSxDQUFDTDtnQkFDZkEsV0FBV0EsU0FBU0UsSUFBSTtZQUMxQjtZQUVBLE9BQU9FO1FBQ1Q7UUFDQUUsV0FBVyxTQUFTQSxVQUFVTCxRQUFRO1lBQ3BDLElBQUlNLGVBQWU7WUFDbkIsSUFBSVAsV0FBV0gsT0FBTztnQkFDcEJJLFVBQVVBO2dCQUNWQyxNQUFNO2dCQUNOTSxNQUFNWDtZQUNSO1lBRUEsSUFBSUcsU0FBU1EsSUFBSSxFQUFFO2dCQUNqQlIsU0FBU1EsSUFBSSxDQUFDTixJQUFJLEdBQUdGO1lBQ3ZCLE9BQU87Z0JBQ0xKLFFBQVFJO1lBQ1Y7WUFFQSxPQUFPLFNBQVNTO2dCQUNkLElBQUksQ0FBQ0YsZ0JBQWdCWCxVQUFVLE1BQU07Z0JBQ3JDVyxlQUFlO2dCQUVmLElBQUlQLFNBQVNFLElBQUksRUFBRTtvQkFDakJGLFNBQVNFLElBQUksQ0FBQ00sSUFBSSxHQUFHUixTQUFTUSxJQUFJO2dCQUNwQyxPQUFPO29CQUNMWCxPQUFPRyxTQUFTUSxJQUFJO2dCQUN0QjtnQkFFQSxJQUFJUixTQUFTUSxJQUFJLEVBQUU7b0JBQ2pCUixTQUFTUSxJQUFJLENBQUNOLElBQUksR0FBR0YsU0FBU0UsSUFBSTtnQkFDcEMsT0FBTztvQkFDTE4sUUFBUUksU0FBU0UsSUFBSTtnQkFDdkI7WUFDRjtRQUNGO0lBQ0Y7QUFDRjtBQUVBLElBQUlRLGdCQUFnQjtJQUNsQlgsUUFBUSxTQUFTQSxVQUFVO0lBQzNCSSxLQUFLLFNBQVNBO1FBQ1osT0FBTyxFQUFFO0lBQ1g7QUFDRjtBQUNPLFNBQVNRLG1CQUFtQkMsS0FBSyxFQUFFQyxTQUFTO0lBQ2pELElBQUlKO0lBQ0osSUFBSUwsWUFBWU07SUFFaEIsU0FBU0ksYUFBYWQsUUFBUTtRQUM1QmU7UUFDQSxPQUFPWCxVQUFVRSxTQUFTLENBQUNOO0lBQzdCO0lBRUEsU0FBU2dCO1FBQ1BaLFVBQVVMLE1BQU07SUFDbEI7SUFFQSxTQUFTa0I7UUFDUCxJQUFJQyxhQUFhQyxhQUFhLEVBQUU7WUFDOUJELGFBQWFDLGFBQWE7UUFDNUI7SUFDRjtJQUVBLFNBQVNaO1FBQ1AsT0FBT2EsUUFBUVg7SUFDakI7SUFFQSxTQUFTTTtRQUNQLElBQUksQ0FBQ04sYUFBYTtZQUNoQkEsY0FBY0ksWUFBWUEsVUFBVUMsWUFBWSxDQUFDRyx1QkFBdUJMLE1BQU1OLFNBQVMsQ0FBQ1c7WUFDeEZiLFlBQVlWO1FBQ2Q7SUFDRjtJQUVBLFNBQVMyQjtRQUNQLElBQUlaLGFBQWE7WUFDZkE7WUFDQUEsY0FBY2E7WUFDZGxCLFVBQVVOLEtBQUs7WUFDZk0sWUFBWU07UUFDZDtJQUNGO0lBRUEsSUFBSVEsZUFBZTtRQUNqQkosY0FBY0E7UUFDZEUsa0JBQWtCQTtRQUNsQkMscUJBQXFCQTtRQUNyQlYsY0FBY0E7UUFDZFEsY0FBY0E7UUFDZE0sZ0JBQWdCQTtRQUNoQkUsY0FBYyxTQUFTQTtZQUNyQixPQUFPbkI7UUFDVDtJQUNGO0lBQ0EsT0FBT2M7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvU3Vic2NyaXB0aW9uLmpzP2RiNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QmF0Y2ggfSBmcm9tICcuL2JhdGNoJzsgLy8gZW5jYXBzdWxhdGVzIHRoZSBzdWJzY3JpcHRpb24gbG9naWMgZm9yIGNvbm5lY3RpbmcgYSBjb21wb25lbnQgdG8gdGhlIHJlZHV4IHN0b3JlLCBhc1xuLy8gd2VsbCBhcyBuZXN0aW5nIHN1YnNjcmlwdGlvbnMgb2YgZGVzY2VuZGFudCBjb21wb25lbnRzLCBzbyB0aGF0IHdlIGNhbiBlbnN1cmUgdGhlXG4vLyBhbmNlc3RvciBjb21wb25lbnRzIHJlLXJlbmRlciBiZWZvcmUgZGVzY2VuZGFudHNcblxuZnVuY3Rpb24gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCkge1xuICB2YXIgYmF0Y2ggPSBnZXRCYXRjaCgpO1xuICB2YXIgZmlyc3QgPSBudWxsO1xuICB2YXIgbGFzdCA9IG51bGw7XG4gIHJldHVybiB7XG4gICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgZmlyc3QgPSBudWxsO1xuICAgICAgbGFzdCA9IG51bGw7XG4gICAgfSxcbiAgICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeSgpIHtcbiAgICAgIGJhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGxpc3RlbmVyID0gZmlyc3Q7XG5cbiAgICAgICAgd2hpbGUgKGxpc3RlbmVyKSB7XG4gICAgICAgICAgbGlzdGVuZXIuY2FsbGJhY2soKTtcbiAgICAgICAgICBsaXN0ZW5lciA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICB2YXIgbGlzdGVuZXJzID0gW107XG4gICAgICB2YXIgbGlzdGVuZXIgPSBmaXJzdDtcblxuICAgICAgd2hpbGUgKGxpc3RlbmVyKSB7XG4gICAgICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICAgICAgbGlzdGVuZXIgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbGlzdGVuZXJzO1xuICAgIH0sXG4gICAgc3Vic2NyaWJlOiBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgICAgIHZhciBpc1N1YnNjcmliZWQgPSB0cnVlO1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGFzdCA9IHtcbiAgICAgICAgY2FsbGJhY2s6IGNhbGxiYWNrLFxuICAgICAgICBuZXh0OiBudWxsLFxuICAgICAgICBwcmV2OiBsYXN0XG4gICAgICB9O1xuXG4gICAgICBpZiAobGlzdGVuZXIucHJldikge1xuICAgICAgICBsaXN0ZW5lci5wcmV2Lm5leHQgPSBsaXN0ZW5lcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZpcnN0ID0gbGlzdGVuZXI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgICAgaWYgKCFpc1N1YnNjcmliZWQgfHwgZmlyc3QgPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKGxpc3RlbmVyLm5leHQpIHtcbiAgICAgICAgICBsaXN0ZW5lci5uZXh0LnByZXYgPSBsaXN0ZW5lci5wcmV2O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxhc3QgPSBsaXN0ZW5lci5wcmV2O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGxpc3RlbmVyLnByZXYpIHtcbiAgICAgICAgICBsaXN0ZW5lci5wcmV2Lm5leHQgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZpcnN0ID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH07XG59XG5cbnZhciBudWxsTGlzdGVuZXJzID0ge1xuICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeSgpIHt9LFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbn07XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3Vic2NyaXB0aW9uKHN0b3JlLCBwYXJlbnRTdWIpIHtcbiAgdmFyIHVuc3Vic2NyaWJlO1xuICB2YXIgbGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcblxuICBmdW5jdGlvbiBhZGROZXN0ZWRTdWIobGlzdGVuZXIpIHtcbiAgICB0cnlTdWJzY3JpYmUoKTtcbiAgICByZXR1cm4gbGlzdGVuZXJzLnN1YnNjcmliZShsaXN0ZW5lcik7XG4gIH1cblxuICBmdW5jdGlvbiBub3RpZnlOZXN0ZWRTdWJzKCkge1xuICAgIGxpc3RlbmVycy5ub3RpZnkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUNoYW5nZVdyYXBwZXIoKSB7XG4gICAgaWYgKHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlKSB7XG4gICAgICBzdWJzY3JpcHRpb24ub25TdGF0ZUNoYW5nZSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih1bnN1YnNjcmliZSk7XG4gIH1cblxuICBmdW5jdGlvbiB0cnlTdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF1bnN1YnNjcmliZSkge1xuICAgICAgdW5zdWJzY3JpYmUgPSBwYXJlbnRTdWIgPyBwYXJlbnRTdWIuYWRkTmVzdGVkU3ViKGhhbmRsZUNoYW5nZVdyYXBwZXIpIDogc3RvcmUuc3Vic2NyaWJlKGhhbmRsZUNoYW5nZVdyYXBwZXIpO1xuICAgICAgbGlzdGVuZXJzID0gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gdHJ5VW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKHVuc3Vic2NyaWJlKSB7XG4gICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgdW5zdWJzY3JpYmUgPSB1bmRlZmluZWQ7XG4gICAgICBsaXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgIGxpc3RlbmVycyA9IG51bGxMaXN0ZW5lcnM7XG4gICAgfVxuICB9XG5cbiAgdmFyIHN1YnNjcmlwdGlvbiA9IHtcbiAgICBhZGROZXN0ZWRTdWI6IGFkZE5lc3RlZFN1YixcbiAgICBub3RpZnlOZXN0ZWRTdWJzOiBub3RpZnlOZXN0ZWRTdWJzLFxuICAgIGhhbmRsZUNoYW5nZVdyYXBwZXI6IGhhbmRsZUNoYW5nZVdyYXBwZXIsXG4gICAgaXNTdWJzY3JpYmVkOiBpc1N1YnNjcmliZWQsXG4gICAgdHJ5U3Vic2NyaWJlOiB0cnlTdWJzY3JpYmUsXG4gICAgdHJ5VW5zdWJzY3JpYmU6IHRyeVVuc3Vic2NyaWJlLFxuICAgIGdldExpc3RlbmVyczogZnVuY3Rpb24gZ2V0TGlzdGVuZXJzKCkge1xuICAgICAgcmV0dXJuIGxpc3RlbmVycztcbiAgICB9XG4gIH07XG4gIHJldHVybiBzdWJzY3JpcHRpb247XG59Il0sIm5hbWVzIjpbImdldEJhdGNoIiwiY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uIiwiYmF0Y2giLCJmaXJzdCIsImxhc3QiLCJjbGVhciIsIm5vdGlmeSIsImxpc3RlbmVyIiwiY2FsbGJhY2siLCJuZXh0IiwiZ2V0IiwibGlzdGVuZXJzIiwicHVzaCIsInN1YnNjcmliZSIsImlzU3Vic2NyaWJlZCIsInByZXYiLCJ1bnN1YnNjcmliZSIsIm51bGxMaXN0ZW5lcnMiLCJjcmVhdGVTdWJzY3JpcHRpb24iLCJzdG9yZSIsInBhcmVudFN1YiIsImFkZE5lc3RlZFN1YiIsInRyeVN1YnNjcmliZSIsIm5vdGlmeU5lc3RlZFN1YnMiLCJoYW5kbGVDaGFuZ2VXcmFwcGVyIiwic3Vic2NyaXB0aW9uIiwib25TdGF0ZUNoYW5nZSIsIkJvb2xlYW4iLCJ0cnlVbnN1YnNjcmliZSIsInVuZGVmaW5lZCIsImdldExpc3RlbmVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/Subscription.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/batch.js":
/*!****************************************************!*\
  !*** ./node_modules/react-redux/es/utils/batch.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBatch: function() { return /* binding */ getBatch; },\n/* harmony export */   setBatch: function() { return /* binding */ setBatch; }\n/* harmony export */ });\n// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n    callback();\n}\nvar batch = defaultNoopBatch; // Allow injecting another batching function later\nvar setBatch = function setBatch(newBatch) {\n    return batch = newBatch;\n}; // Supply a getter just to skip dealing with ESM bindings\nvar getBatch = function getBatch() {\n    return batch;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHdFQUF3RTtBQUN4RSxTQUFTQSxpQkFBaUJDLFFBQVE7SUFDaENBO0FBQ0Y7QUFFQSxJQUFJQyxRQUFRRixrQkFBa0Isa0RBQWtEO0FBRXpFLElBQUlHLFdBQVcsU0FBU0EsU0FBU0MsUUFBUTtJQUM5QyxPQUFPRixRQUFRRTtBQUNqQixFQUFFLENBQUMseURBQXlEO0FBRXJELElBQUlDLFdBQVcsU0FBU0E7SUFDN0IsT0FBT0g7QUFDVCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcz8xNGQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIERlZmF1bHQgdG8gYSBkdW1teSBcImJhdGNoXCIgaW1wbGVtZW50YXRpb24gdGhhdCBqdXN0IHJ1bnMgdGhlIGNhbGxiYWNrXG5mdW5jdGlvbiBkZWZhdWx0Tm9vcEJhdGNoKGNhbGxiYWNrKSB7XG4gIGNhbGxiYWNrKCk7XG59XG5cbnZhciBiYXRjaCA9IGRlZmF1bHROb29wQmF0Y2g7IC8vIEFsbG93IGluamVjdGluZyBhbm90aGVyIGJhdGNoaW5nIGZ1bmN0aW9uIGxhdGVyXG5cbmV4cG9ydCB2YXIgc2V0QmF0Y2ggPSBmdW5jdGlvbiBzZXRCYXRjaChuZXdCYXRjaCkge1xuICByZXR1cm4gYmF0Y2ggPSBuZXdCYXRjaDtcbn07IC8vIFN1cHBseSBhIGdldHRlciBqdXN0IHRvIHNraXAgZGVhbGluZyB3aXRoIEVTTSBiaW5kaW5nc1xuXG5leHBvcnQgdmFyIGdldEJhdGNoID0gZnVuY3Rpb24gZ2V0QmF0Y2goKSB7XG4gIHJldHVybiBiYXRjaDtcbn07Il0sIm5hbWVzIjpbImRlZmF1bHROb29wQmF0Y2giLCJjYWxsYmFjayIsImJhdGNoIiwic2V0QmF0Y2giLCJuZXdCYXRjaCIsImdldEJhdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/batch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/bindActionCreators.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/bindActionCreators.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ bindActionCreators; }\n/* harmony export */ });\nfunction bindActionCreators(actionCreators, dispatch) {\n    var boundActionCreators = {};\n    var _loop = function _loop(key) {\n        var actionCreator = actionCreators[key];\n        if (typeof actionCreator === \"function\") {\n            boundActionCreators[key] = function() {\n                return dispatch(actionCreator.apply(void 0, arguments));\n            };\n        }\n    };\n    for(var key in actionCreators){\n        _loop(key);\n    }\n    return boundActionCreators;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iaW5kQWN0aW9uQ3JlYXRvcnMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLFNBQVNBLG1CQUFtQkMsY0FBYyxFQUFFQyxRQUFRO0lBQ2pFLElBQUlDLHNCQUFzQixDQUFDO0lBRTNCLElBQUlDLFFBQVEsU0FBU0EsTUFBTUMsR0FBRztRQUM1QixJQUFJQyxnQkFBZ0JMLGNBQWMsQ0FBQ0ksSUFBSTtRQUV2QyxJQUFJLE9BQU9DLGtCQUFrQixZQUFZO1lBQ3ZDSCxtQkFBbUIsQ0FBQ0UsSUFBSSxHQUFHO2dCQUN6QixPQUFPSCxTQUFTSSxjQUFjQyxLQUFLLENBQUMsS0FBSyxHQUFHQztZQUM5QztRQUNGO0lBQ0Y7SUFFQSxJQUFLLElBQUlILE9BQU9KLGVBQWdCO1FBQzlCRyxNQUFNQztJQUNSO0lBRUEsT0FBT0Y7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvYmluZEFjdGlvbkNyZWF0b3JzLmpzPzRlZTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmluZEFjdGlvbkNyZWF0b3JzKGFjdGlvbkNyZWF0b3JzLCBkaXNwYXRjaCkge1xuICB2YXIgYm91bmRBY3Rpb25DcmVhdG9ycyA9IHt9O1xuXG4gIHZhciBfbG9vcCA9IGZ1bmN0aW9uIF9sb29wKGtleSkge1xuICAgIHZhciBhY3Rpb25DcmVhdG9yID0gYWN0aW9uQ3JlYXRvcnNba2V5XTtcblxuICAgIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYm91bmRBY3Rpb25DcmVhdG9yc1trZXldID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvci5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cykpO1xuICAgICAgfTtcbiAgICB9XG4gIH07XG5cbiAgZm9yICh2YXIga2V5IGluIGFjdGlvbkNyZWF0b3JzKSB7XG4gICAgX2xvb3Aoa2V5KTtcbiAgfVxuXG4gIHJldHVybiBib3VuZEFjdGlvbkNyZWF0b3JzO1xufSJdLCJuYW1lcyI6WyJiaW5kQWN0aW9uQ3JlYXRvcnMiLCJhY3Rpb25DcmVhdG9ycyIsImRpc3BhdGNoIiwiYm91bmRBY3Rpb25DcmVhdG9ycyIsIl9sb29wIiwia2V5IiwiYWN0aW9uQ3JlYXRvciIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/bindActionCreators.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/isPlainObject.js":
/*!************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/isPlainObject.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ isPlainObject; }\n/* harmony export */ });\n/**\r\n * @param {any} obj The object to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */ function isPlainObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) return false;\n    var proto = Object.getPrototypeOf(obj);\n    if (proto === null) return true;\n    var baseProto = proto;\n    while(Object.getPrototypeOf(baseProto) !== null){\n        baseProto = Object.getPrototypeOf(baseProto);\n    }\n    return proto === baseProto;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9pc1BsYWluT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0NBR0MsR0FDYyxTQUFTQSxjQUFjQyxHQUFHO0lBQ3ZDLElBQUksT0FBT0EsUUFBUSxZQUFZQSxRQUFRLE1BQU0sT0FBTztJQUNwRCxJQUFJQyxRQUFRQyxPQUFPQyxjQUFjLENBQUNIO0lBQ2xDLElBQUlDLFVBQVUsTUFBTSxPQUFPO0lBQzNCLElBQUlHLFlBQVlIO0lBRWhCLE1BQU9DLE9BQU9DLGNBQWMsQ0FBQ0MsZUFBZSxLQUFNO1FBQ2hEQSxZQUFZRixPQUFPQyxjQUFjLENBQUNDO0lBQ3BDO0lBRUEsT0FBT0gsVUFBVUc7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL2lzUGxhaW5PYmplY3QuanM/NTRkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHBhcmFtIHthbnl9IG9iaiBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXHJcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBhcmd1bWVudCBhcHBlYXJzIHRvIGJlIGEgcGxhaW4gb2JqZWN0LlxyXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiBmYWxzZTtcbiAgdmFyIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaik7XG4gIGlmIChwcm90byA9PT0gbnVsbCkgcmV0dXJuIHRydWU7XG4gIHZhciBiYXNlUHJvdG8gPSBwcm90bztcblxuICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGJhc2VQcm90bykgIT09IG51bGwpIHtcbiAgICBiYXNlUHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoYmFzZVByb3RvKTtcbiAgfVxuXG4gIHJldHVybiBwcm90byA9PT0gYmFzZVByb3RvO1xufSJdLCJuYW1lcyI6WyJpc1BsYWluT2JqZWN0Iiwib2JqIiwicHJvdG8iLCJPYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsImJhc2VQcm90byJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/isPlainObject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/reactBatchedUpdates.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/reactBatchedUpdates.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unstable_batchedUpdates: function() { return /* reexport safe */ react_dom__WEBPACK_IMPORTED_MODULE_0__.unstable_batchedUpdates; }\n/* harmony export */ });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\n/* eslint-disable import/no-unresolved */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9yZWFjdEJhdGNoZWRVcGRhdGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsdUNBQXVDLEdBQ2EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXMuanM/YjM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBpbXBvcnQvbm8tdW5yZXNvbHZlZCAqL1xuZXhwb3J0IHsgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMgfSBmcm9tICdyZWFjdC1kb20nOyJdLCJuYW1lcyI6WyJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/reactBatchedUpdates.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/shallowEqual.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-redux/es/utils/shallowEqual.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ shallowEqual; }\n/* harmony export */ });\nfunction is(x, y) {\n    if (x === y) {\n        return x !== 0 || y !== 0 || 1 / x === 1 / y;\n    } else {\n        return x !== x && y !== y;\n    }\n}\nfunction shallowEqual(objA, objB) {\n    if (is(objA, objB)) return true;\n    if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n        return false;\n    }\n    var keysA = Object.keys(objA);\n    var keysB = Object.keys(objB);\n    if (keysA.length !== keysB.length) return false;\n    for(var i = 0; i < keysA.length; i++){\n        if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9zaGFsbG93RXF1YWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLEdBQUdDLENBQUMsRUFBRUMsQ0FBQztJQUNkLElBQUlELE1BQU1DLEdBQUc7UUFDWCxPQUFPRCxNQUFNLEtBQUtDLE1BQU0sS0FBSyxJQUFJRCxNQUFNLElBQUlDO0lBQzdDLE9BQU87UUFDTCxPQUFPRCxNQUFNQSxLQUFLQyxNQUFNQTtJQUMxQjtBQUNGO0FBRWUsU0FBU0MsYUFBYUMsSUFBSSxFQUFFQyxJQUFJO0lBQzdDLElBQUlMLEdBQUdJLE1BQU1DLE9BQU8sT0FBTztJQUUzQixJQUFJLE9BQU9ELFNBQVMsWUFBWUEsU0FBUyxRQUFRLE9BQU9DLFNBQVMsWUFBWUEsU0FBUyxNQUFNO1FBQzFGLE9BQU87SUFDVDtJQUVBLElBQUlDLFFBQVFDLE9BQU9DLElBQUksQ0FBQ0o7SUFDeEIsSUFBSUssUUFBUUYsT0FBT0MsSUFBSSxDQUFDSDtJQUN4QixJQUFJQyxNQUFNSSxNQUFNLEtBQUtELE1BQU1DLE1BQU0sRUFBRSxPQUFPO0lBRTFDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJTCxNQUFNSSxNQUFNLEVBQUVDLElBQUs7UUFDckMsSUFBSSxDQUFDSixPQUFPSyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDVCxNQUFNQyxLQUFLLENBQUNLLEVBQUUsS0FBSyxDQUFDWCxHQUFHSSxJQUFJLENBQUNFLEtBQUssQ0FBQ0ssRUFBRSxDQUFDLEVBQUVOLElBQUksQ0FBQ0MsS0FBSyxDQUFDSyxFQUFFLENBQUMsR0FBRztZQUNoRyxPQUFPO1FBQ1Q7SUFDRjtJQUVBLE9BQU87QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvc2hhbGxvd0VxdWFsLmpzPzc2NzYiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gaXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIpIHtcbiAgaWYgKGlzKG9iakEsIG9iakIpKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn0iXSwibmFtZXMiOlsiaXMiLCJ4IiwieSIsInNoYWxsb3dFcXVhbCIsIm9iakEiLCJvYmpCIiwia2V5c0EiLCJPYmplY3QiLCJrZXlzIiwia2V5c0IiLCJsZW5ndGgiLCJpIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/shallowEqual.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useIsomorphicLayoutEffect: function() { return /* binding */ useIsomorphicLayoutEffect; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\nvar useIsomorphicLayoutEffect =  true && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\" ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRCxDQUFDLDZFQUE2RTtBQUNqSSw2RUFBNkU7QUFDN0UsOEVBQThFO0FBQzlFLDhFQUE4RTtBQUM5RSxnRkFBZ0Y7QUFDaEYsNkVBQTZFO0FBQzdFLDBFQUEwRTtBQUMxRSxvRUFBb0U7QUFFN0QsSUFBSUUsNEJBQTRCLEtBQWtCLElBQWUsT0FBT0MsT0FBT0MsUUFBUSxLQUFLLGVBQWUsT0FBT0QsT0FBT0MsUUFBUSxDQUFDQyxhQUFhLEtBQUssY0FBY0osa0RBQWVBLEdBQUdELDRDQUFTQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzP2IyZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VMYXlvdXRFZmZlY3QgfSBmcm9tICdyZWFjdCc7IC8vIFJlYWN0IGN1cnJlbnRseSB0aHJvd3MgYSB3YXJuaW5nIHdoZW4gdXNpbmcgdXNlTGF5b3V0RWZmZWN0IG9uIHRoZSBzZXJ2ZXIuXG4vLyBUbyBnZXQgYXJvdW5kIGl0LCB3ZSBjYW4gY29uZGl0aW9uYWxseSB1c2VFZmZlY3Qgb24gdGhlIHNlcnZlciAobm8tb3ApIGFuZFxuLy8gdXNlTGF5b3V0RWZmZWN0IGluIHRoZSBicm93c2VyLiBXZSBuZWVkIHVzZUxheW91dEVmZmVjdCB0byBlbnN1cmUgdGhlIHN0b3JlXG4vLyBzdWJzY3JpcHRpb24gY2FsbGJhY2sgYWx3YXlzIGhhcyB0aGUgc2VsZWN0b3IgZnJvbSB0aGUgbGF0ZXN0IHJlbmRlciBjb21taXRcbi8vIGF2YWlsYWJsZSwgb3RoZXJ3aXNlIGEgc3RvcmUgdXBkYXRlIG1heSBoYXBwZW4gYmV0d2VlbiByZW5kZXIgYW5kIHRoZSBlZmZlY3QsXG4vLyB3aGljaCBtYXkgY2F1c2UgbWlzc2VkIHVwZGF0ZXM7IHdlIGFsc28gbXVzdCBlbnN1cmUgdGhlIHN0b3JlIHN1YnNjcmlwdGlvblxuLy8gaXMgY3JlYXRlZCBzeW5jaHJvbm91c2x5LCBvdGhlcndpc2UgYSBzdG9yZSB1cGRhdGUgbWF5IG9jY3VyIGJlZm9yZSB0aGVcbi8vIHN1YnNjcmlwdGlvbiBpcyBjcmVhdGVkIGFuZCBhbiBpbmNvbnNpc3RlbnQgc3RhdGUgbWF5IGJlIG9ic2VydmVkXG5cbmV4cG9ydCB2YXIgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCcgPyB1c2VMYXlvdXRFZmZlY3QgOiB1c2VFZmZlY3Q7Il0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QiLCJ3aW5kb3ciLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/verifyPlainObject.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-redux/es/utils/verifyPlainObject.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ verifyPlainObject; }\n/* harmony export */ });\n/* harmony import */ var _isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isPlainObject */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/isPlainObject.js\");\n/* harmony import */ var _warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./warning */ \"(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js\");\n\n\nfunction verifyPlainObject(value, displayName, methodName) {\n    if (!(0,_isPlainObject__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value)) {\n        (0,_warning__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(methodName + \"() in \" + displayName + \" must return a plain object. Instead received \" + value + \".\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy92ZXJpZnlQbGFpbk9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEM7QUFDWjtBQUNqQixTQUFTRSxrQkFBa0JDLEtBQUssRUFBRUMsV0FBVyxFQUFFQyxVQUFVO0lBQ3RFLElBQUksQ0FBQ0wsMERBQWFBLENBQUNHLFFBQVE7UUFDekJGLG9EQUFPQSxDQUFDSSxhQUFhLFdBQVdELGNBQWMsbURBQW1ERCxRQUFRO0lBQzNHO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL3ZlcmlmeVBsYWluT2JqZWN0LmpzPzBkMjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGlzUGxhaW5PYmplY3QgZnJvbSAnLi9pc1BsYWluT2JqZWN0JztcbmltcG9ydCB3YXJuaW5nIGZyb20gJy4vd2FybmluZyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2ZXJpZnlQbGFpbk9iamVjdCh2YWx1ZSwgZGlzcGxheU5hbWUsIG1ldGhvZE5hbWUpIHtcbiAgaWYgKCFpc1BsYWluT2JqZWN0KHZhbHVlKSkge1xuICAgIHdhcm5pbmcobWV0aG9kTmFtZSArIFwiKCkgaW4gXCIgKyBkaXNwbGF5TmFtZSArIFwiIG11c3QgcmV0dXJuIGEgcGxhaW4gb2JqZWN0LiBJbnN0ZWFkIHJlY2VpdmVkIFwiICsgdmFsdWUgKyBcIi5cIik7XG4gIH1cbn0iXSwibmFtZXMiOlsiaXNQbGFpbk9iamVjdCIsIndhcm5pbmciLCJ2ZXJpZnlQbGFpbk9iamVjdCIsInZhbHVlIiwiZGlzcGxheU5hbWUiLCJtZXRob2ROYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/verifyPlainObject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js":
/*!******************************************************!*\
  !*** ./node_modules/react-redux/es/utils/warning.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ warning; }\n/* harmony export */ });\n/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param {String} message The warning message.\r\n * @returns {void}\r\n */ function warning(message) {\n    /* eslint-disable no-console */ if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n        console.error(message);\n    }\n    /* eslint-enable no-console */ try {\n        // This error was thrown as a convenience so that if you enable\n        // \"break on all exceptions\" in your console,\n        // it would pause the execution at this line.\n        throw new Error(message);\n    /* eslint-disable no-empty */ } catch (e) {}\n/* eslint-enable no-empty */ }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy93YXJuaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUNjLFNBQVNBLFFBQVFDLE9BQU87SUFDckMsNkJBQTZCLEdBQzdCLElBQUksT0FBT0MsWUFBWSxlQUFlLE9BQU9BLFFBQVFDLEtBQUssS0FBSyxZQUFZO1FBQ3pFRCxRQUFRQyxLQUFLLENBQUNGO0lBQ2hCO0lBQ0EsNEJBQTRCLEdBRzVCLElBQUk7UUFDRiwrREFBK0Q7UUFDL0QsNkNBQTZDO1FBQzdDLDZDQUE2QztRQUM3QyxNQUFNLElBQUlHLE1BQU1IO0lBQ2hCLDJCQUEyQixHQUM3QixFQUFFLE9BQU9JLEdBQUcsQ0FBQztBQUNiLDBCQUEwQixHQUU1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvd2FybmluZy5qcz80NTk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBQcmludHMgYSB3YXJuaW5nIGluIHRoZSBjb25zb2xlIGlmIGl0IGV4aXN0cy5cclxuICpcclxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cclxuICogQHJldHVybnMge3ZvaWR9XHJcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2FybmluZyhtZXNzYWdlKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi9cbiAgaWYgKHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29uc29sZS5lcnJvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG5cblxuICB0cnkge1xuICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgaWYgeW91IGVuYWJsZVxuICAgIC8vIFwiYnJlYWsgb24gYWxsIGV4Y2VwdGlvbnNcIiBpbiB5b3VyIGNvbnNvbGUsXG4gICAgLy8gaXQgd291bGQgcGF1c2UgdGhlIGV4ZWN1dGlvbiBhdCB0aGlzIGxpbmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIC8qIGVzbGludC1kaXNhYmxlIG5vLWVtcHR5ICovXG4gIH0gY2F0Y2ggKGUpIHt9XG4gIC8qIGVzbGludC1lbmFibGUgbm8tZW1wdHkgKi9cblxufSJdLCJuYW1lcyI6WyJ3YXJuaW5nIiwibWVzc2FnZSIsImNvbnNvbGUiLCJlcnJvciIsIkVycm9yIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/es/utils/warning.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js":
/*!************************************************************************************!*\
  !*** ./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @license React v17.0.2\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n        // nor polyfill, then a plain number is used for performance.\n        var REACT_ELEMENT_TYPE = 0xeac7;\n        var REACT_PORTAL_TYPE = 0xeaca;\n        var REACT_FRAGMENT_TYPE = 0xeacb;\n        var REACT_STRICT_MODE_TYPE = 0xeacc;\n        var REACT_PROFILER_TYPE = 0xead2;\n        var REACT_PROVIDER_TYPE = 0xeacd;\n        var REACT_CONTEXT_TYPE = 0xeace;\n        var REACT_FORWARD_REF_TYPE = 0xead0;\n        var REACT_SUSPENSE_TYPE = 0xead1;\n        var REACT_SUSPENSE_LIST_TYPE = 0xead8;\n        var REACT_MEMO_TYPE = 0xead3;\n        var REACT_LAZY_TYPE = 0xead4;\n        var REACT_BLOCK_TYPE = 0xead9;\n        var REACT_SERVER_BLOCK_TYPE = 0xeada;\n        var REACT_FUNDAMENTAL_TYPE = 0xead5;\n        var REACT_SCOPE_TYPE = 0xead7;\n        var REACT_OPAQUE_ID_TYPE = 0xeae0;\n        var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\n        var REACT_OFFSCREEN_TYPE = 0xeae2;\n        var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\n        if (typeof Symbol === \"function\" && Symbol.for) {\n            var symbolFor = Symbol.for;\n            REACT_ELEMENT_TYPE = symbolFor(\"react.element\");\n            REACT_PORTAL_TYPE = symbolFor(\"react.portal\");\n            REACT_FRAGMENT_TYPE = symbolFor(\"react.fragment\");\n            REACT_STRICT_MODE_TYPE = symbolFor(\"react.strict_mode\");\n            REACT_PROFILER_TYPE = symbolFor(\"react.profiler\");\n            REACT_PROVIDER_TYPE = symbolFor(\"react.provider\");\n            REACT_CONTEXT_TYPE = symbolFor(\"react.context\");\n            REACT_FORWARD_REF_TYPE = symbolFor(\"react.forward_ref\");\n            REACT_SUSPENSE_TYPE = symbolFor(\"react.suspense\");\n            REACT_SUSPENSE_LIST_TYPE = symbolFor(\"react.suspense_list\");\n            REACT_MEMO_TYPE = symbolFor(\"react.memo\");\n            REACT_LAZY_TYPE = symbolFor(\"react.lazy\");\n            REACT_BLOCK_TYPE = symbolFor(\"react.block\");\n            REACT_SERVER_BLOCK_TYPE = symbolFor(\"react.server.block\");\n            REACT_FUNDAMENTAL_TYPE = symbolFor(\"react.fundamental\");\n            REACT_SCOPE_TYPE = symbolFor(\"react.scope\");\n            REACT_OPAQUE_ID_TYPE = symbolFor(\"react.opaque.id\");\n            REACT_DEBUG_TRACING_MODE_TYPE = symbolFor(\"react.debug_trace_mode\");\n            REACT_OFFSCREEN_TYPE = symbolFor(\"react.offscreen\");\n            REACT_LEGACY_HIDDEN_TYPE = symbolFor(\"react.legacy_hidden\");\n        }\n        // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function typeOf(object) {\n            if (typeof object === \"object\" && object !== null) {\n                var $$typeof = object.$$typeof;\n                switch($$typeof){\n                    case REACT_ELEMENT_TYPE:\n                        var type = object.type;\n                        switch(type){\n                            case REACT_FRAGMENT_TYPE:\n                            case REACT_PROFILER_TYPE:\n                            case REACT_STRICT_MODE_TYPE:\n                            case REACT_SUSPENSE_TYPE:\n                            case REACT_SUSPENSE_LIST_TYPE:\n                                return type;\n                            default:\n                                var $$typeofType = type && type.$$typeof;\n                                switch($$typeofType){\n                                    case REACT_CONTEXT_TYPE:\n                                    case REACT_FORWARD_REF_TYPE:\n                                    case REACT_LAZY_TYPE:\n                                    case REACT_MEMO_TYPE:\n                                    case REACT_PROVIDER_TYPE:\n                                        return $$typeofType;\n                                    default:\n                                        return $$typeof;\n                                }\n                        }\n                    case REACT_PORTAL_TYPE:\n                        return $$typeof;\n                }\n            }\n            return undefined;\n        }\n        var ContextConsumer = REACT_CONTEXT_TYPE;\n        var ContextProvider = REACT_PROVIDER_TYPE;\n        var Element = REACT_ELEMENT_TYPE;\n        var ForwardRef = REACT_FORWARD_REF_TYPE;\n        var Fragment = REACT_FRAGMENT_TYPE;\n        var Lazy = REACT_LAZY_TYPE;\n        var Memo = REACT_MEMO_TYPE;\n        var Portal = REACT_PORTAL_TYPE;\n        var Profiler = REACT_PROFILER_TYPE;\n        var StrictMode = REACT_STRICT_MODE_TYPE;\n        var Suspense = REACT_SUSPENSE_TYPE;\n        var hasWarnedAboutDeprecatedIsAsyncMode = false;\n        var hasWarnedAboutDeprecatedIsConcurrentMode = false; // AsyncMode should be deprecated\n        function isAsyncMode(object) {\n            {\n                if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n                    hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n                    console[\"warn\"](\"The ReactIs.isAsyncMode() alias has been deprecated, \" + \"and will be removed in React 18+.\");\n                }\n            }\n            return false;\n        }\n        function isConcurrentMode(object) {\n            {\n                if (!hasWarnedAboutDeprecatedIsConcurrentMode) {\n                    hasWarnedAboutDeprecatedIsConcurrentMode = true; // Using console['warn'] to evade Babel and ESLint\n                    console[\"warn\"](\"The ReactIs.isConcurrentMode() alias has been deprecated, \" + \"and will be removed in React 18+.\");\n                }\n            }\n            return false;\n        }\n        function isContextConsumer(object) {\n            return typeOf(object) === REACT_CONTEXT_TYPE;\n        }\n        function isContextProvider(object) {\n            return typeOf(object) === REACT_PROVIDER_TYPE;\n        }\n        function isElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        function isForwardRef(object) {\n            return typeOf(object) === REACT_FORWARD_REF_TYPE;\n        }\n        function isFragment(object) {\n            return typeOf(object) === REACT_FRAGMENT_TYPE;\n        }\n        function isLazy(object) {\n            return typeOf(object) === REACT_LAZY_TYPE;\n        }\n        function isMemo(object) {\n            return typeOf(object) === REACT_MEMO_TYPE;\n        }\n        function isPortal(object) {\n            return typeOf(object) === REACT_PORTAL_TYPE;\n        }\n        function isProfiler(object) {\n            return typeOf(object) === REACT_PROFILER_TYPE;\n        }\n        function isStrictMode(object) {\n            return typeOf(object) === REACT_STRICT_MODE_TYPE;\n        }\n        function isSuspense(object) {\n            return typeOf(object) === REACT_SUSPENSE_TYPE;\n        }\n        exports.ContextConsumer = ContextConsumer;\n        exports.ContextProvider = ContextProvider;\n        exports.Element = Element;\n        exports.ForwardRef = ForwardRef;\n        exports.Fragment = Fragment;\n        exports.Lazy = Lazy;\n        exports.Memo = Memo;\n        exports.Portal = Portal;\n        exports.Profiler = Profiler;\n        exports.StrictMode = StrictMode;\n        exports.Suspense = Suspense;\n        exports.isAsyncMode = isAsyncMode;\n        exports.isConcurrentMode = isConcurrentMode;\n        exports.isContextConsumer = isContextConsumer;\n        exports.isContextProvider = isContextProvider;\n        exports.isElement = isElement;\n        exports.isForwardRef = isForwardRef;\n        exports.isFragment = isFragment;\n        exports.isLazy = isLazy;\n        exports.isMemo = isMemo;\n        exports.isPortal = isPortal;\n        exports.isProfiler = isProfiler;\n        exports.isStrictMode = isStrictMode;\n        exports.isSuspense = isSuspense;\n        exports.isValidElementType = isValidElementType;\n        exports.typeOf = typeOf;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-redux/node_modules/react-is/index.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxLQUF5QixFQUFjLEVBRTFDLE1BQU07SUFDTEMsNktBQXlCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/OTU5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6WyJwcm9jZXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-redux/node_modules/react-is/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/redux/es/redux.js":
/*!****************************************!*\
  !*** ./node_modules/redux/es/redux.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __DO_NOT_USE__ActionTypes: function() { return /* binding */ ActionTypes; },\n/* harmony export */   applyMiddleware: function() { return /* binding */ applyMiddleware; },\n/* harmony export */   bindActionCreators: function() { return /* binding */ bindActionCreators; },\n/* harmony export */   combineReducers: function() { return /* binding */ combineReducers; },\n/* harmony export */   compose: function() { return /* binding */ compose; },\n/* harmony export */   createStore: function() { return /* binding */ createStore; },\n/* harmony export */   legacy_createStore: function() { return /* binding */ legacy_createStore; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectSpread2 */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\");\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */ function formatProdErrorMessage(code) {\n    return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + \"use the non-minified dev environment for full errors. \";\n}\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = function() {\n    return typeof Symbol === \"function\" && Symbol.observable || \"@@observable\";\n}();\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */ var randomString = function randomString() {\n    return Math.random().toString(36).substring(7).split(\"\").join(\".\");\n};\nvar ActionTypes = {\n    INIT: \"@@redux/INIT\" + randomString(),\n    REPLACE: \"@@redux/REPLACE\" + randomString(),\n    PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n        return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n    }\n};\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */ function isPlainObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) return false;\n    var proto = obj;\n    while(Object.getPrototypeOf(proto) !== null){\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(obj) === proto;\n}\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n    if (val === void 0) return \"undefined\";\n    if (val === null) return \"null\";\n    var type = typeof val;\n    switch(type){\n        case \"boolean\":\n        case \"string\":\n        case \"number\":\n        case \"symbol\":\n        case \"function\":\n            {\n                return type;\n            }\n    }\n    if (Array.isArray(val)) return \"array\";\n    if (isDate(val)) return \"date\";\n    if (isError(val)) return \"error\";\n    var constructorName = ctorName(val);\n    switch(constructorName){\n        case \"Symbol\":\n        case \"Promise\":\n        case \"WeakMap\":\n        case \"WeakSet\":\n        case \"Map\":\n        case \"Set\":\n            return constructorName;\n    } // other\n    return type.slice(8, -1).toLowerCase().replace(/\\s/g, \"\");\n}\nfunction ctorName(val) {\n    return typeof val.constructor === \"function\" ? val.constructor.name : null;\n}\nfunction isError(val) {\n    return val instanceof Error || typeof val.message === \"string\" && val.constructor && typeof val.constructor.stackTraceLimit === \"number\";\n}\nfunction isDate(val) {\n    if (val instanceof Date) return true;\n    return typeof val.toDateString === \"function\" && typeof val.getDate === \"function\" && typeof val.setDate === \"function\";\n}\nfunction kindOf(val) {\n    var typeOfVal = typeof val;\n    if (true) {\n        typeOfVal = miniKindOf(val);\n    }\n    return typeOfVal;\n}\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */ function createStore(reducer, preloadedState, enhancer) {\n    var _ref2;\n    if (typeof preloadedState === \"function\" && typeof enhancer === \"function\" || typeof enhancer === \"function\" && typeof arguments[3] === \"function\") {\n        throw new Error( false ? 0 : \"It looks like you are passing several store enhancers to \" + \"createStore(). This is not supported. Instead, compose them \" + \"together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.\");\n    }\n    if (typeof preloadedState === \"function\" && typeof enhancer === \"undefined\") {\n        enhancer = preloadedState;\n        preloadedState = undefined;\n    }\n    if (typeof enhancer !== \"undefined\") {\n        if (typeof enhancer !== \"function\") {\n            throw new Error( false ? 0 : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n        }\n        return enhancer(createStore)(reducer, preloadedState);\n    }\n    if (typeof reducer !== \"function\") {\n        throw new Error( false ? 0 : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n    }\n    var currentReducer = reducer;\n    var currentState = preloadedState;\n    var currentListeners = [];\n    var nextListeners = currentListeners;\n    var isDispatching = false;\n    /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */ function ensureCanMutateNextListeners() {\n        if (nextListeners === currentListeners) {\n            nextListeners = currentListeners.slice();\n        }\n    }\n    /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */ function getState() {\n        if (isDispatching) {\n            throw new Error( false ? 0 : \"You may not call store.getState() while the reducer is executing. \" + \"The reducer has already received the state as an argument. \" + \"Pass it down from the top reducer instead of reading it from the store.\");\n        }\n        return currentState;\n    }\n    /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */ function subscribe(listener) {\n        if (typeof listener !== \"function\") {\n            throw new Error( false ? 0 : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n        }\n        if (isDispatching) {\n            throw new Error( false ? 0 : \"You may not call store.subscribe() while the reducer is executing. \" + \"If you would like to be notified after the store has been updated, subscribe from a \" + \"component and invoke store.getState() in the callback to access the latest state. \" + \"See https://redux.js.org/api/store#subscribelistener for more details.\");\n        }\n        var isSubscribed = true;\n        ensureCanMutateNextListeners();\n        nextListeners.push(listener);\n        return function unsubscribe() {\n            if (!isSubscribed) {\n                return;\n            }\n            if (isDispatching) {\n                throw new Error( false ? 0 : \"You may not unsubscribe from a store listener while the reducer is executing. \" + \"See https://redux.js.org/api/store#subscribelistener for more details.\");\n            }\n            isSubscribed = false;\n            ensureCanMutateNextListeners();\n            var index = nextListeners.indexOf(listener);\n            nextListeners.splice(index, 1);\n            currentListeners = null;\n        };\n    }\n    /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */ function dispatch(action) {\n        if (!isPlainObject(action)) {\n            throw new Error( false ? 0 : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n        }\n        if (typeof action.type === \"undefined\") {\n            throw new Error( false ? 0 : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n        }\n        if (isDispatching) {\n            throw new Error( false ? 0 : \"Reducers may not dispatch actions.\");\n        }\n        try {\n            isDispatching = true;\n            currentState = currentReducer(currentState, action);\n        } finally{\n            isDispatching = false;\n        }\n        var listeners = currentListeners = nextListeners;\n        for(var i = 0; i < listeners.length; i++){\n            var listener = listeners[i];\n            listener();\n        }\n        return action;\n    }\n    /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */ function replaceReducer(nextReducer) {\n        if (typeof nextReducer !== \"function\") {\n            throw new Error( false ? 0 : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n        }\n        currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n        // Any reducers that existed in both the new and old rootReducer\n        // will receive the previous state. This effectively populates\n        // the new state tree with any relevant data from the old one.\n        dispatch({\n            type: ActionTypes.REPLACE\n        });\n    }\n    /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */ function observable() {\n        var _ref;\n        var outerSubscribe = subscribe;\n        return _ref = {\n            /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */ subscribe: function subscribe(observer) {\n                if (typeof observer !== \"object\" || observer === null) {\n                    throw new Error( false ? 0 : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n                }\n                function observeState() {\n                    if (observer.next) {\n                        observer.next(getState());\n                    }\n                }\n                observeState();\n                var unsubscribe = outerSubscribe(observeState);\n                return {\n                    unsubscribe: unsubscribe\n                };\n            }\n        }, _ref[$$observable] = function() {\n            return this;\n        }, _ref;\n    } // When a store is created, an \"INIT\" action is dispatched so that every\n    // reducer returns their initial state. This effectively populates\n    // the initial state tree.\n    dispatch({\n        type: ActionTypes.INIT\n    });\n    return _ref2 = {\n        dispatch: dispatch,\n        subscribe: subscribe,\n        getState: getState,\n        replaceReducer: replaceReducer\n    }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */ var legacy_createStore = createStore;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */ function warning(message) {\n    /* eslint-disable no-console */ if (typeof console !== \"undefined\" && typeof console.error === \"function\") {\n        console.error(message);\n    }\n    /* eslint-enable no-console */ try {\n        // This error was thrown as a convenience so that if you enable\n        // \"break on all exceptions\" in your console,\n        // it would pause the execution at this line.\n        throw new Error(message);\n    } catch (e) {} // eslint-disable-line no-empty\n}\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n    var reducerKeys = Object.keys(reducers);\n    var argumentName = action && action.type === ActionTypes.INIT ? \"preloadedState argument passed to createStore\" : \"previous state received by the reducer\";\n    if (reducerKeys.length === 0) {\n        return \"Store does not have a valid reducer. Make sure the argument passed \" + \"to combineReducers is an object whose values are reducers.\";\n    }\n    if (!isPlainObject(inputState)) {\n        return \"The \" + argumentName + ' has unexpected type of \"' + kindOf(inputState) + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n    }\n    var unexpectedKeys = Object.keys(inputState).filter(function(key) {\n        return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n    });\n    unexpectedKeys.forEach(function(key) {\n        unexpectedKeyCache[key] = true;\n    });\n    if (action && action.type === ActionTypes.REPLACE) return;\n    if (unexpectedKeys.length > 0) {\n        return \"Unexpected \" + (unexpectedKeys.length > 1 ? \"keys\" : \"key\") + \" \" + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n    }\n}\nfunction assertReducerShape(reducers) {\n    Object.keys(reducers).forEach(function(key) {\n        var reducer = reducers[key];\n        var initialState = reducer(undefined, {\n            type: ActionTypes.INIT\n        });\n        if (typeof initialState === \"undefined\") {\n            throw new Error( false ? 0 : 'The slice reducer for key \"' + key + '\" returned undefined during initialization. ' + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n        }\n        if (typeof reducer(undefined, {\n            type: ActionTypes.PROBE_UNKNOWN_ACTION()\n        }) === \"undefined\") {\n            throw new Error( false ? 0 : 'The slice reducer for key \"' + key + '\" returned undefined when probed with a random type. ' + (\"Don't try to handle '\" + ActionTypes.INIT + '\\' or other actions in \"redux/*\" ') + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n        }\n    });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */ function combineReducers(reducers) {\n    var reducerKeys = Object.keys(reducers);\n    var finalReducers = {};\n    for(var i = 0; i < reducerKeys.length; i++){\n        var key = reducerKeys[i];\n        if (true) {\n            if (typeof reducers[key] === \"undefined\") {\n                warning('No reducer provided for key \"' + key + '\"');\n            }\n        }\n        if (typeof reducers[key] === \"function\") {\n            finalReducers[key] = reducers[key];\n        }\n    }\n    var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n    // keys multiple times.\n    var unexpectedKeyCache;\n    if (true) {\n        unexpectedKeyCache = {};\n    }\n    var shapeAssertionError;\n    try {\n        assertReducerShape(finalReducers);\n    } catch (e) {\n        shapeAssertionError = e;\n    }\n    return function combination(state, action) {\n        if (state === void 0) {\n            state = {};\n        }\n        if (shapeAssertionError) {\n            throw shapeAssertionError;\n        }\n        if (true) {\n            var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n            if (warningMessage) {\n                warning(warningMessage);\n            }\n        }\n        var hasChanged = false;\n        var nextState = {};\n        for(var _i = 0; _i < finalReducerKeys.length; _i++){\n            var _key = finalReducerKeys[_i];\n            var reducer = finalReducers[_key];\n            var previousStateForKey = state[_key];\n            var nextStateForKey = reducer(previousStateForKey, action);\n            if (typeof nextStateForKey === \"undefined\") {\n                var actionType = action && action.type;\n                throw new Error( false ? 0 : \"When called with an action of type \" + (actionType ? '\"' + String(actionType) + '\"' : \"(unknown type)\") + ', the slice reducer for key \"' + _key + '\" returned undefined. ' + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n            }\n            nextState[_key] = nextStateForKey;\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n        }\n        hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n        return hasChanged ? nextState : state;\n    };\n}\nfunction bindActionCreator(actionCreator, dispatch) {\n    return function() {\n        return dispatch(actionCreator.apply(this, arguments));\n    };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */ function bindActionCreators(actionCreators, dispatch) {\n    if (typeof actionCreators === \"function\") {\n        return bindActionCreator(actionCreators, dispatch);\n    }\n    if (typeof actionCreators !== \"object\" || actionCreators === null) {\n        throw new Error( false ? 0 : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n    }\n    var boundActionCreators = {};\n    for(var key in actionCreators){\n        var actionCreator = actionCreators[key];\n        if (typeof actionCreator === \"function\") {\n            boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n        }\n    }\n    return boundActionCreators;\n}\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */ function compose() {\n    for(var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++){\n        funcs[_key] = arguments[_key];\n    }\n    if (funcs.length === 0) {\n        return function(arg) {\n            return arg;\n        };\n    }\n    if (funcs.length === 1) {\n        return funcs[0];\n    }\n    return funcs.reduce(function(a, b) {\n        return function() {\n            return a(b.apply(void 0, arguments));\n        };\n    });\n}\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */ function applyMiddleware() {\n    for(var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++){\n        middlewares[_key] = arguments[_key];\n    }\n    return function(createStore) {\n        return function() {\n            var store = createStore.apply(void 0, arguments);\n            var _dispatch = function dispatch() {\n                throw new Error( false ? 0 : \"Dispatching while constructing your middleware is not allowed. \" + \"Other middleware would not be applied to this dispatch.\");\n            };\n            var middlewareAPI = {\n                getState: store.getState,\n                dispatch: function dispatch() {\n                    return _dispatch.apply(void 0, arguments);\n                }\n            };\n            var chain = middlewares.map(function(middleware) {\n                return middleware(middlewareAPI);\n            });\n            _dispatch = compose.apply(void 0, chain)(store.dispatch);\n            return (0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])((0,_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, store), {}, {\n                dispatch: _dispatch\n            });\n        };\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/redux/es/redux.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/use-memo-one/dist/use-memo-one.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/use-memo-one/dist/use-memo-one.esm.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCallback: function() { return /* binding */ useCallback; },\n/* harmony export */   useCallbackOne: function() { return /* binding */ useCallbackOne; },\n/* harmony export */   useMemo: function() { return /* binding */ useMemo; },\n/* harmony export */   useMemoOne: function() { return /* binding */ useMemoOne; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for(var i = 0; i < newInputs.length; i++){\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction useMemoOne(getResult, inputs) {\n    _s();\n    var initial = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function() {\n        return {\n            inputs: inputs,\n            result: getResult()\n        };\n    })[0];\n    var isFirstRun = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    var committed = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(initial);\n    var useCache = isFirstRun.current || Boolean(inputs && committed.current.inputs && areInputsEqual(inputs, committed.current.inputs));\n    var cache = useCache ? committed.current : {\n        inputs: inputs,\n        result: getResult()\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        isFirstRun.current = false;\n        committed.current = cache;\n    }, [\n        cache\n    ]);\n    return cache.result;\n}\n_s(useMemoOne, \"rOKFL9NFGpp+Mvcts9So1Ivlgmo=\");\nfunction useCallbackOne(callback, inputs) {\n    _s1();\n    return useMemoOne(function() {\n        return callback;\n    }, inputs);\n}\n_s1(useCallbackOne, \"vEqbtFwjzV4Mq1M3HSplpL9tfws=\", false, function() {\n    return [\n        useMemoOne\n    ];\n});\nvar useMemo = useMemoOne;\nvar useCallback = useCallbackOne;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91c2UtbWVtby1vbmUvZGlzdC91c2UtbWVtby1vbmUuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBb0Q7QUFFcEQsU0FBU0csZUFBZUMsU0FBUyxFQUFFQyxVQUFVO0lBQzNDLElBQUlELFVBQVVFLE1BQU0sS0FBS0QsV0FBV0MsTUFBTSxFQUFFO1FBQzFDLE9BQU87SUFDVDtJQUVBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxVQUFVRSxNQUFNLEVBQUVDLElBQUs7UUFDekMsSUFBSUgsU0FBUyxDQUFDRyxFQUFFLEtBQUtGLFVBQVUsQ0FBQ0UsRUFBRSxFQUFFO1lBQ2xDLE9BQU87UUFDVDtJQUNGO0lBRUEsT0FBTztBQUNUO0FBRUEsU0FBU0MsV0FBV0MsU0FBUyxFQUFFQyxNQUFNOztJQUNuQyxJQUFJQyxVQUFVWCwrQ0FBUUEsQ0FBQztRQUNyQixPQUFPO1lBQ0xVLFFBQVFBO1lBQ1JFLFFBQVFIO1FBQ1Y7SUFDRixFQUFFLENBQUMsRUFBRTtJQUNMLElBQUlJLGFBQWFaLDZDQUFNQSxDQUFDO0lBQ3hCLElBQUlhLFlBQVliLDZDQUFNQSxDQUFDVTtJQUN2QixJQUFJSSxXQUFXRixXQUFXRyxPQUFPLElBQUlDLFFBQVFQLFVBQVVJLFVBQVVFLE9BQU8sQ0FBQ04sTUFBTSxJQUFJUCxlQUFlTyxRQUFRSSxVQUFVRSxPQUFPLENBQUNOLE1BQU07SUFDbEksSUFBSVEsUUFBUUgsV0FBV0QsVUFBVUUsT0FBTyxHQUFHO1FBQ3pDTixRQUFRQTtRQUNSRSxRQUFRSDtJQUNWO0lBQ0FQLGdEQUFTQSxDQUFDO1FBQ1JXLFdBQVdHLE9BQU8sR0FBRztRQUNyQkYsVUFBVUUsT0FBTyxHQUFHRTtJQUN0QixHQUFHO1FBQUNBO0tBQU07SUFDVixPQUFPQSxNQUFNTixNQUFNO0FBQ3JCO0dBbkJTSjtBQW9CVCxTQUFTVyxlQUFlQyxRQUFRLEVBQUVWLE1BQU07O0lBQ3RDLE9BQU9GLFdBQVc7UUFDaEIsT0FBT1k7SUFDVCxHQUFHVjtBQUNMO0lBSlNTOztRQUNBWDs7O0FBSVQsSUFBSWEsVUFBVWI7QUFDZCxJQUFJYyxjQUFjSDtBQUUwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdXNlLW1lbW8tb25lL2Rpc3QvdXNlLW1lbW8tb25lLmVzbS5qcz9kNzhjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuZnVuY3Rpb24gYXJlSW5wdXRzRXF1YWwobmV3SW5wdXRzLCBsYXN0SW5wdXRzKSB7XG4gIGlmIChuZXdJbnB1dHMubGVuZ3RoICE9PSBsYXN0SW5wdXRzLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbmV3SW5wdXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKG5ld0lucHV0c1tpXSAhPT0gbGFzdElucHV0c1tpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiB1c2VNZW1vT25lKGdldFJlc3VsdCwgaW5wdXRzKSB7XG4gIHZhciBpbml0aWFsID0gdXNlU3RhdGUoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7XG4gICAgICBpbnB1dHM6IGlucHV0cyxcbiAgICAgIHJlc3VsdDogZ2V0UmVzdWx0KClcbiAgICB9O1xuICB9KVswXTtcbiAgdmFyIGlzRmlyc3RSdW4gPSB1c2VSZWYodHJ1ZSk7XG4gIHZhciBjb21taXR0ZWQgPSB1c2VSZWYoaW5pdGlhbCk7XG4gIHZhciB1c2VDYWNoZSA9IGlzRmlyc3RSdW4uY3VycmVudCB8fCBCb29sZWFuKGlucHV0cyAmJiBjb21taXR0ZWQuY3VycmVudC5pbnB1dHMgJiYgYXJlSW5wdXRzRXF1YWwoaW5wdXRzLCBjb21taXR0ZWQuY3VycmVudC5pbnB1dHMpKTtcbiAgdmFyIGNhY2hlID0gdXNlQ2FjaGUgPyBjb21taXR0ZWQuY3VycmVudCA6IHtcbiAgICBpbnB1dHM6IGlucHV0cyxcbiAgICByZXN1bHQ6IGdldFJlc3VsdCgpXG4gIH07XG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaXNGaXJzdFJ1bi5jdXJyZW50ID0gZmFsc2U7XG4gICAgY29tbWl0dGVkLmN1cnJlbnQgPSBjYWNoZTtcbiAgfSwgW2NhY2hlXSk7XG4gIHJldHVybiBjYWNoZS5yZXN1bHQ7XG59XG5mdW5jdGlvbiB1c2VDYWxsYmFja09uZShjYWxsYmFjaywgaW5wdXRzKSB7XG4gIHJldHVybiB1c2VNZW1vT25lKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gY2FsbGJhY2s7XG4gIH0sIGlucHV0cyk7XG59XG52YXIgdXNlTWVtbyA9IHVzZU1lbW9PbmU7XG52YXIgdXNlQ2FsbGJhY2sgPSB1c2VDYWxsYmFja09uZTtcblxuZXhwb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZUNhbGxiYWNrT25lLCB1c2VNZW1vLCB1c2VNZW1vT25lIH07XG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VSZWYiLCJ1c2VFZmZlY3QiLCJhcmVJbnB1dHNFcXVhbCIsIm5ld0lucHV0cyIsImxhc3RJbnB1dHMiLCJsZW5ndGgiLCJpIiwidXNlTWVtb09uZSIsImdldFJlc3VsdCIsImlucHV0cyIsImluaXRpYWwiLCJyZXN1bHQiLCJpc0ZpcnN0UnVuIiwiY29tbWl0dGVkIiwidXNlQ2FjaGUiLCJjdXJyZW50IiwiQm9vbGVhbiIsImNhY2hlIiwidXNlQ2FsbGJhY2tPbmUiLCJjYWxsYmFjayIsInVzZU1lbW8iLCJ1c2VDYWxsYmFjayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/use-memo-one/dist/use-memo-one.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ HomePage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ShellSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/ShellSelector */ \"(app-pages-browser)/./src/components/ShellSelector.tsx\");\n/* harmony import */ var _components_ElementSelector__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/ElementSelector */ \"(app-pages-browser)/./src/components/ElementSelector.tsx\");\n/* harmony import */ var _components_Presets__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/Presets */ \"(app-pages-browser)/./src/components/Presets.tsx\");\n/* harmony import */ var _components_Preview__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/Preview */ \"(app-pages-browser)/./src/components/Preview.tsx\");\n/* harmony import */ var _components_Result__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/Result */ \"(app-pages-browser)/./src/components/Result.tsx\");\n/* harmony import */ var _components_PS1Parser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/PS1Parser */ \"(app-pages-browser)/./src/components/PS1Parser.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst defaultElements = [\n    {\n        key: \"user\",\n        label: \"Username\",\n        defaultColor: \"#4F46E5\"\n    },\n    {\n        key: \"host\",\n        label: \"Hostname\",\n        defaultColor: \"#16A34A\"\n    },\n    {\n        key: \"cwd\",\n        label: \"Current Directory\",\n        defaultColor: \"#F59E42\"\n    },\n    {\n        key: \"time\",\n        label: \"Time\",\n        defaultColor: \"#F43F5E\"\n    },\n    {\n        key: \"git\",\n        label: \"Git Branch\",\n        defaultColor: \"#0EA5E9\"\n    },\n    {\n        key: \"newline\",\n        label: \"Newline\",\n        defaultColor: \"#FFFFFF\"\n    },\n    {\n        key: \"symbol\",\n        label: \"Prompt Symbol\",\n        defaultColor: \"#64748B\"\n    }\n];\nfunction HomePage() {\n    _s();\n    const [shell, setShell] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"bash\");\n    const [elements, setElements] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultElements.map((e)=>({\n            ...e,\n            enabled: true,\n            color: e.defaultColor\n        })));\n    const handleElementChange = (key, enabled, color)=>{\n        setElements((els)=>els.map((e)=>e.key === key ? {\n                    ...e,\n                    enabled,\n                    color\n                } : e));\n    };\n    const handlePreset = (preset)=>{\n        setElements(preset);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"min-h-screen bg-gradient-to-br from-[#232526] to-[#414345] py-12 px-2 md:px-0 flex flex-col items-center\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-2xl w-full mx-auto bg-white/10 backdrop-blur-md rounded-2xl shadow-2xl p-8 space-y-8 border border-white/20\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-4xl font-extrabold text-center mb-4 text-white drop-shadow-lg tracking-wide animate-pulse\",\n                        children: \"myPS1 - Shell Prompt Config Generator\"\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                        lineNumber: 37,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ShellSelector__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        shell: shell,\n                        setShell: setShell\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                        lineNumber: 38,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Presets__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        setElements: handlePreset\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                        lineNumber: 39,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ElementSelector__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        elements: elements,\n                        onChange: handleElementChange,\n                        setElements: setElements\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                        lineNumber: 40,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Preview__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        elements: elements\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                        lineNumber: 41,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Result__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        shell: shell,\n                        elements: elements\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                        lineNumber: 42,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PS1Parser__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                lineNumber: 36,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                className: \"text-center text-gray-400 mt-12 text-sm\",\n                children: \"\\xa9 2024 myPS1\"\n            }, void 0, false, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n                lineNumber: 45,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/app/page.tsx\",\n        lineNumber: 35,\n        columnNumber: 5\n    }, this);\n}\n_s(HomePage, \"6M731yf4a+/fVB/VzpW0SQK2qbQ=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQ3dDO0FBQ2dCO0FBQ0k7QUFDaEI7QUFDQTtBQUNGO0FBQ007QUFFaEQsTUFBTVEsa0JBQWtCO0lBQ3RCO1FBQUVDLEtBQUs7UUFBUUMsT0FBTztRQUFZQyxjQUFjO0lBQVU7SUFDMUQ7UUFBRUYsS0FBSztRQUFRQyxPQUFPO1FBQVlDLGNBQWM7SUFBVTtJQUMxRDtRQUFFRixLQUFLO1FBQU9DLE9BQU87UUFBcUJDLGNBQWM7SUFBVTtJQUNsRTtRQUFFRixLQUFLO1FBQVFDLE9BQU87UUFBUUMsY0FBYztJQUFVO0lBQ3REO1FBQUVGLEtBQUs7UUFBT0MsT0FBTztRQUFjQyxjQUFjO0lBQVU7SUFDM0Q7UUFBRUYsS0FBSztRQUFXQyxPQUFPO1FBQVdDLGNBQWM7SUFBVTtJQUM1RDtRQUFFRixLQUFLO1FBQVVDLE9BQU87UUFBaUJDLGNBQWM7SUFBVTtDQUNsRTtBQUVjLFNBQVNDOztJQUN0QixNQUFNLENBQUNDLE9BQU9DLFNBQVMsR0FBR2IsK0NBQVFBLENBQWlCO0lBQ25ELE1BQU0sQ0FBQ2MsVUFBVUMsWUFBWSxHQUFHZiwrQ0FBUUEsQ0FDdENPLGdCQUFnQlMsR0FBRyxDQUFDQyxDQUFBQSxJQUFNO1lBQUUsR0FBR0EsQ0FBQztZQUFFQyxTQUFTO1lBQU1DLE9BQU9GLEVBQUVQLFlBQVk7UUFBQztJQUd6RSxNQUFNVSxzQkFBc0IsQ0FBQ1osS0FBYVUsU0FBa0JDO1FBQzFESixZQUFZTSxDQUFBQSxNQUFPQSxJQUFJTCxHQUFHLENBQUNDLENBQUFBLElBQUtBLEVBQUVULEdBQUcsS0FBS0EsTUFBTTtvQkFBRSxHQUFHUyxDQUFDO29CQUFFQztvQkFBU0M7Z0JBQU0sSUFBSUY7SUFDN0U7SUFFQSxNQUFNSyxlQUFlLENBQUNDO1FBQ3BCUixZQUFZUTtJQUNkO0lBRUEscUJBQ0UsOERBQUNDO1FBQUtDLFdBQVU7OzBCQUNkLDhEQUFDQztnQkFBSUQsV0FBVTs7a0NBQ2IsOERBQUNFO3dCQUFHRixXQUFVO2tDQUFpRzs7Ozs7O2tDQUMvRyw4REFBQ3hCLGlFQUFhQTt3QkFBQ1csT0FBT0E7d0JBQU9DLFVBQVVBOzs7Ozs7a0NBQ3ZDLDhEQUFDViwyREFBT0E7d0JBQUNZLGFBQWFPOzs7Ozs7a0NBQ3RCLDhEQUFDcEIsbUVBQWVBO3dCQUFDWSxVQUFVQTt3QkFBVWMsVUFBVVI7d0JBQXFCTCxhQUFhQTs7Ozs7O2tDQUNqRiw4REFBQ1gsMkRBQU9BO3dCQUFDVSxVQUFVQTs7Ozs7O2tDQUNuQiw4REFBQ1QsMERBQU1BO3dCQUFDTyxPQUFPQTt3QkFBT0UsVUFBVUE7Ozs7OztrQ0FDaEMsOERBQUNSLDZEQUFTQTs7Ozs7Ozs7Ozs7MEJBRVosOERBQUN1QjtnQkFBT0osV0FBVTswQkFBMEM7Ozs7Ozs7Ozs7OztBQUdsRTtHQTVCd0JkO0tBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvcGFnZS50c3g/ZjY4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcclxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgU2hlbGxTZWxlY3RvciBmcm9tICcuLi9jb21wb25lbnRzL1NoZWxsU2VsZWN0b3InO1xyXG5pbXBvcnQgRWxlbWVudFNlbGVjdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRWxlbWVudFNlbGVjdG9yJztcclxuaW1wb3J0IFByZXNldHMgZnJvbSAnLi4vY29tcG9uZW50cy9QcmVzZXRzJztcclxuaW1wb3J0IFByZXZpZXcgZnJvbSAnLi4vY29tcG9uZW50cy9QcmV2aWV3JztcclxuaW1wb3J0IFJlc3VsdCBmcm9tICcuLi9jb21wb25lbnRzL1Jlc3VsdCc7XHJcbmltcG9ydCBQUzFQYXJzZXIgZnJvbSAnLi4vY29tcG9uZW50cy9QUzFQYXJzZXInO1xyXG5cclxuY29uc3QgZGVmYXVsdEVsZW1lbnRzID0gW1xyXG4gIHsga2V5OiAndXNlcicsIGxhYmVsOiAnVXNlcm5hbWUnLCBkZWZhdWx0Q29sb3I6ICcjNEY0NkU1JyB9LFxyXG4gIHsga2V5OiAnaG9zdCcsIGxhYmVsOiAnSG9zdG5hbWUnLCBkZWZhdWx0Q29sb3I6ICcjMTZBMzRBJyB9LFxyXG4gIHsga2V5OiAnY3dkJywgbGFiZWw6ICdDdXJyZW50IERpcmVjdG9yeScsIGRlZmF1bHRDb2xvcjogJyNGNTlFNDInIH0sXHJcbiAgeyBrZXk6ICd0aW1lJywgbGFiZWw6ICdUaW1lJywgZGVmYXVsdENvbG9yOiAnI0Y0M0Y1RScgfSxcclxuICB7IGtleTogJ2dpdCcsIGxhYmVsOiAnR2l0IEJyYW5jaCcsIGRlZmF1bHRDb2xvcjogJyMwRUE1RTknIH0sXHJcbiAgeyBrZXk6ICduZXdsaW5lJywgbGFiZWw6ICdOZXdsaW5lJywgZGVmYXVsdENvbG9yOiAnI0ZGRkZGRicgfSxcclxuICB7IGtleTogJ3N5bWJvbCcsIGxhYmVsOiAnUHJvbXB0IFN5bWJvbCcsIGRlZmF1bHRDb2xvcjogJyM2NDc0OEInIH0sXHJcbl07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lUGFnZSgpIHtcclxuICBjb25zdCBbc2hlbGwsIHNldFNoZWxsXSA9IHVzZVN0YXRlPCdiYXNoJyB8ICd6c2gnPignYmFzaCcpO1xyXG4gIGNvbnN0IFtlbGVtZW50cywgc2V0RWxlbWVudHNdID0gdXNlU3RhdGUoXHJcbiAgICBkZWZhdWx0RWxlbWVudHMubWFwKGUgPT4gKHsgLi4uZSwgZW5hYmxlZDogdHJ1ZSwgY29sb3I6IGUuZGVmYXVsdENvbG9yIH0pKVxyXG4gICk7XHJcblxyXG4gIGNvbnN0IGhhbmRsZUVsZW1lbnRDaGFuZ2UgPSAoa2V5OiBzdHJpbmcsIGVuYWJsZWQ6IGJvb2xlYW4sIGNvbG9yOiBzdHJpbmcpID0+IHtcclxuICAgIHNldEVsZW1lbnRzKGVscyA9PiBlbHMubWFwKGUgPT4gZS5rZXkgPT09IGtleSA/IHsgLi4uZSwgZW5hYmxlZCwgY29sb3IgfSA6IGUpKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBoYW5kbGVQcmVzZXQgPSAocHJlc2V0OiB0eXBlb2YgZWxlbWVudHMpID0+IHtcclxuICAgIHNldEVsZW1lbnRzKHByZXNldCk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxtYWluIGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1ncmFkaWVudC10by1iciBmcm9tLVsjMjMyNTI2XSB0by1bIzQxNDM0NV0gcHktMTIgcHgtMiBtZDpweC0wIGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWF4LXctMnhsIHctZnVsbCBteC1hdXRvIGJnLXdoaXRlLzEwIGJhY2tkcm9wLWJsdXItbWQgcm91bmRlZC0yeGwgc2hhZG93LTJ4bCBwLTggc3BhY2UteS04IGJvcmRlciBib3JkZXItd2hpdGUvMjBcIj5cclxuICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC00eGwgZm9udC1leHRyYWJvbGQgdGV4dC1jZW50ZXIgbWItNCB0ZXh0LXdoaXRlIGRyb3Atc2hhZG93LWxnIHRyYWNraW5nLXdpZGUgYW5pbWF0ZS1wdWxzZVwiPm15UFMxIC0gU2hlbGwgUHJvbXB0IENvbmZpZyBHZW5lcmF0b3I8L2gxPlxyXG4gICAgICAgIDxTaGVsbFNlbGVjdG9yIHNoZWxsPXtzaGVsbH0gc2V0U2hlbGw9e3NldFNoZWxsfSAvPlxyXG4gICAgICAgIDxQcmVzZXRzIHNldEVsZW1lbnRzPXtoYW5kbGVQcmVzZXR9IC8+XHJcbiAgICAgICAgPEVsZW1lbnRTZWxlY3RvciBlbGVtZW50cz17ZWxlbWVudHN9IG9uQ2hhbmdlPXtoYW5kbGVFbGVtZW50Q2hhbmdlfSBzZXRFbGVtZW50cz17c2V0RWxlbWVudHN9IC8+XHJcbiAgICAgICAgPFByZXZpZXcgZWxlbWVudHM9e2VsZW1lbnRzfSAvPlxyXG4gICAgICAgIDxSZXN1bHQgc2hlbGw9e3NoZWxsfSBlbGVtZW50cz17ZWxlbWVudHN9IC8+XHJcbiAgICAgICAgPFBTMVBhcnNlciAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGZvb3RlciBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciB0ZXh0LWdyYXktNDAwIG10LTEyIHRleHQtc21cIj7CqSAyMDI0IG15UFMxPC9mb290ZXI+XHJcbiAgICA8L21haW4+XHJcbiAgKTtcclxufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsIlNoZWxsU2VsZWN0b3IiLCJFbGVtZW50U2VsZWN0b3IiLCJQcmVzZXRzIiwiUHJldmlldyIsIlJlc3VsdCIsIlBTMVBhcnNlciIsImRlZmF1bHRFbGVtZW50cyIsImtleSIsImxhYmVsIiwiZGVmYXVsdENvbG9yIiwiSG9tZVBhZ2UiLCJzaGVsbCIsInNldFNoZWxsIiwiZWxlbWVudHMiLCJzZXRFbGVtZW50cyIsIm1hcCIsImUiLCJlbmFibGVkIiwiY29sb3IiLCJoYW5kbGVFbGVtZW50Q2hhbmdlIiwiZWxzIiwiaGFuZGxlUHJlc2V0IiwicHJlc2V0IiwibWFpbiIsImNsYXNzTmFtZSIsImRpdiIsImgxIiwib25DaGFuZ2UiLCJmb290ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ElementSelector.tsx":
/*!********************************************!*\
  !*** ./src/components/ElementSelector.tsx ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-beautiful-dnd */ \"(app-pages-browser)/./node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst colorOptions = [\n    \"#4F46E5\",\n    \"#16A34A\",\n    \"#F59E42\",\n    \"#F43F5E\",\n    \"#0EA5E9\",\n    \"#64748B\",\n    \"#FACC15\",\n    \"#A21CAF\",\n    \"#F472B6\",\n    \"#F87171\",\n    \"#34D399\",\n    \"#60A5FA\",\n    \"#FBBF24\",\n    \"#A3E635\",\n    \"#38BDF8\",\n    \"#C084FC\",\n    \"#FDE68A\",\n    \"#FCA5A5\",\n    \"#6EE7B7\",\n    \"#FF6F61\",\n    \"#6B5B95\",\n    \"#88B04B\",\n    \"#F7CAC9\",\n    \"#92A8D1\",\n    \"#955251\",\n    \"#B565A7\",\n    \"#009B77\",\n    \"#DD4124\",\n    \"#D65076\",\n    \"#45B8AC\",\n    \"#EFC050\",\n    \"#5B5EA6\",\n    \"#9B2335\",\n    \"#DFCFBE\",\n    \"#55B4B0\",\n    \"#E15D44\",\n    \"#7FCDCD\",\n    \"#BC243C\",\n    \"#C3447A\"\n];\n// 解决react-beautiful-dnd在StrictMode下拖动无效问题\nfunction StrictModeDroppable(param) {\n    let { children, ...props } = param;\n    _s();\n    const [enabled, setEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const animation = requestAnimationFrame(()=>setEnabled(true));\n        return ()=>{\n            cancelAnimationFrame(animation);\n            setEnabled(false);\n        };\n    }, []);\n    if (!enabled) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_2__.Droppable, {\n        ...props,\n        children: children\n    }, void 0, false, {\n        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n        lineNumber: 52,\n        columnNumber: 10\n    }, this);\n}\n_s(StrictModeDroppable, \"KO045EdmUKRrcVNzr+fxbg9aW04=\");\n_c = StrictModeDroppable;\nconst ElementSelector = (param)=>{\n    let { elements, onChange, setElements } = param;\n    // 拖拽结束时更新顺序\n    const handleDragEnd = (result)=>{\n        if (!result.destination) return;\n        const reordered = Array.from(elements);\n        const [removed] = reordered.splice(result.source.index, 1);\n        reordered.splice(result.destination.index, 0, removed);\n        setElements(reordered);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"font-semibold mb-2 text-white\",\n                children: \"Select elements and colors:\"\n            }, void 0, false, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                lineNumber: 67,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_2__.DragDropContext, {\n                onDragEnd: handleDragEnd,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(StrictModeDroppable, {\n                    droppableId: \"elements-droppable\",\n                    children: (provided)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-3\",\n                            ref: provided.innerRef,\n                            ...provided.droppableProps,\n                            children: [\n                                elements.map((el, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_2__.Draggable, {\n                                        draggableId: el.key,\n                                        index: idx,\n                                        children: (provided, snapshot)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                ref: provided.innerRef,\n                                                ...provided.draggableProps,\n                                                ...provided.dragHandleProps,\n                                                className: \"flex items-center gap-4 bg-white/5 rounded-lg px-3 py-2 shadow border border-white/10 transition-transform \".concat(snapshot.isDragging ? \"scale-105 ring-2 ring-blue-400\" : \"\"),\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"cursor-grab text-xl text-blue-400 select-none mr-2\",\n                                                        children: \"≡\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                                                        lineNumber: 81,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                        type: \"checkbox\",\n                                                        checked: el.enabled,\n                                                        onChange: (e)=>onChange(el.key, e.target.checked, el.color),\n                                                        id: \"el-\".concat(el.key),\n                                                        className: \"accent-blue-500 w-5 h-5\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                                                        lineNumber: 82,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                        htmlFor: \"el-\".concat(el.key),\n                                                        className: \"w-32 text-white font-medium\",\n                                                        children: el.key === \"newline\" ? \"Newline (换行)\" : el.label\n                                                    }, void 0, false, {\n                                                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                                                        lineNumber: 89,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    el.key !== \"newline\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                        className: \"border border-white/20 bg-white/10 text-white rounded px-2 py-1 focus:outline-none focus:ring-2 focus:ring-blue-400 transition\",\n                                                        value: el.color,\n                                                        onChange: (e)=>onChange(el.key, el.enabled, e.target.value),\n                                                        children: colorOptions.map((c)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                                value: c,\n                                                                style: {\n                                                                    color: c\n                                                                },\n                                                                children: c\n                                                            }, c, false, {\n                                                                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                                                                lineNumber: 97,\n                                                                columnNumber: 29\n                                                            }, undefined))\n                                                    }, void 0, false, {\n                                                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                                                        lineNumber: 91,\n                                                        columnNumber: 25\n                                                    }, undefined),\n                                                    el.key !== \"newline\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                        type: \"color\",\n                                                        value: el.color,\n                                                        onChange: (e)=>onChange(el.key, el.enabled, e.target.value),\n                                                        className: \"ml-2 w-8 h-8 border-none bg-transparent cursor-pointer\",\n                                                        title: \"Custom color\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                                                        lineNumber: 102,\n                                                        columnNumber: 25\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                                                lineNumber: 75,\n                                                columnNumber: 21\n                                            }, undefined)\n                                    }, el.key, false, {\n                                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                                        lineNumber: 73,\n                                        columnNumber: 17\n                                    }, undefined)),\n                                provided.placeholder\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                            lineNumber: 71,\n                            columnNumber: 13\n                        }, undefined)\n                }, void 0, false, {\n                    fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                    lineNumber: 69,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n                lineNumber: 68,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ElementSelector.tsx\",\n        lineNumber: 66,\n        columnNumber: 5\n    }, undefined);\n};\n_c1 = ElementSelector;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ElementSelector);\nvar _c, _c1;\n$RefreshReg$(_c, \"StrictModeDroppable\");\n$RefreshReg$(_c1, \"ElementSelector\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ElementSelector.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/PS1Parser.tsx":
/*!**************************************!*\
  !*** ./src/components/PS1Parser.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PS1Parser; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst elementMap = [\n    {\n        key: \"user\",\n        label: \"Username\",\n        pattern: /\\\\u/\n    },\n    {\n        key: \"host\",\n        label: \"Hostname\",\n        pattern: /\\\\h/\n    },\n    {\n        key: \"cwd\",\n        label: \"Current Directory\",\n        pattern: /\\\\w/\n    },\n    {\n        key: \"time\",\n        label: \"Time\",\n        pattern: /\\\\t/\n    },\n    {\n        key: \"git\",\n        label: \"Git Branch\",\n        pattern: /\\$\\(git.*?\\)/\n    },\n    {\n        key: \"symbol\",\n        label: \"Prompt Symbol\",\n        pattern: /\\$/\n    }\n];\nfunction PS1Parser() {\n    _s();\n    const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    function handleParse() {\n        const found = [];\n        elementMap.forEach((el)=>{\n            if (el.pattern.test(input)) {\n                found.push({\n                    key: el.key,\n                    label: el.label\n                });\n            }\n        });\n        // 颜色解析可后续增强\n        setResult(found);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"my-6 p-4 bg-white/10 rounded-xl border border-white/20 shadow\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"text-lg font-bold text-white mb-2\",\n                children: \"反向解析 PS1\"\n            }, void 0, false, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n                lineNumber: 30,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col md:flex-row gap-2 items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        className: \"flex-1 px-3 py-2 rounded bg-black/60 text-white border border-white/20 focus:outline-none focus:ring-2 focus:ring-blue-400 font-mono\",\n                        placeholder: \"粘贴你的 PS1 配置字符串...\",\n                        value: input,\n                        onChange: (e)=>setInput(e.target.value)\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"ml-2 px-4 py-2 rounded bg-gradient-to-r from-blue-500 to-purple-500 text-white font-semibold shadow hover:scale-105 transition-transform\",\n                        onClick: handleParse,\n                        children: \"解析\"\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n                        lineNumber: 38,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n                lineNumber: 31,\n                columnNumber: 7\n            }, this),\n            result.length > 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-white mb-2\",\n                        children: \"检测到的元素：\"\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n                        lineNumber: 47,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        className: \"space-y-1\",\n                        children: result.map((el)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                className: \"text-blue-300 font-mono\",\n                                children: el.label\n                            }, el.key, false, {\n                                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n                                lineNumber: 50,\n                                columnNumber: 15\n                            }, this))\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n                        lineNumber: 48,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n                lineNumber: 46,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/PS1Parser.tsx\",\n        lineNumber: 29,\n        columnNumber: 5\n    }, this);\n}\n_s(PS1Parser, \"rPpeuThAkuG/wDHPQ7BD8HjKvwM=\");\n_c = PS1Parser;\nvar _c;\n$RefreshReg$(_c, \"PS1Parser\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1BTMVBhcnNlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ3dDO0FBRXhDLE1BQU1FLGFBQWE7SUFDakI7UUFBRUMsS0FBSztRQUFRQyxPQUFPO1FBQVlDLFNBQVM7SUFBTTtJQUNqRDtRQUFFRixLQUFLO1FBQVFDLE9BQU87UUFBWUMsU0FBUztJQUFNO0lBQ2pEO1FBQUVGLEtBQUs7UUFBT0MsT0FBTztRQUFxQkMsU0FBUztJQUFNO0lBQ3pEO1FBQUVGLEtBQUs7UUFBUUMsT0FBTztRQUFRQyxTQUFTO0lBQU07SUFDN0M7UUFBRUYsS0FBSztRQUFPQyxPQUFPO1FBQWNDLFNBQVM7SUFBZTtJQUMzRDtRQUFFRixLQUFLO1FBQVVDLE9BQU87UUFBaUJDLFNBQVM7SUFBSztDQUN4RDtBQUVjLFNBQVNDOztJQUN0QixNQUFNLENBQUNDLE9BQU9DLFNBQVMsR0FBR1AsK0NBQVFBLENBQUM7SUFDbkMsTUFBTSxDQUFDUSxRQUFRQyxVQUFVLEdBQUdULCtDQUFRQSxDQUFRLEVBQUU7SUFFOUMsU0FBU1U7UUFDUCxNQUFNQyxRQUFlLEVBQUU7UUFDdkJWLFdBQVdXLE9BQU8sQ0FBQyxDQUFDQztZQUNsQixJQUFJQSxHQUFHVCxPQUFPLENBQUNVLElBQUksQ0FBQ1IsUUFBUTtnQkFDMUJLLE1BQU1JLElBQUksQ0FBQztvQkFBRWIsS0FBS1csR0FBR1gsR0FBRztvQkFBRUMsT0FBT1UsR0FBR1YsS0FBSztnQkFBQztZQUM1QztRQUNGO1FBQ0EsWUFBWTtRQUNaTSxVQUFVRTtJQUNaO0lBRUEscUJBQ0UsOERBQUNLO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDQztnQkFBR0QsV0FBVTswQkFBb0M7Ozs7OzswQkFDbEQsOERBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ1g7d0JBQ0NXLFdBQVU7d0JBQ1ZFLGFBQVk7d0JBQ1pDLE9BQU9kO3dCQUNQZSxVQUFVQyxDQUFBQSxJQUFLZixTQUFTZSxFQUFFQyxNQUFNLENBQUNILEtBQUs7Ozs7OztrQ0FFeEMsOERBQUNJO3dCQUNDUCxXQUFVO3dCQUNWUSxTQUFTZjtrQ0FDVjs7Ozs7Ozs7Ozs7O1lBSUZGLE9BQU9rQixNQUFNLEdBQUcsbUJBQ2YsOERBQUNWO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0Q7d0JBQUlDLFdBQVU7a0NBQWtCOzs7Ozs7a0NBQ2pDLDhEQUFDVTt3QkFBR1YsV0FBVTtrQ0FDWFQsT0FBT29CLEdBQUcsQ0FBQyxDQUFDZixtQkFDWCw4REFBQ2dCO2dDQUFnQlosV0FBVTswQ0FBMkJKLEdBQUdWLEtBQUs7K0JBQXJEVSxHQUFHWCxHQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTzdCO0dBNUN3Qkc7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvUFMxUGFyc2VyLnRzeD8zMjU0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xyXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmNvbnN0IGVsZW1lbnRNYXAgPSBbXHJcbiAgeyBrZXk6IFwidXNlclwiLCBsYWJlbDogXCJVc2VybmFtZVwiLCBwYXR0ZXJuOiAvXFxcXHUvIH0sXHJcbiAgeyBrZXk6IFwiaG9zdFwiLCBsYWJlbDogXCJIb3N0bmFtZVwiLCBwYXR0ZXJuOiAvXFxcXGgvIH0sXHJcbiAgeyBrZXk6IFwiY3dkXCIsIGxhYmVsOiBcIkN1cnJlbnQgRGlyZWN0b3J5XCIsIHBhdHRlcm46IC9cXFxcdy8gfSxcclxuICB7IGtleTogXCJ0aW1lXCIsIGxhYmVsOiBcIlRpbWVcIiwgcGF0dGVybjogL1xcXFx0LyB9LFxyXG4gIHsga2V5OiBcImdpdFwiLCBsYWJlbDogXCJHaXQgQnJhbmNoXCIsIHBhdHRlcm46IC9cXCRcXChnaXQuKj9cXCkvIH0sXHJcbiAgeyBrZXk6IFwic3ltYm9sXCIsIGxhYmVsOiBcIlByb21wdCBTeW1ib2xcIiwgcGF0dGVybjogL1xcJC8gfSxcclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBTMVBhcnNlcigpIHtcclxuICBjb25zdCBbaW5wdXQsIHNldElucHV0XSA9IHVzZVN0YXRlKFwiXCIpO1xyXG4gIGNvbnN0IFtyZXN1bHQsIHNldFJlc3VsdF0gPSB1c2VTdGF0ZTxhbnlbXT4oW10pO1xyXG5cclxuICBmdW5jdGlvbiBoYW5kbGVQYXJzZSgpIHtcclxuICAgIGNvbnN0IGZvdW5kOiBhbnlbXSA9IFtdO1xyXG4gICAgZWxlbWVudE1hcC5mb3JFYWNoKChlbCkgPT4ge1xyXG4gICAgICBpZiAoZWwucGF0dGVybi50ZXN0KGlucHV0KSkge1xyXG4gICAgICAgIGZvdW5kLnB1c2goeyBrZXk6IGVsLmtleSwgbGFiZWw6IGVsLmxhYmVsIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICAgIC8vIOminOiJsuino+aekOWPr+WQjue7reWinuW8ulxyXG4gICAgc2V0UmVzdWx0KGZvdW5kKTtcclxuICB9XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm15LTYgcC00IGJnLXdoaXRlLzEwIHJvdW5kZWQteGwgYm9yZGVyIGJvcmRlci13aGl0ZS8yMCBzaGFkb3dcIj5cclxuICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1ib2xkIHRleHQtd2hpdGUgbWItMlwiPuWPjeWQkeino+aekCBQUzE8L2gyPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgbWQ6ZmxleC1yb3cgZ2FwLTIgaXRlbXMtY2VudGVyXCI+XHJcbiAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICBjbGFzc05hbWU9XCJmbGV4LTEgcHgtMyBweS0yIHJvdW5kZWQgYmctYmxhY2svNjAgdGV4dC13aGl0ZSBib3JkZXIgYm9yZGVyLXdoaXRlLzIwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTQwMCBmb250LW1vbm9cIlxyXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCLnspjotLTkvaDnmoQgUFMxIOmFjee9ruWtl+espuS4si4uLlwiXHJcbiAgICAgICAgICB2YWx1ZT17aW5wdXR9XHJcbiAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBzZXRJbnB1dChlLnRhcmdldC52YWx1ZSl9XHJcbiAgICAgICAgLz5cclxuICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICBjbGFzc05hbWU9XCJtbC0yIHB4LTQgcHktMiByb3VuZGVkIGJnLWdyYWRpZW50LXRvLXIgZnJvbS1ibHVlLTUwMCB0by1wdXJwbGUtNTAwIHRleHQtd2hpdGUgZm9udC1zZW1pYm9sZCBzaGFkb3cgaG92ZXI6c2NhbGUtMTA1IHRyYW5zaXRpb24tdHJhbnNmb3JtXCJcclxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVBhcnNlfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIOino+aekFxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAge3Jlc3VsdC5sZW5ndGggPiAwICYmIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm10LTRcIj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC13aGl0ZSBtYi0yXCI+5qOA5rWL5Yiw55qE5YWD57Sg77yaPC9kaXY+XHJcbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwic3BhY2UteS0xXCI+XHJcbiAgICAgICAgICAgIHtyZXN1bHQubWFwKChlbCkgPT4gKFxyXG4gICAgICAgICAgICAgIDxsaSBrZXk9e2VsLmtleX0gY2xhc3NOYW1lPVwidGV4dC1ibHVlLTMwMCBmb250LW1vbm9cIj57ZWwubGFiZWx9PC9saT5cclxuICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICA8L3VsPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICApfVxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufSAiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsImVsZW1lbnRNYXAiLCJrZXkiLCJsYWJlbCIsInBhdHRlcm4iLCJQUzFQYXJzZXIiLCJpbnB1dCIsInNldElucHV0IiwicmVzdWx0Iiwic2V0UmVzdWx0IiwiaGFuZGxlUGFyc2UiLCJmb3VuZCIsImZvckVhY2giLCJlbCIsInRlc3QiLCJwdXNoIiwiZGl2IiwiY2xhc3NOYW1lIiwiaDIiLCJwbGFjZWhvbGRlciIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0IiwiYnV0dG9uIiwib25DbGljayIsImxlbmd0aCIsInVsIiwibWFwIiwibGkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/PS1Parser.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Presets.tsx":
/*!************************************!*\
  !*** ./src/components/Presets.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst presets = [\n    {\n        name: \"Classic Rainbow\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#F43F5E\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#F59E42\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#FACC15\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: true,\n                color: \"#16A34A\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#0EA5E9\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#A21CAF\"\n            }\n        ]\n    },\n    {\n        name: \"Minimal Gray\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: false,\n                color: \"#64748B\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: false,\n                color: \"#64748B\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#64748B\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: false,\n                color: \"#64748B\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: false,\n                color: \"#64748B\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#64748B\"\n            }\n        ]\n    },\n    {\n        name: \"Developer Style\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#4F46E5\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#0EA5E9\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#16A34A\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: false,\n                color: \"#F59E42\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#F43F5E\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#64748B\"\n            }\n        ]\n    },\n    {\n        name: \"Ocean Blue\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#0EA5E9\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#38BDF8\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#60A5FA\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: true,\n                color: \"#A3E635\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#F43F5E\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#0EA5E9\"\n            }\n        ]\n    },\n    {\n        name: \"Sunset\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#F59E42\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#F43F5E\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#FACC15\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: true,\n                color: \"#A21CAF\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#0EA5E9\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#F59E42\"\n            }\n        ]\n    },\n    {\n        name: \"Forest\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#16A34A\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#A3E635\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#34D399\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: true,\n                color: \"#F59E42\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#0EA5E9\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#16A34A\"\n            }\n        ]\n    },\n    {\n        name: \"Purple Dream\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#A21CAF\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#C084FC\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#F472B6\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: true,\n                color: \"#F43F5E\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#60A5FA\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#A21CAF\"\n            }\n        ]\n    },\n    {\n        name: \"Cyberpunk\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#F43F5E\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#A21CAF\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#F59E42\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: true,\n                color: \"#F472B6\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#38BDF8\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#F43F5E\"\n            }\n        ]\n    },\n    {\n        name: \"Elegant Black\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: false,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: false,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            }\n        ]\n    },\n    {\n        name: \"Lime Fresh\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#A3E635\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#38BDF8\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#FACC15\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: true,\n                color: \"#16A34A\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#0EA5E9\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#A3E635\"\n            }\n        ]\n    },\n    {\n        name: \"Rose Gold\",\n        elements: [\n            {\n                key: \"user\",\n                label: \"Username\",\n                enabled: true,\n                color: \"#F472B6\"\n            },\n            {\n                key: \"host\",\n                label: \"Hostname\",\n                enabled: true,\n                color: \"#FBBF24\"\n            },\n            {\n                key: \"cwd\",\n                label: \"Current Directory\",\n                enabled: true,\n                color: \"#F59E42\"\n            },\n            {\n                key: \"time\",\n                label: \"Time\",\n                enabled: true,\n                color: \"#F43F5E\"\n            },\n            {\n                key: \"git\",\n                label: \"Git Branch\",\n                enabled: true,\n                color: \"#A21CAF\"\n            },\n            {\n                key: \"newline\",\n                label: \"Newline\",\n                enabled: true,\n                color: \"#FFFFFF\"\n            },\n            {\n                key: \"symbol\",\n                label: \"Prompt Symbol\",\n                enabled: true,\n                color: \"#F472B6\"\n            }\n        ]\n    }\n];\nconst Presets = (param)=>{\n    let { setElements } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mb-2 flex flex-wrap gap-2\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"font-medium mr-2 text-white\",\n                children: \"Apply preset:\"\n            }, void 0, false, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Presets.tsx\",\n                lineNumber: 145,\n                columnNumber: 5\n            }, undefined),\n            presets.map((preset)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    className: \"border border-white/20 bg-gradient-to-r from-blue-500/60 to-purple-500/60 text-white rounded-lg px-3 py-1 mb-1 text-sm font-semibold shadow hover:scale-105 hover:from-blue-400/80 hover:to-purple-400/80 transition-transform duration-200\",\n                    onClick: ()=>setElements(preset.elements),\n                    type: \"button\",\n                    children: preset.name\n                }, preset.name, false, {\n                    fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Presets.tsx\",\n                    lineNumber: 147,\n                    columnNumber: 7\n                }, undefined))\n        ]\n    }, void 0, true, {\n        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Presets.tsx\",\n        lineNumber: 144,\n        columnNumber: 3\n    }, undefined);\n};\n_c = Presets;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Presets);\nvar _c;\n$RefreshReg$(_c, \"Presets\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Presets.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Preview.tsx":
/*!************************************!*\
  !*** ./src/components/Preview.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst symbolMap = {\n    user: \"\\\\u\",\n    host: \"\\\\h\",\n    cwd: \"\\\\w\",\n    time: \"\\\\t\",\n    git: '$(git branch 2>/dev/null | grep \"^*\" | colrm 1 2)',\n    symbol: \"$\"\n};\nconst Preview = (param)=>{\n    let { elements } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-black/80 rounded-xl p-6 text-xl font-mono text-white mb-2 overflow-x-auto shadow-inner border border-white/10 backdrop-blur\",\n        children: [\n            elements.filter((e)=>e.enabled).map((e)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    style: {\n                        color: e.color,\n                        marginRight: 8,\n                        textShadow: \"0 0 6px #fff2, 0 0 2px #fff4\"\n                    },\n                    children: e.key === \"symbol\" ? \"$\" : e.key === \"newline\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Preview.tsx\",\n                        lineNumber: 29,\n                        columnNumber: 61\n                    }, undefined) : e.label\n                }, e.key, false, {\n                    fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Preview.tsx\",\n                    lineNumber: 28,\n                    columnNumber: 9\n                }, undefined)),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"text-gray-500 ml-2\",\n                children: \"# Preview\"\n            }, void 0, false, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Preview.tsx\",\n                lineNumber: 32,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Preview.tsx\",\n        lineNumber: 26,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Preview;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Preview);\nvar _c;\n$RefreshReg$(_c, \"Preview\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1ByZXZpZXcudHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBQzBCO0FBYTFCLE1BQU1DLFlBQW9DO0lBQ3hDQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsS0FBSztJQUNMQyxNQUFNO0lBQ05DLEtBQUs7SUFDTEMsUUFBUTtBQUNWO0FBRUEsTUFBTUMsVUFBa0M7UUFBQyxFQUFFQyxRQUFRLEVBQUU7SUFDbkQscUJBQ0UsOERBQUNDO1FBQUlDLFdBQVU7O1lBQ1pGLFNBQVNHLE1BQU0sQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRUMsT0FBTyxFQUFFQyxHQUFHLENBQUNGLENBQUFBLGtCQUNuQyw4REFBQ0c7b0JBQWlCQyxPQUFPO3dCQUFFQyxPQUFPTCxFQUFFSyxLQUFLO3dCQUFFQyxhQUFhO3dCQUFHQyxZQUFZO29CQUErQjs4QkFDbkdQLEVBQUVRLEdBQUcsS0FBSyxXQUFXLE1BQU1SLEVBQUVRLEdBQUcsS0FBSywwQkFBWSw4REFBQ0M7Ozs7b0NBQVFULEVBQUVVLEtBQUs7bUJBRHpEVixFQUFFUSxHQUFHOzs7OzswQkFJbEIsOERBQUNMO2dCQUFLTCxXQUFVOzBCQUFxQjs7Ozs7Ozs7Ozs7O0FBRzNDO0tBWE1IO0FBYU4sK0RBQWVBLE9BQU9BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvUHJldmlldy50c3g/YjljYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcclxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmludGVyZmFjZSBFbGVtZW50IHtcclxuICBrZXk6IHN0cmluZztcclxuICBsYWJlbDogc3RyaW5nO1xyXG4gIGVuYWJsZWQ6IGJvb2xlYW47XHJcbiAgY29sb3I6IHN0cmluZztcclxufVxyXG5cclxuaW50ZXJmYWNlIFByZXZpZXdQcm9wcyB7XHJcbiAgZWxlbWVudHM6IEVsZW1lbnRbXTtcclxufVxyXG5cclxuY29uc3Qgc3ltYm9sTWFwOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xyXG4gIHVzZXI6IFwiXFxcXHVcIixcclxuICBob3N0OiBcIlxcXFxoXCIsXHJcbiAgY3dkOiBcIlxcXFx3XCIsXHJcbiAgdGltZTogXCJcXFxcdFwiLFxyXG4gIGdpdDogJyQoZ2l0IGJyYW5jaCAyPi9kZXYvbnVsbCB8IGdyZXAgXCJeKlwiIHwgY29scm0gMSAyKScsXHJcbiAgc3ltYm9sOiAnJCcsXHJcbn07XHJcblxyXG5jb25zdCBQcmV2aWV3OiBSZWFjdC5GQzxQcmV2aWV3UHJvcHM+ID0gKHsgZWxlbWVudHMgfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWJsYWNrLzgwIHJvdW5kZWQteGwgcC02IHRleHQteGwgZm9udC1tb25vIHRleHQtd2hpdGUgbWItMiBvdmVyZmxvdy14LWF1dG8gc2hhZG93LWlubmVyIGJvcmRlciBib3JkZXItd2hpdGUvMTAgYmFja2Ryb3AtYmx1clwiPlxyXG4gICAgICB7ZWxlbWVudHMuZmlsdGVyKGUgPT4gZS5lbmFibGVkKS5tYXAoZSA9PiAoXHJcbiAgICAgICAgPHNwYW4ga2V5PXtlLmtleX0gc3R5bGU9e3sgY29sb3I6IGUuY29sb3IsIG1hcmdpblJpZ2h0OiA4LCB0ZXh0U2hhZG93OiAnMCAwIDZweCAjZmZmMiwgMCAwIDJweCAjZmZmNCcgfX0+XHJcbiAgICAgICAgICB7ZS5rZXkgPT09ICdzeW1ib2wnID8gJyQnIDogZS5rZXkgPT09ICduZXdsaW5lJyA/IDxiciAvPiA6IGUubGFiZWx9XHJcbiAgICAgICAgPC9zcGFuPlxyXG4gICAgICApKX1cclxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1ncmF5LTUwMCBtbC0yXCI+IyBQcmV2aWV3PC9zcGFuPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFByZXZpZXc7ICJdLCJuYW1lcyI6WyJSZWFjdCIsInN5bWJvbE1hcCIsInVzZXIiLCJob3N0IiwiY3dkIiwidGltZSIsImdpdCIsInN5bWJvbCIsIlByZXZpZXciLCJlbGVtZW50cyIsImRpdiIsImNsYXNzTmFtZSIsImZpbHRlciIsImUiLCJlbmFibGVkIiwibWFwIiwic3BhbiIsInN0eWxlIiwiY29sb3IiLCJtYXJnaW5SaWdodCIsInRleHRTaGFkb3ciLCJrZXkiLCJiciIsImxhYmVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Preview.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Result.tsx":
/*!***********************************!*\
  !*** ./src/components/Result.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n// Color to shell code\nfunction colorToShell(color, shell) {\n    const hex = color.replace(\"#\", \"\");\n    const r = parseInt(hex.slice(0, 2), 16);\n    const g = parseInt(hex.slice(2, 4), 16);\n    const b = parseInt(hex.slice(4, 6), 16);\n    if (shell === \"bash\") {\n        // 用\\[\\033[38;2;R;G;Bm\\]包裹\n        return \"\\\\[\\\\033[38;2;\".concat(r, \";\").concat(g, \";\").concat(b, \"m\\\\]\");\n    } else {\n        return \"%F{#\".concat(hex, \"}\");\n    }\n}\nfunction escapeBash(str) {\n    // 转义 $、`、\"，防止bash解析错误\n    return str.replace(/([$`\"\\\\])/g, \"\\\\$1\");\n}\nconst symbolMap = {\n    user: \"\\\\u\",\n    host: \"\\\\h\",\n    cwd: \"\\\\w\",\n    time: \"\\\\t\",\n    git: '$(git branch 2>/dev/null | grep \"^*\" | colrm 1 2)',\n    symbol: \"$\"\n};\nconst Result = (param)=>{\n    let { shell, elements } = param;\n    const enabled = elements.filter((e)=>e.enabled);\n    let ps1 = \"\";\n    enabled.forEach((e, idx)=>{\n        if (e.key === \"newline\") {\n            ps1 += shell === \"bash\" ? \"\\\\n\" : \"%n\";\n        } else {\n            ps1 += colorToShell(e.color, shell) + (symbolMap[e.key] || \"\");\n        }\n        if (idx !== enabled.length - 1) ps1 += \" \";\n    });\n    // Reset color\n    ps1 += shell === \"bash\" ? \"\\\\[\\\\033[0m\\\\]\" : \"%f\";\n    let exportCmd = \"\";\n    if (shell === \"bash\") {\n        exportCmd = 'export PS1=\"'.concat(ps1, '\"');\n    } else {\n        exportCmd = \"export PS1='\".concat(ps1, \"'\");\n    }\n    // 复制功能\n    const handleCopy = async ()=>{\n        await navigator.clipboard.writeText(exportCmd);\n        alert(\"已复制到剪贴板！\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"mt-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"font-semibold mb-2 text-white flex items-center gap-2\",\n                children: [\n                    \"Generated configuration command:\",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: handleCopy,\n                        className: \"ml-2 px-2 py-1 rounded bg-gradient-to-r from-green-500 to-blue-500 text-white text-xs font-bold shadow hover:scale-105 transition-transform\",\n                        children: \"复制\"\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Result.tsx\",\n                        lineNumber: 75,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Result.tsx\",\n                lineNumber: 73,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-black/80 rounded-lg p-3 font-mono text-base text-green-400 break-all select-all mb-2 border border-white/10 shadow-inner\",\n                children: exportCmd\n            }, void 0, false, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Result.tsx\",\n                lineNumber: 82,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-gray-300 text-sm\",\n                children: [\n                    \"Copy the above command to the end of your \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                        children: shell === \"bash\" ? \"~/.bashrc\" : \"~/.zshrc\"\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Result.tsx\",\n                        lineNumber: 86,\n                        columnNumber: 51\n                    }, undefined),\n                    \" file, or run it directly in your terminal to take effect.\"\n                ]\n            }, void 0, true, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Result.tsx\",\n                lineNumber: 85,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/Result.tsx\",\n        lineNumber: 72,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Result;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Result);\nvar _c;\n$RefreshReg$(_c, \"Result\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1Jlc3VsdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDMEI7QUFjMUIsc0JBQXNCO0FBQ3RCLFNBQVNDLGFBQWFDLEtBQWEsRUFBRUMsS0FBcUI7SUFDeEQsTUFBTUMsTUFBTUYsTUFBTUcsT0FBTyxDQUFDLEtBQUs7SUFDL0IsTUFBTUMsSUFBSUMsU0FBU0gsSUFBSUksS0FBSyxDQUFDLEdBQUcsSUFBSTtJQUNwQyxNQUFNQyxJQUFJRixTQUFTSCxJQUFJSSxLQUFLLENBQUMsR0FBRyxJQUFJO0lBQ3BDLE1BQU1FLElBQUlILFNBQVNILElBQUlJLEtBQUssQ0FBQyxHQUFHLElBQUk7SUFDcEMsSUFBSUwsVUFBVSxRQUFRO1FBQ3BCLDBCQUEwQjtRQUMxQixPQUFPLGlCQUFzQk0sT0FBTEgsR0FBRSxLQUFRSSxPQUFMRCxHQUFFLEtBQUssT0FBRkMsR0FBRTtJQUN0QyxPQUFPO1FBQ0wsT0FBTyxPQUFXLE9BQUpOLEtBQUk7SUFDcEI7QUFDRjtBQUVBLFNBQVNPLFdBQVdDLEdBQVc7SUFDN0Isc0JBQXNCO0lBQ3RCLE9BQU9BLElBQUlQLE9BQU8sQ0FBQyxjQUFjO0FBQ25DO0FBRUEsTUFBTVEsWUFBb0M7SUFDeENDLE1BQU07SUFDTkMsTUFBTTtJQUNOQyxLQUFLO0lBQ0xDLE1BQU07SUFDTkMsS0FBSztJQUNMQyxRQUFRO0FBQ1Y7QUFFQSxNQUFNQyxTQUFnQztRQUFDLEVBQUVqQixLQUFLLEVBQUVrQixRQUFRLEVBQUU7SUFDeEQsTUFBTUMsVUFBVUQsU0FBU0UsTUFBTSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFRixPQUFPO0lBQzlDLElBQUlHLE1BQU07SUFDVkgsUUFBUUksT0FBTyxDQUFDLENBQUNGLEdBQUdHO1FBQ2xCLElBQUlILEVBQUVJLEdBQUcsS0FBSyxXQUFXO1lBQ3ZCSCxPQUFPdEIsVUFBVSxTQUFTLFFBQVE7UUFDcEMsT0FBTztZQUNMc0IsT0FBT3hCLGFBQWF1QixFQUFFdEIsS0FBSyxFQUFFQyxTQUFVVSxDQUFBQSxTQUFTLENBQUNXLEVBQUVJLEdBQUcsQ0FBQyxJQUFJLEVBQUM7UUFDOUQ7UUFDQSxJQUFJRCxRQUFRTCxRQUFRTyxNQUFNLEdBQUcsR0FBR0osT0FBTztJQUN6QztJQUNBLGNBQWM7SUFDZEEsT0FBT3RCLFVBQVUsU0FBUyxtQkFBbUI7SUFFN0MsSUFBSTJCLFlBQVk7SUFDaEIsSUFBSTNCLFVBQVUsUUFBUTtRQUNwQjJCLFlBQVksZUFBb0IsT0FBSkwsS0FBSTtJQUNsQyxPQUFPO1FBQ0xLLFlBQVksZUFBbUIsT0FBSkwsS0FBSTtJQUNqQztJQUVBLE9BQU87SUFDUCxNQUFNTSxhQUFhO1FBQ2pCLE1BQU1DLFVBQVVDLFNBQVMsQ0FBQ0MsU0FBUyxDQUFDSjtRQUNwQ0ssTUFBTTtJQUNSO0lBRUEscUJBQ0UsOERBQUNDO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDQztnQkFBR0QsV0FBVTs7b0JBQXdEO2tDQUVwRSw4REFBQ0U7d0JBQ0NDLFNBQVNUO3dCQUNUTSxXQUFVO2tDQUNYOzs7Ozs7Ozs7Ozs7MEJBSUgsOERBQUNEO2dCQUFJQyxXQUFVOzBCQUNaUDs7Ozs7OzBCQUVILDhEQUFDTTtnQkFBSUMsV0FBVTs7b0JBQXdCO2tDQUNLLDhEQUFDM0I7a0NBQUdQLFVBQVUsU0FBUyxjQUFjOzs7Ozs7b0JBQWU7Ozs7Ozs7Ozs7Ozs7QUFJdEc7S0E5Q01pQjtBQWdETiwrREFBZUEsTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9SZXN1bHQudHN4PzFmZjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbnRlcmZhY2UgRWxlbWVudCB7XHJcbiAga2V5OiBzdHJpbmc7XHJcbiAgbGFiZWw6IHN0cmluZztcclxuICBlbmFibGVkOiBib29sZWFuO1xyXG4gIGNvbG9yOiBzdHJpbmc7XHJcbn1cclxuXHJcbmludGVyZmFjZSBSZXN1bHRQcm9wcyB7XHJcbiAgc2hlbGw6ICdiYXNoJyB8ICd6c2gnO1xyXG4gIGVsZW1lbnRzOiBFbGVtZW50W107XHJcbn1cclxuXHJcbi8vIENvbG9yIHRvIHNoZWxsIGNvZGVcclxuZnVuY3Rpb24gY29sb3JUb1NoZWxsKGNvbG9yOiBzdHJpbmcsIHNoZWxsOiAnYmFzaCcgfCAnenNoJykge1xyXG4gIGNvbnN0IGhleCA9IGNvbG9yLnJlcGxhY2UoJyMnLCAnJyk7XHJcbiAgY29uc3QgciA9IHBhcnNlSW50KGhleC5zbGljZSgwLCAyKSwgMTYpO1xyXG4gIGNvbnN0IGcgPSBwYXJzZUludChoZXguc2xpY2UoMiwgNCksIDE2KTtcclxuICBjb25zdCBiID0gcGFyc2VJbnQoaGV4LnNsaWNlKDQsIDYpLCAxNik7XHJcbiAgaWYgKHNoZWxsID09PSAnYmFzaCcpIHtcclxuICAgIC8vIOeUqFxcW1xcMDMzWzM4OzI7UjtHO0JtXFxd5YyF6KO5XHJcbiAgICByZXR1cm4gYFxcXFxbXFxcXDAzM1szODsyOyR7cn07JHtnfTske2J9bVxcXFxdYDtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGAlRnsjJHtoZXh9fWA7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBlc2NhcGVCYXNoKHN0cjogc3RyaW5nKSB7XHJcbiAgLy8g6L2s5LmJICTjgIFg44CBXCLvvIzpmLLmraJiYXNo6Kej5p6Q6ZSZ6K+vXHJcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oWyRgXCJcXFxcXSkvZywgJ1xcXFwkMScpO1xyXG59XHJcblxyXG5jb25zdCBzeW1ib2xNYXA6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XHJcbiAgdXNlcjogJ1xcXFx1JyxcclxuICBob3N0OiAnXFxcXGgnLFxyXG4gIGN3ZDogJ1xcXFx3JyxcclxuICB0aW1lOiAnXFxcXHQnLFxyXG4gIGdpdDogJyQoZ2l0IGJyYW5jaCAyPi9kZXYvbnVsbCB8IGdyZXAgXCJeKlwiIHwgY29scm0gMSAyKScsXHJcbiAgc3ltYm9sOiAnJCcsXHJcbn07XHJcblxyXG5jb25zdCBSZXN1bHQ6IFJlYWN0LkZDPFJlc3VsdFByb3BzPiA9ICh7IHNoZWxsLCBlbGVtZW50cyB9KSA9PiB7XHJcbiAgY29uc3QgZW5hYmxlZCA9IGVsZW1lbnRzLmZpbHRlcihlID0+IGUuZW5hYmxlZCk7XHJcbiAgbGV0IHBzMSA9ICcnO1xyXG4gIGVuYWJsZWQuZm9yRWFjaCgoZSwgaWR4KSA9PiB7XHJcbiAgICBpZiAoZS5rZXkgPT09ICduZXdsaW5lJykge1xyXG4gICAgICBwczEgKz0gc2hlbGwgPT09ICdiYXNoJyA/ICdcXFxcbicgOiAnJW4nO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcHMxICs9IGNvbG9yVG9TaGVsbChlLmNvbG9yLCBzaGVsbCkgKyAoc3ltYm9sTWFwW2Uua2V5XSB8fCAnJyk7XHJcbiAgICB9XHJcbiAgICBpZiAoaWR4ICE9PSBlbmFibGVkLmxlbmd0aCAtIDEpIHBzMSArPSAnICc7XHJcbiAgfSk7XHJcbiAgLy8gUmVzZXQgY29sb3JcclxuICBwczEgKz0gc2hlbGwgPT09ICdiYXNoJyA/ICdcXFxcW1xcXFwwMzNbMG1cXFxcXScgOiAnJWYnO1xyXG5cclxuICBsZXQgZXhwb3J0Q21kID0gJyc7XHJcbiAgaWYgKHNoZWxsID09PSAnYmFzaCcpIHtcclxuICAgIGV4cG9ydENtZCA9IGBleHBvcnQgUFMxPVxcXCIke3BzMX1cXFwiYDtcclxuICB9IGVsc2Uge1xyXG4gICAgZXhwb3J0Q21kID0gYGV4cG9ydCBQUzE9JyR7cHMxfSdgO1xyXG4gIH1cclxuXHJcbiAgLy8g5aSN5Yi25Yqf6IO9XHJcbiAgY29uc3QgaGFuZGxlQ29weSA9IGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IG5hdmlnYXRvci5jbGlwYm9hcmQud3JpdGVUZXh0KGV4cG9ydENtZCk7XHJcbiAgICBhbGVydCgn5bey5aSN5Yi25Yiw5Ymq6LS05p2/77yBJyk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtNFwiPlxyXG4gICAgICA8aDIgY2xhc3NOYW1lPVwiZm9udC1zZW1pYm9sZCBtYi0yIHRleHQtd2hpdGUgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTJcIj5cclxuICAgICAgICBHZW5lcmF0ZWQgY29uZmlndXJhdGlvbiBjb21tYW5kOlxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNvcHl9XHJcbiAgICAgICAgICBjbGFzc05hbWU9XCJtbC0yIHB4LTIgcHktMSByb3VuZGVkIGJnLWdyYWRpZW50LXRvLXIgZnJvbS1ncmVlbi01MDAgdG8tYmx1ZS01MDAgdGV4dC13aGl0ZSB0ZXh0LXhzIGZvbnQtYm9sZCBzaGFkb3cgaG92ZXI6c2NhbGUtMTA1IHRyYW5zaXRpb24tdHJhbnNmb3JtXCJcclxuICAgICAgICA+XHJcbiAgICAgICAgICDlpI3liLZcclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgPC9oMj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1ibGFjay84MCByb3VuZGVkLWxnIHAtMyBmb250LW1vbm8gdGV4dC1iYXNlIHRleHQtZ3JlZW4tNDAwIGJyZWFrLWFsbCBzZWxlY3QtYWxsIG1iLTIgYm9yZGVyIGJvcmRlci13aGl0ZS8xMCBzaGFkb3ctaW5uZXJcIj5cclxuICAgICAgICB7ZXhwb3J0Q21kfVxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktMzAwIHRleHQtc21cIj5cclxuICAgICAgICBDb3B5IHRoZSBhYm92ZSBjb21tYW5kIHRvIHRoZSBlbmQgb2YgeW91ciA8Yj57c2hlbGwgPT09ICdiYXNoJyA/ICd+Ly5iYXNocmMnIDogJ34vLnpzaHJjJ308L2I+IGZpbGUsIG9yIHJ1biBpdCBkaXJlY3RseSBpbiB5b3VyIHRlcm1pbmFsIHRvIHRha2UgZWZmZWN0LlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBSZXN1bHQ7ICJdLCJuYW1lcyI6WyJSZWFjdCIsImNvbG9yVG9TaGVsbCIsImNvbG9yIiwic2hlbGwiLCJoZXgiLCJyZXBsYWNlIiwiciIsInBhcnNlSW50Iiwic2xpY2UiLCJnIiwiYiIsImVzY2FwZUJhc2giLCJzdHIiLCJzeW1ib2xNYXAiLCJ1c2VyIiwiaG9zdCIsImN3ZCIsInRpbWUiLCJnaXQiLCJzeW1ib2wiLCJSZXN1bHQiLCJlbGVtZW50cyIsImVuYWJsZWQiLCJmaWx0ZXIiLCJlIiwicHMxIiwiZm9yRWFjaCIsImlkeCIsImtleSIsImxlbmd0aCIsImV4cG9ydENtZCIsImhhbmRsZUNvcHkiLCJuYXZpZ2F0b3IiLCJjbGlwYm9hcmQiLCJ3cml0ZVRleHQiLCJhbGVydCIsImRpdiIsImNsYXNzTmFtZSIsImgyIiwiYnV0dG9uIiwib25DbGljayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Result.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ShellSelector.tsx":
/*!******************************************!*\
  !*** ./src/components/ShellSelector.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst ShellSelector = (param)=>{\n    let { shell, setShell } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"font-medium text-white\",\n                children: \"Select Shell:\"\n            }, void 0, false, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ShellSelector.tsx\",\n                lineNumber: 11,\n                columnNumber: 5\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                className: \"border border-white/30 bg-white/10 text-white rounded px-3 py-2 shadow focus:outline-none focus:ring-2 focus:ring-blue-400 transition\",\n                value: shell,\n                onChange: (e)=>setShell(e.target.value),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                        value: \"bash\",\n                        children: \"Bash\"\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ShellSelector.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 7\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                        value: \"zsh\",\n                        children: \"Zsh\"\n                    }, void 0, false, {\n                        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ShellSelector.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 7\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ShellSelector.tsx\",\n                lineNumber: 12,\n                columnNumber: 5\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/mnt/c/Users/junhaochen/Documents/myPS1/src/components/ShellSelector.tsx\",\n        lineNumber: 10,\n        columnNumber: 3\n    }, undefined);\n};\n_c = ShellSelector;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ShellSelector);\nvar _c;\n$RefreshReg$(_c, \"ShellSelector\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1NoZWxsU2VsZWN0b3IudHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBQzBCO0FBTzFCLE1BQU1DLGdCQUE4QztRQUFDLEVBQUVDLEtBQUssRUFBRUMsUUFBUSxFQUFFO3lCQUN0RSw4REFBQ0M7UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUNDO2dCQUFLRCxXQUFVOzBCQUF5Qjs7Ozs7OzBCQUN6Qyw4REFBQ0U7Z0JBQ0NGLFdBQVU7Z0JBQ1ZHLE9BQU9OO2dCQUNQTyxVQUFVQyxDQUFBQSxJQUFLUCxTQUFTTyxFQUFFQyxNQUFNLENBQUNILEtBQUs7O2tDQUV0Qyw4REFBQ0k7d0JBQU9KLE9BQU07a0NBQU87Ozs7OztrQ0FDckIsOERBQUNJO3dCQUFPSixPQUFNO2tDQUFNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBVHBCUDtBQWNOLCtEQUFlQSxhQUFhQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL1NoZWxsU2VsZWN0b3IudHN4PzJmMGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG5pbnRlcmZhY2UgU2hlbGxTZWxlY3RvclByb3BzIHtcclxuICBzaGVsbDogJ2Jhc2gnIHwgJ3pzaCc7XHJcbiAgc2V0U2hlbGw6IChzaGVsbDogJ2Jhc2gnIHwgJ3pzaCcpID0+IHZvaWQ7XHJcbn1cclxuXHJcbmNvbnN0IFNoZWxsU2VsZWN0b3I6IFJlYWN0LkZDPFNoZWxsU2VsZWN0b3JQcm9wcz4gPSAoeyBzaGVsbCwgc2V0U2hlbGwgfSkgPT4gKFxyXG4gIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTRcIj5cclxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtIHRleHQtd2hpdGVcIj5TZWxlY3QgU2hlbGw6PC9zcGFuPlxyXG4gICAgPHNlbGVjdFxyXG4gICAgICBjbGFzc05hbWU9XCJib3JkZXIgYm9yZGVyLXdoaXRlLzMwIGJnLXdoaXRlLzEwIHRleHQtd2hpdGUgcm91bmRlZCBweC0zIHB5LTIgc2hhZG93IGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTQwMCB0cmFuc2l0aW9uXCJcclxuICAgICAgdmFsdWU9e3NoZWxsfVxyXG4gICAgICBvbkNoYW5nZT17ZSA9PiBzZXRTaGVsbChlLnRhcmdldC52YWx1ZSBhcyAnYmFzaCcgfCAnenNoJyl9XHJcbiAgICA+XHJcbiAgICAgIDxvcHRpb24gdmFsdWU9XCJiYXNoXCI+QmFzaDwvb3B0aW9uPlxyXG4gICAgICA8b3B0aW9uIHZhbHVlPVwienNoXCI+WnNoPC9vcHRpb24+XHJcbiAgICA8L3NlbGVjdD5cclxuICA8L2Rpdj5cclxuKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFNoZWxsU2VsZWN0b3I7ICJdLCJuYW1lcyI6WyJSZWFjdCIsIlNoZWxsU2VsZWN0b3IiLCJzaGVsbCIsInNldFNoZWxsIiwiZGl2IiwiY2xhc3NOYW1lIiwic3BhbiIsInNlbGVjdCIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0Iiwib3B0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ShellSelector.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/defineProperty.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _defineProperty; }\n/* harmony export */ });\n/* harmony import */ var _toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPropertyKey.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\");\n\nfunction _defineProperty(e, r, t) {\n    return (r = (0,_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r)) in e ? Object.defineProperty(e, r, {\n        value: t,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n    }) : e[r] = t, e;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUMvQyxTQUFTQyxnQkFBZ0JDLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzlCLE9BQU8sQ0FBQ0QsSUFBSUgsNkRBQWFBLENBQUNHLEVBQUMsS0FBTUQsSUFBSUcsT0FBT0MsY0FBYyxDQUFDSixHQUFHQyxHQUFHO1FBQy9ESSxPQUFPSDtRQUNQSSxZQUFZLENBQUM7UUFDYkMsY0FBYyxDQUFDO1FBQ2ZDLFVBQVUsQ0FBQztJQUNiLEtBQUtSLENBQUMsQ0FBQ0MsRUFBRSxHQUFHQyxHQUFHRjtBQUNqQjtBQUNzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkuanM/NDJiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdG9Qcm9wZXJ0eUtleSBmcm9tIFwiLi90b1Byb3BlcnR5S2V5LmpzXCI7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkoZSwgciwgdCkge1xuICByZXR1cm4gKHIgPSB0b1Byb3BlcnR5S2V5KHIpKSBpbiBlID8gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIHtcbiAgICB2YWx1ZTogdCxcbiAgICBlbnVtZXJhYmxlOiAhMCxcbiAgICBjb25maWd1cmFibGU6ICEwLFxuICAgIHdyaXRhYmxlOiAhMFxuICB9KSA6IGVbcl0gPSB0LCBlO1xufVxuZXhwb3J0IHsgX2RlZmluZVByb3BlcnR5IGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOlsidG9Qcm9wZXJ0eUtleSIsIl9kZWZpbmVQcm9wZXJ0eSIsImUiLCJyIiwidCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _extends; }\n/* harmony export */ });\nfunction _extends() {\n    return _extends = Object.assign ? Object.assign.bind() : function(n) {\n        for(var e = 1; e < arguments.length; e++){\n            var t = arguments[e];\n            for(var r in t)({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n        }\n        return n;\n    }, _extends.apply(null, arguments);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxTQUFTQTtJQUNQLE9BQU9BLFdBQVdDLE9BQU9DLE1BQU0sR0FBR0QsT0FBT0MsTUFBTSxDQUFDQyxJQUFJLEtBQUssU0FBVUMsQ0FBQztRQUNsRSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUMsVUFBVUMsTUFBTSxFQUFFRixJQUFLO1lBQ3pDLElBQUlHLElBQUlGLFNBQVMsQ0FBQ0QsRUFBRTtZQUNwQixJQUFLLElBQUlJLEtBQUtELEVBQUcsQ0FBQyxDQUFDLEdBQUdFLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDSCxHQUFHQyxNQUFPTCxDQUFBQSxDQUFDLENBQUNLLEVBQUUsR0FBR0QsQ0FBQyxDQUFDQyxFQUFFO1FBQ2pFO1FBQ0EsT0FBT0w7SUFDVCxHQUFHSixTQUFTWSxLQUFLLENBQUMsTUFBTU47QUFDMUI7QUFDK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanM/OGVjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgcmV0dXJuIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKG4pIHtcbiAgICBmb3IgKHZhciBlID0gMTsgZSA8IGFyZ3VtZW50cy5sZW5ndGg7IGUrKykge1xuICAgICAgdmFyIHQgPSBhcmd1bWVudHNbZV07XG4gICAgICBmb3IgKHZhciByIGluIHQpICh7fSkuaGFzT3duUHJvcGVydHkuY2FsbCh0LCByKSAmJiAobltyXSA9IHRbcl0pO1xuICAgIH1cbiAgICByZXR1cm4gbjtcbiAgfSwgX2V4dGVuZHMuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn1cbmV4cG9ydCB7IF9leHRlbmRzIGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOlsiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJiaW5kIiwibiIsImUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ0IiwiciIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/extends.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _inheritsLoose; }\n/* harmony export */ });\n/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setPrototypeOf.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\");\n\nfunction _inheritsLoose(t, o) {\n    t.prototype = Object.create(o.prototype), t.prototype.constructor = t, (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(t, o);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0c0xvb3NlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEO0FBQ2pELFNBQVNDLGVBQWVDLENBQUMsRUFBRUMsQ0FBQztJQUMxQkQsRUFBRUUsU0FBUyxHQUFHQyxPQUFPQyxNQUFNLENBQUNILEVBQUVDLFNBQVMsR0FBR0YsRUFBRUUsU0FBUyxDQUFDRyxXQUFXLEdBQUdMLEdBQUdGLDhEQUFjQSxDQUFDRSxHQUFHQztBQUMzRjtBQUNxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcz9kZjQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiO1xuZnVuY3Rpb24gX2luaGVyaXRzTG9vc2UodCwgbykge1xuICB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoby5wcm90b3R5cGUpLCB0LnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IHQsIHNldFByb3RvdHlwZU9mKHQsIG8pO1xufVxuZXhwb3J0IHsgX2luaGVyaXRzTG9vc2UgYXMgZGVmYXVsdCB9OyJdLCJuYW1lcyI6WyJzZXRQcm90b3R5cGVPZiIsIl9pbmhlcml0c0xvb3NlIiwidCIsIm8iLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectSpread2.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _objectSpread2; }\n/* harmony export */ });\n/* harmony import */ var _defineProperty_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defineProperty.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n\nfunction ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread2(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            (0,_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlEO0FBQ2pELFNBQVNDLFFBQVFDLENBQUMsRUFBRUMsQ0FBQztJQUNuQixJQUFJQyxJQUFJQyxPQUFPQyxJQUFJLENBQUNKO0lBQ3BCLElBQUlHLE9BQU9FLHFCQUFxQixFQUFFO1FBQ2hDLElBQUlDLElBQUlILE9BQU9FLHFCQUFxQixDQUFDTDtRQUNyQ0MsS0FBTUssQ0FBQUEsSUFBSUEsRUFBRUMsTUFBTSxDQUFDLFNBQVVOLENBQUM7WUFDNUIsT0FBT0UsT0FBT0ssd0JBQXdCLENBQUNSLEdBQUdDLEdBQUdRLFVBQVU7UUFDekQsRUFBQyxHQUFJUCxFQUFFUSxJQUFJLENBQUNDLEtBQUssQ0FBQ1QsR0FBR0k7SUFDdkI7SUFDQSxPQUFPSjtBQUNUO0FBQ0EsU0FBU1UsZUFBZVosQ0FBQztJQUN2QixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVksVUFBVUMsTUFBTSxFQUFFYixJQUFLO1FBQ3pDLElBQUlDLElBQUksUUFBUVcsU0FBUyxDQUFDWixFQUFFLEdBQUdZLFNBQVMsQ0FBQ1osRUFBRSxHQUFHLENBQUM7UUFDL0NBLElBQUksSUFBSUYsUUFBUUksT0FBT0QsSUFBSSxDQUFDLEdBQUdhLE9BQU8sQ0FBQyxTQUFVZCxDQUFDO1lBQ2hESCw4REFBY0EsQ0FBQ0UsR0FBR0MsR0FBR0MsQ0FBQyxDQUFDRCxFQUFFO1FBQzNCLEtBQUtFLE9BQU9hLHlCQUF5QixHQUFHYixPQUFPYyxnQkFBZ0IsQ0FBQ2pCLEdBQUdHLE9BQU9hLHlCQUF5QixDQUFDZCxNQUFNSCxRQUFRSSxPQUFPRCxJQUFJYSxPQUFPLENBQUMsU0FBVWQsQ0FBQztZQUM5SUUsT0FBT0wsY0FBYyxDQUFDRSxHQUFHQyxHQUFHRSxPQUFPSyx3QkFBd0IsQ0FBQ04sR0FBR0Q7UUFDakU7SUFDRjtJQUNBLE9BQU9EO0FBQ1Q7QUFDcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanM/M2IxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVmaW5lUHJvcGVydHkgZnJvbSBcIi4vZGVmaW5lUHJvcGVydHkuanNcIjtcbmZ1bmN0aW9uIG93bktleXMoZSwgcikge1xuICB2YXIgdCA9IE9iamVjdC5rZXlzKGUpO1xuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtcbiAgICByICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24gKHIpIHtcbiAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7XG4gICAgfSkpLCB0LnB1c2guYXBwbHkodCwgbyk7XG4gIH1cbiAgcmV0dXJuIHQ7XG59XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkMihlKSB7XG4gIGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7XG4gICAgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9O1xuICAgIHIgJSAyID8gb3duS2V5cyhPYmplY3QodCksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7XG4gICAgICBkZWZpbmVQcm9wZXJ0eShlLCByLCB0W3JdKTtcbiAgICB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsIHIpKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gZTtcbn1cbmV4cG9ydCB7IF9vYmplY3RTcHJlYWQyIGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOlsiZGVmaW5lUHJvcGVydHkiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm8iLCJmaWx0ZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwicHVzaCIsImFwcGx5IiwiX29iamVjdFNwcmVhZDIiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJmb3JFYWNoIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectSpread2.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _objectWithoutPropertiesLoose; }\n/* harmony export */ });\nfunction _objectWithoutPropertiesLoose(r, e) {\n    if (null == r) return {};\n    var t = {};\n    for(var n in r)if (({}).hasOwnProperty.call(r, n)) {\n        if (-1 !== e.indexOf(n)) continue;\n        t[n] = r[n];\n    }\n    return t;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxTQUFTQSw4QkFBOEJDLENBQUMsRUFBRUMsQ0FBQztJQUN6QyxJQUFJLFFBQVFELEdBQUcsT0FBTyxDQUFDO0lBQ3ZCLElBQUlFLElBQUksQ0FBQztJQUNULElBQUssSUFBSUMsS0FBS0gsRUFBRyxJQUFJLEVBQUMsR0FBRUksY0FBYyxDQUFDQyxJQUFJLENBQUNMLEdBQUdHLElBQUk7UUFDakQsSUFBSSxDQUFDLE1BQU1GLEVBQUVLLE9BQU8sQ0FBQ0gsSUFBSTtRQUN6QkQsQ0FBQyxDQUFDQyxFQUFFLEdBQUdILENBQUMsQ0FBQ0csRUFBRTtJQUNiO0lBQ0EsT0FBT0Q7QUFDVDtBQUNvRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcz9lOWE1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHIsIGUpIHtcbiAgaWYgKG51bGwgPT0gcikgcmV0dXJuIHt9O1xuICB2YXIgdCA9IHt9O1xuICBmb3IgKHZhciBuIGluIHIpIGlmICh7fS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsIG4pKSB7XG4gICAgaWYgKC0xICE9PSBlLmluZGV4T2YobikpIGNvbnRpbnVlO1xuICAgIHRbbl0gPSByW25dO1xuICB9XG4gIHJldHVybiB0O1xufVxuZXhwb3J0IHsgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgYXMgZGVmYXVsdCB9OyJdLCJuYW1lcyI6WyJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSIsInIiLCJlIiwidCIsIm4iLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbmRleE9mIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _setPrototypeOf; }\n/* harmony export */ });\nfunction _setPrototypeOf(t, e) {\n    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {\n        return t.__proto__ = e, t;\n    }, _setPrototypeOf(t, e);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsU0FBU0EsZ0JBQWdCQyxDQUFDLEVBQUVDLENBQUM7SUFDM0IsT0FBT0Ysa0JBQWtCRyxPQUFPQyxjQUFjLEdBQUdELE9BQU9DLGNBQWMsQ0FBQ0MsSUFBSSxLQUFLLFNBQVVKLENBQUMsRUFBRUMsQ0FBQztRQUM1RixPQUFPRCxFQUFFSyxTQUFTLEdBQUdKLEdBQUdEO0lBQzFCLEdBQUdELGdCQUFnQkMsR0FBR0M7QUFDeEI7QUFDc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NldFByb3RvdHlwZU9mLmpzPzE5OTUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHtcbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkge1xuICAgIHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7XG4gIH0sIF9zZXRQcm90b3R5cGVPZih0LCBlKTtcbn1cbmV4cG9ydCB7IF9zZXRQcm90b3R5cGVPZiBhcyBkZWZhdWx0IH07Il0sIm5hbWVzIjpbIl9zZXRQcm90b3R5cGVPZiIsInQiLCJlIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJiaW5kIiwiX19wcm90b19fIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPrimitive.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ toPrimitive; }\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n\nfunction toPrimitive(t, r) {\n    if (\"object\" != (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(t) || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(i)) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b1ByaW1pdGl2ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrQztBQUNsQyxTQUFTQyxZQUFZQyxDQUFDLEVBQUVDLENBQUM7SUFDdkIsSUFBSSxZQUFZSCxzREFBT0EsQ0FBQ0UsTUFBTSxDQUFDQSxHQUFHLE9BQU9BO0lBQ3pDLElBQUlFLElBQUlGLENBQUMsQ0FBQ0csT0FBT0osV0FBVyxDQUFDO0lBQzdCLElBQUksS0FBSyxNQUFNRyxHQUFHO1FBQ2hCLElBQUlFLElBQUlGLEVBQUVHLElBQUksQ0FBQ0wsR0FBR0MsS0FBSztRQUN2QixJQUFJLFlBQVlILHNEQUFPQSxDQUFDTSxJQUFJLE9BQU9BO1FBQ25DLE1BQU0sSUFBSUUsVUFBVTtJQUN0QjtJQUNBLE9BQU8sQ0FBQyxhQUFhTCxJQUFJTSxTQUFTQyxNQUFLLEVBQUdSO0FBQzVDO0FBQ2tDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b1ByaW1pdGl2ZS5qcz8zZTYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfdHlwZW9mIGZyb20gXCIuL3R5cGVvZi5qc1wiO1xuZnVuY3Rpb24gdG9QcmltaXRpdmUodCwgcikge1xuICBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKHQpIHx8ICF0KSByZXR1cm4gdDtcbiAgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07XG4gIGlmICh2b2lkIDAgIT09IGUpIHtcbiAgICB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTtcbiAgICBpZiAoXCJvYmplY3RcIiAhPSBfdHlwZW9mKGkpKSByZXR1cm4gaTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7XG4gIH1cbiAgcmV0dXJuIChcInN0cmluZ1wiID09PSByID8gU3RyaW5nIDogTnVtYmVyKSh0KTtcbn1cbmV4cG9ydCB7IHRvUHJpbWl0aXZlIGFzIGRlZmF1bHQgfTsiXSwibmFtZXMiOlsiX3R5cGVvZiIsInRvUHJpbWl0aXZlIiwidCIsInIiLCJlIiwiU3ltYm9sIiwiaSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ toPropertyKey; }\n/* harmony export */ });\n/* harmony import */ var _typeof_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeof.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var _toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toPrimitive.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js\");\n\n\nfunction toPropertyKey(t) {\n    var i = (0,_toPrimitive_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(t, \"string\");\n    return \"symbol\" == (0,_typeof_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(i) ? i : i + \"\";\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b1Byb3BlcnR5S2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFrQztBQUNTO0FBQzNDLFNBQVNFLGNBQWNDLENBQUM7SUFDdEIsSUFBSUMsSUFBSUgsMkRBQVdBLENBQUNFLEdBQUc7SUFDdkIsT0FBTyxZQUFZSCxzREFBT0EsQ0FBQ0ksS0FBS0EsSUFBSUEsSUFBSTtBQUMxQztBQUNvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Qcm9wZXJ0eUtleS5qcz8xY2JmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfdHlwZW9mIGZyb20gXCIuL3R5cGVvZi5qc1wiO1xuaW1wb3J0IHRvUHJpbWl0aXZlIGZyb20gXCIuL3RvUHJpbWl0aXZlLmpzXCI7XG5mdW5jdGlvbiB0b1Byb3BlcnR5S2V5KHQpIHtcbiAgdmFyIGkgPSB0b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTtcbiAgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjtcbn1cbmV4cG9ydCB7IHRvUHJvcGVydHlLZXkgYXMgZGVmYXVsdCB9OyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwidG9QcmltaXRpdmUiLCJ0b1Byb3BlcnR5S2V5IiwidCIsImkiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _typeof; }\n/* harmony export */ });\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLFFBQVFDLENBQUM7SUFDaEI7SUFFQSxPQUFPRCxVQUFVLGNBQWMsT0FBT0UsVUFBVSxZQUFZLE9BQU9BLE9BQU9DLFFBQVEsR0FBRyxTQUFVRixDQUFDO1FBQzlGLE9BQU8sT0FBT0E7SUFDaEIsSUFBSSxTQUFVQSxDQUFDO1FBQ2IsT0FBT0EsS0FBSyxjQUFjLE9BQU9DLFVBQVVELEVBQUVHLFdBQVcsS0FBS0YsVUFBVUQsTUFBTUMsT0FBT0csU0FBUyxHQUFHLFdBQVcsT0FBT0o7SUFDcEgsR0FBR0QsUUFBUUM7QUFDYjtBQUM4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzP2IwZmEiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvO1xuICB9IDogZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbztcbiAgfSwgX3R5cGVvZihvKTtcbn1cbmV4cG9ydCB7IF90eXBlb2YgYXMgZGVmYXVsdCB9OyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/typeof.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tiny-invariant/dist/esm/tiny-invariant.js":
/*!****************************************************************!*\
  !*** ./node_modules/tiny-invariant/dist/esm/tiny-invariant.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ invariant; }\n/* harmony export */ });\nvar isProduction = \"development\" === \"production\";\nvar prefix = \"Invariant failed\";\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === \"function\" ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aW55LWludmFyaWFudC9kaXN0L2VzbS90aW55LWludmFyaWFudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsZUFBZUMsa0JBQXlCO0FBQzVDLElBQUlDLFNBQVM7QUFDYixTQUFTQyxVQUFVQyxTQUFTLEVBQUVDLE9BQU87SUFDakMsSUFBSUQsV0FBVztRQUNYO0lBQ0o7SUFDQSxJQUFJSixjQUFjO1FBQ2QsTUFBTSxJQUFJTSxNQUFNSjtJQUNwQjtJQUNBLElBQUlLLFdBQVcsT0FBT0YsWUFBWSxhQUFhQSxZQUFZQTtJQUMzRCxJQUFJRyxRQUFRRCxXQUFXLEdBQUdFLE1BQU0sQ0FBQ1AsUUFBUSxNQUFNTyxNQUFNLENBQUNGLFlBQVlMO0lBQ2xFLE1BQU0sSUFBSUksTUFBTUU7QUFDcEI7QUFFZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RpbnktaW52YXJpYW50L2Rpc3QvZXNtL3RpbnktaW52YXJpYW50LmpzPzJiMjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbic7XG52YXIgcHJlZml4ID0gJ0ludmFyaWFudCBmYWlsZWQnO1xuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmIChjb25kaXRpb24pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoaXNQcm9kdWN0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihwcmVmaXgpO1xuICAgIH1cbiAgICB2YXIgcHJvdmlkZWQgPSB0eXBlb2YgbWVzc2FnZSA9PT0gJ2Z1bmN0aW9uJyA/IG1lc3NhZ2UoKSA6IG1lc3NhZ2U7XG4gICAgdmFyIHZhbHVlID0gcHJvdmlkZWQgPyBcIlwiLmNvbmNhdChwcmVmaXgsIFwiOiBcIikuY29uY2F0KHByb3ZpZGVkKSA6IHByZWZpeDtcbiAgICB0aHJvdyBuZXcgRXJyb3IodmFsdWUpO1xufVxuXG5leHBvcnQgeyBpbnZhcmlhbnQgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbImlzUHJvZHVjdGlvbiIsInByb2Nlc3MiLCJwcmVmaXgiLCJpbnZhcmlhbnQiLCJjb25kaXRpb24iLCJtZXNzYWdlIiwiRXJyb3IiLCJwcm92aWRlZCIsInZhbHVlIiwiY29uY2F0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2Fmnt%2Fc%2FUsers%2Fjunhaochen%2FDocuments%2FmyPS1%2Fsrc%2Fapp%2Fpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);